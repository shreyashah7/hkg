define(["angular"],function(){globalProvider.compileProvider.directive("ruleField",["$parse","$compile",function(c,b){var a={"Text field":{element:"input",type:"text","class":"form-control"},AutoGenerated:{element:"input",type:"text","class":"form-control"},Date:{element:"ag-datetime-picker",type:"date",editable:true,textBased:true},Datepicker:{element:"input",type:"date","class":"form-control"},"Date range":{element:"input",type:"date","class":"form-control"},"Date time":{element:"input",type:"datetime","class":"form-control"},Time:{element:"input",type:"time","class":"form-control"},Email:{element:"input",type:"email","class":"form-control"},Phone:{element:"input",type:"tel","class":"form-control"},Number:{element:"input",type:"text","class":"form-control"},Decimal:{element:"input",type:"text","class":"form-control"},Password:{element:"input",type:"password","class":"form-control"},"Text area":{element:"textarea","class":"form-control"},Color:{element:"input",type:"color","class":"form-control"},Dropdown:{element:"select","class":"form-control"},"Radio button":{element:"select","class":"form-control"},Checkbox:{element:"select","class":"form-control"},Currency:{element:"input",type:"text","class":"form-control"},Percent:{element:"input",type:"text","class":"form-control"},Formula:{element:"input",type:"text","class":"form-control"},Pointer:{element:"input",type:"text","class":"form-control"},Angle:{element:"input",type:"text","class":"form-control"},formula:{element:"input",type:"text","class":"form-control"}};
return{restrict:"E",replace:true,link:function(n,j,m){var e=m.rfCount;
var f=m.rfSubmitflag;
var k=m.rfValidationFlag;
var g=m.rfHint;
console.log("hint"+g);
if(m.rfOperator==="has any value from"){g="Enter comma seperated values"
}else{g="Enter value"
}var o=a[m.rfType];
console.log("RF TYPE"+JSON.stringify(o));
var l='<ng-form name="template" >';
for(var h=0;
h<e;
h++){if(o!==undefined&&o!==null){if(m.rfType!=="Date range"){console.log("attrs.rfOperator"+m.rfOperator);
if(m.rfOperator!=="has any value"||m.rfOperator!=="has no value"){console.log("submit flag"+f);
l=l+"<div ng-class=\"{'has-error': template.value"+h+".$invalid && (template.value"+h+".$dirty  || "+f+')}" >';
if(m.rfType.trim()==="Decimal"){l=l+"<"+o.element+" maxlength='5' numbers-only=true decimalallowed=true required ng-model='"+m.rfValarray+"["+h+"]' name=\"value"+h+'"  class=" '+o["class"]+'"  '
}else{l=l+"<"+o.element+" required ng-model='"+m.rfValarray+"["+h+"]' name=\"value"+h+'"  class=" '+o["class"]+'"  '
}if(m.rfType.trim()==="Number"||m.rfType.trim()==="Phone"){if(m.rfOperator==="has any value from"){l=l+" ng-pattern='/^[0-9,.]+$/' placeholder=\""+g+'" type="'+o.type+'" />'
}else{l=l+' numbers-only decimalallowed=true placeholder="'+g+'" type="'+o.type+'" />'
}}else{if(m.rfType.trim()==="Currency"||m.rfType.trim()==="Percent"||m.rfType.trim()==="Angle"||m.rfType.trim()==="Formula"){if(m.rfOperator==="has any value from"){l=l+" ng-pattern='/^[0-9.,]+$/'   placeholder=\""+g+'" type="'+o.type+'" />'
}else{l=l+' numbers-only decimalallowed=true  placeholder="'+g+'" type="'+o.type+'" />'
}}else{if(m.rfType.trim()==="Dropdown"||m.rfType.trim()==="Radio button"||m.rfType.trim()==="Checkbox"){if(m.rfOptionList!==null&&m.rfOptions!==null){if(m.rfOperator==="has any value"||m.rfOperator==="has no value"){l=l+'ng-options="option.value as option.label for option in '+m.rfOptions+'"  ui-select2 multiple  >  </'+o.element+">"
}else{l=l+' ng-options="option.value as option.label for option in '+m.rfOptions+"\"  > <option value=''>{{entity + 'Select' | translate}}</option> </"+o.element+">"
}}}else{if(m.rfType.trim()==="Email"){l=l+'  placeholder="'+g+'" type="'+o.type+'" />'
}else{l=l+'  placeholder="'+g+'" type="'+o.type+'" />'
}}}}l+=o.element==="ag-datetime-picker"?"</ag-datetime-picker>":"";
l=l+'<div class="error,help-block" ng-show="template.value'+h+".$invalid  && (template.value"+h+".$dirty  || "+f+')"><span class="help-block" ng-show="(template.value'+h+".$error.required)\">{{ entity+'"+g+'\' | translate}}</span><span class="help-block" ng-show="(!template.value'+h+".$error.required && (template.value"+h+".$dirty || template.value"+h+".$invalid ))\">{{ entity+'Invalid value' | translate}}</span></div></div>"
}}else{l=l+'<div class="form-group" >';
l=l+"<div ng-class=\"{'has-error': template.fromValue"+h+".$invalid && (template.fromValue"+h+".$dirty  || "+f+')}" >';
l=l+'<div class="col-md-5" > ';
l=l+"<"+o.element+"  required ng-model='"+m.rfValarray+"["+(2*h)+"]'  name=\"fromValue"+h+'"  class=" '+o["class"]+'"  ';
l=l+'  type="'+o.type+'" />';
l=l+'<div class="error,help-block" ng-show="template.fromValue'+h+".$invalid  && (template.fromValue"+h+".$dirty  || "+f+')"><span class="help-block" ng-show="(template.fromValue'+h+".$error.required)\">{{ entity+'"+g+"' | translate}}</span></div></div></div><div class=\"col-md-1\">{{entity + 'To' | translate}}</div>";
l=l+'<div class="form-group" >';
l=l+"<div ng-class=\"{'has-error': template.toValue"+h+".$invalid && (template.toValue"+h+".$dirty  || "+f+')}" >';
l=l+'<div class="col-md-5" > ';
l=l+"<"+o.element+"  required ng-model='"+m.rfValarray+"["+((2*h)+1)+"]' name=\"toValue"+h+'"  class=" '+o["class"]+'"  ';
l=l+'  type="'+o.type+'" />';
l=l+'<div class="error,help-block" ng-show="template.toValue'+h+".$invalid  && (template.toValue"+h+".$dirty  || "+f+')"><span class="help-block" ng-show="(template.toValue'+h+".$error.required)\">{{ entity+'"+g+"' | translate}}</span></div></div></div></div>"
}}l=l+"</ng-form>";
var d=b(l)(n);
j.replaceWith(d)
}}}
}])
});