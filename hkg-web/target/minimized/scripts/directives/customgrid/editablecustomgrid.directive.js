define(["angular","dynamicFormGrid","colResizeableDirective","ruleExecutionService","infiniteScroll"],function(){globalProvider.compileProvider.directive("editableCustomGrid",["$compile","DynamicFormService","$filter","RuleExecutionService",function(c,b,e,g){var f=e("orderBy");
var d=function(h){if(angular.isDefined(h.editableGridOptions)){h.supported={text:{width:"200px",align:"left"},date:{width:"200px",align:"left"},datetime:{width:"200px",align:"left"},"datetime-local":{width:"200px",align:"left"},email:{width:"200px",align:"left"},number:{width:"200px",align:"right"},password:{width:"200px",align:"left"},textarea:{width:"200px",align:"left"},time:{width:"200px",align:"left"},url:{width:"200px",align:"left"},checkbox:{width:"50px",align:"left"},color:{width:"200px",align:"left"},file:{width:"200px",align:"left"},range:{width:"200px",align:"right"},select:{width:"200px",align:"left"},subEntity:{width:"200px",align:"left"},pointerselect:{width:"200px",align:"left"},checklist:{width:"200px",align:"left"},fieldset:{width:"200px",align:"left"},radio:{width:"75px",align:"left"},imageUpload:{width:"200px",align:"left"},currency:{width:"200px",align:"right"},fileUpload:{width:"200px",align:"left"},fileDownload:{width:"100px",align:"left"},multiSelect:{width:"300px",align:"left"},percent:{width:"100px",align:"right"},UserMultiSelect:{width:"300px",align:"left"},AutoGenerated:{width:"200px",align:"right"},pointer_multiSelect:{width:"300px",align:"left"},Angle:{width:"100px",align:"right"},formula:{width:"200px",align:"right"},exchangeRate:{width:"200px",align:"right"},}
}};
var a=["$scope","$rootScope","$element",function(s,m,q){s.token=m.authToken;
var n={},k=false,j=null,y,w,x,A={},o,v=[],u;
s.searchEditFlag=true;
if(s.editableGridOptions.enableselection!=false){var r=function(D,i){var C=$(D.target).closest("tr");
C.toggleClass("active");
if(C.hasClass("active")){w.push(s.editableGridOptions.datarows[i])
}else{w.splice(s.editableGridOptions.datarows.indexOf(i),1)
}};
var h=function(D,i){var C=$(D.target).closest("tr");
if(j!=null&&!(j.is(C))){j.removeClass("active")
}j=C;
C.toggleClass("active");
if(C.hasClass("active")){w=s.editableGridOptions.datarows[i]
}else{w=null
}};
if(s.editableGridOptions.multipleselection===true){w=[];
s.selectCurrentRow=r
}else{s.selectCurrentRow=h
}}s.removeRow=function(C,i){$("#row"+C).remove();
s.submitted=false;
if(!i){s.addNewRow(C)
}};
s.createOrUpdateRecord=function(i,C,D,F){s.submitted=true;
if(D.$valid===true){s.submitted=false;
if(i!==null&&i!==undefined&&i.categoryCustom!==null&&i!==undefined){angular.forEach(i.categoryCustom,function(J,H){if(H.split("$").length>0){var I=H.split("$");
if(I[2]=="Date"){J=new Date(J);
i.categoryCustom[H]=J
}}})
}var G={featureName:s.featureName,entityId:i.value,entityType:s.entityType,currentFieldValueMap:i.categoryCustom,dbType:F};
g.executePostRule(G,function(H){if(!!H.validationMessage){var I=m.warning;
m.addMessage(H.validationMessage,I);
return
}else{s.editableGridOptions.createOrUpdateRecord(i,F,function(K){if(K!==null&&K!==undefined){var L=angular.copy(K);
L.isEditGridFlag=false;
L.isLinked=false;
if(L.categoryCustom!=null){for(var N in L.categoryCustom){var M=N.split("$");
if(M[1]==="AG"){var O=L.categoryCustom[N];
if(O!=null||O){var J=O.split("-");
L.categoryCustom[N]=J[1]
}}}}s.editableGridOptions.datarows[C]=angular.copy(L);
s.editableGridOptions.datarowsFromDb[C]=angular.copy(L);
s.getLabelRows(angular.copy(K),C,function(){s.editableGridOptions.totalItems=s.editableGridOptions.totalItems+1;
A={};
if(v.length==1){v.splice(0,1)
}else{v.splice(0,1)
}s.removeRow(C,false);
s.searchEditFlag=true;
i.isEditGridFlag=false
})
}})
}},function(H){})
}else{var E=q[0].querySelector("input.ng-invalid");
if(E){E.focus()
}}};
s.showImagePopup=function(i){s.imageFileNamePopup=i;
$("#galleryPopup").modal("show")
};
s.hideImagePopup=function(){$("#galleryPopup").modal("hide");
m.removeModalOpenCssAfterModalHide()
};
s.showDeletePopup=function(C,i){x=i;
m.deleteRecord=angular.copy(C);
$("#"+s.editableGridOptions.deleteModalId).modal("show")
};
s.deletesRecord=function(){if(m.deleteRecord!==undefined){s.editableGridOptions.deleteRecord(angular.copy(m.deleteRecord));
s.hideDeletePopup()
}};
s.hideDeletePopup=function(){$("#"+s.editableGridOptions.deleteModalId).modal("hide");
if(j!=null&&m.deleteRecord!==undefined&&w.value===m.deleteRecord.value){w=null;
j.removeClass("active")
}m.deleteRecord=undefined
};
s.setFormsss=function(i,C){if(o==undefined){n.dbType=C;
o=i;
n.formObj=o
}};
v=[];
var z=function(i,C,E){s.searchEditFlag=false;
k=true;
var D=0;
s.currentIndex=C;
v.push(angular.copy(i));
angular.forEach(s.editableGridOptions.datarows,function(G,F){if(G.isEditGridFlag&&D==0){n.rowIndex=F;
D++
}});
if(v.length>1){n.tempRecord=angular.copy(v[0])
}if(v.length==1){n.tempRecord=angular.copy(i);
n.rowIndex=C;
if(i.value==null||i.value===undefined){if(s.editableGridOptions.seqId){s.editableGridOptions.seqId(function(F){if(F!==undefined&&F!==null){for(var G in F){if(F.hasOwnProperty(G)){if(G in i.categoryCustom){i.categoryCustom[G]=F[G]
}}}}})
}}i.isEditGridFlag=true;
p(C);
i=angular.copy(i)
}else{s.showConfirmationPopup();
i=angular.copy(i)
}};
s.makeACopyOfOldRecord=function(i,C,D){if(!!i.value){var E={featureName:s.featureName,entityId:i.value,entityType:s.entityType};
g.executePreRule(E,function(F){console.log("pre rule::::"+JSON.stringify(F));
if(!!F.validationMessage){var G=m.warning;
m.addMessage(F.validationMessage,G);
return
}else{z(i,C,D)
}},function(F){})
}else{z(i,C,D)
}};
s.getLabelRows=function(i,C,E){var D=[];
D.push(angular.copy(i));
if(D!==undefined){b.convertorForCustomField(D,function(F){s.editableGridOptions.labelrows[C]=angular.copy(F[0]);
s.editableGridOptions.labelrowsFromDb[C]=angular.copy(F[0]);
E()
},true)
}};
var l=new Date();
var B=l.getFullYear();
s.addNewRow=function(i){if(i==0){u={};
if(s.editableGridOptions.seqId){s.editableGridOptions.seqId(function(C){if(C!==undefined&&C!==null){for(var D in C){if(C.hasOwnProperty(D)){u[D]=C[D]
}}if(s.editableGridOptions.featureName=="Rough Parcel"){var E={isEditGridFlag:false,beforeLabel:B+"-",isLinked:false}
}else{var E={isEditGridFlag:false,beforeLabel:B+"-"}
}E.categoryCustom=u;
s.editableGridOptions.datarows.splice(0,0,E);
s.editableGridOptions.labelrows.splice(0,0,{isEditGridFlag:false})
}else{if(s.editableGridOptions.featureName=="Rough Parcel"){s.editableGridOptions.datarows.splice(0,0,{isEditGridFlag:false,categoryCustom:{},beforeLabel:B+"-",isLinked:false});
s.editableGridOptions.labelrows.splice(0,0,{isEditGridFlag:false})
}else{s.editableGridOptions.datarows.splice(0,0,{isEditGridFlag:false,categoryCustom:{},beforeLabel:B+"-"});
s.editableGridOptions.labelrows.splice(0,0,{isEditGridFlag:false})
}}})
}else{if(s.editableGridOptions.featureName=="Rough Parcel"){s.editableGridOptions.datarows.splice(0,0,{isEditGridFlag:false,categoryCustom:{},beforeLabel:B+"-",isLinked:false});
s.editableGridOptions.labelrows.splice(0,0,{isEditGridFlag:false})
}else{s.editableGridOptions.datarows.splice(0,0,{isEditGridFlag:false,categoryCustom:{},beforeLabel:B+"-"});
s.editableGridOptions.labelrows.splice(0,0,{isEditGridFlag:false})
}}}};
s.clearModelValues=function(i){angular.forEach(i.categoryCustom,function(E,C){if(C.split("$").length>0){var D=C.split("$");
if(D[1]=="UMS"||D[1]=="MS"){$("#"+D[0]).select2("data",[])
}}})
};
s.cancelRowEdit=function(i,C){if(i.value===null||i.value===undefined){s.clearModelValues(i);
u={};
if(s.editableGridOptions.seqId){s.editableGridOptions.seqId(function(D){if(D!==undefined&&D!==null){for(var E in D){if(D.hasOwnProperty(E)){u[E]=D[E]
}}var F={isEditGridFlag:false,beforeLabel:B+"-"};
F.categoryCustom=angular.copy(u);
s.editableGridOptions.datarows[C]=angular.copy(F)
}else{s.editableGridOptions.datarows[C]=angular.copy({isEditGridFlag:false,categoryCustom:{},beforeLabel:B+"-"})
}o=undefined;
s.removeRow(C,true)
})
}else{s.editableGridOptions.datarows[C]=angular.copy({isEditGridFlag:false,categoryCustom:{},beforeLabel:B+"-"});
o=undefined;
s.removeRow(C,true)
}}else{s.clearModelValues(i);
angular.forEach(A.categoryCustom,function(F,D){if(D.split("$").length>0){var E=D.split("$");
if(E[1]=="UMS"||E[1]=="MS"){$("#"+E[0]).select2("val",F.split(","))
}}});
s.editableGridOptions.datarows[C]=v[0];
s.editableGridOptions.datarows[C].isEditGridFlag=false;
s.editableGridOptions.datarows[C].beforeLabel=B+"-";
p(null);
s.removeRow(C,true)
}if(v.length==1){v.splice(0,1)
}else{v.splice(0,1)
}s.searchEditFlag=true
};
s.showConfirmationPopup=function(){$("#"+s.editableGridOptions.cancelModalId).modal("show")
};
s.saveChanges=function(){if(n!==null&&n!==undefined){s.createOrUpdateRecord(s.editableGridOptions.datarows[n.rowIndex],n.rowIndex,n.formObj,n.dbType);
if(n.formObj.$valid===true){o=undefined;
n={};
s.editableGridOptions.datarows[s.currentIndex].isEditGridFlag=true;
p(s.currentIndex)
}$("#"+s.editableGridOptions.cancelModalId).modal("hide")
}};
s.cancelChanges=function(){if(n!==null&&n!==undefined){s.cancelRowEdit(n.tempRecord,n.rowIndex);
o=undefined;
n={};
s.editableGridOptions.datarows[s.currentIndex].isEditGridFlag=true;
s.editableGridOptions.datarows[s.currentIndex].beforeLabel=B+"-";
p(s.currentIndex);
$("#"+s.editableGridOptions.cancelModalId).modal("hide")
}};
s.delinkEntity=function(i){if(i!=null){s.editableGridOptions.linkEntity(i,function(C){console.log("succes")
})
}};
s.editableGridOptions.getSelectedTableRows=function(){return w
};
s.filterData=function(F){if(F!==undefined&&F!==null&&F.length>0){s.editableGridOptions.labelrows=e("filter")(s.editableGridOptions.labelrowsFromDb,{categoryCustom:F});
s.editableGridOptions.labelrows.splice(0,0,{isEditGridFlag:false});
for(var D=s.editableGridOptions.datarows.length-1;
D>0;
D--){var E=false;
for(var C=s.editableGridOptions.labelrows.length-1;
C>0;
C--){if(s.editableGridOptions.labelrows[C].value===s.editableGridOptions.datarows[D].value){E=true;
break
}}if(!E){s.editableGridOptions.datarows.splice(D,1)
}}}else{s.editableGridOptions.labelrows=[];
s.editableGridOptions.datarows=[];
s.editableGridOptions.labelrows.push({isEditGridFlag:false,categoryCustom:{},beforeLabel:B+"-"});
angular.forEach(s.editableGridOptions.labelrowsFromDb,function(i){s.editableGridOptions.labelrows.push(angular.copy(i))
});
s.editableGridOptions.datarows.push({isEditGridFlag:false,categoryCustom:{},beforeLabel:B+"-"});
angular.forEach(s.editableGridOptions.datarowsFromDb,function(i){s.editableGridOptions.datarows.push(angular.copy(i))
})
}};
var p=function(i){y=i;
if((s.editableGridOptions.datarows.length-1)===i){if(s.editableGridOptions.newRowAdded){s.editableGridOptions.newRowAdded()
}}};
s.editableGridOptions.getRowIndexInEditMode=function(){return y
};
s.$watch("editableGridOptions.datarows",function(){if(s.currentIndex>=0){s.removeRow(s.currentIndex,true);
v=[];
n={}
}});
var t=0;
s.isBusy=false;
s.loadPaginatedData=function(){if(t!==0){console.log("load paginated data");
if(s.editableGridOptions!=undefined&&s.editableGridOptions.datarows.length<=1000){s.isBusy=true;
s.editableGridOptions.retrievePaginatedRecord();
window.setTimeout(function(){s.isBusy=false
},100)
}else{var C="We cannot load more data.Please use search options to get the data.";
var i=m.error;
m.addMessage(C,i)
}}t++
}
}];
return{restrict:"E",link:d,templateUrl:"scripts/directives/customgrid/customgrid.html",controller:a,scope:{editableGridOptions:"=",featureName:"@",entityType:"@"}}
}])
});