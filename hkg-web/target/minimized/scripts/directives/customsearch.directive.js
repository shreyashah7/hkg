define(["angular","datepickersearch.directive"],function(){globalProvider.compileProvider.directive("customSearch",["$q","$parse","$http","$templateCache","$compile","$document","$timeout","$rootScope","$filter",function(g,d,j,c,f,e,b,k,h){var a={text:{element:"input",type:"text",editable:true,textBased:true},date:{element:"ag-date-picker-custom-search",type:"date",editable:true,textBased:false},datetime:{element:"input",type:"datetime",editable:true,textBased:true},"datetime-local":{element:"input",type:"datetime-local",editable:true,textBased:true},email:{element:"input",type:"email",editable:true,textBased:true},month:{element:"input",type:"month",editable:true,textBased:true},number:{element:"input",type:"text",editable:true,textBased:true},password:{element:"input",type:"password",editable:true,textBased:true},search:{element:"input",type:"search",editable:true,textBased:true},tel:{element:"input",type:"tel",editable:true,textBased:true},textarea:{element:"textarea",editable:true,textBased:true},time:{element:"input",type:"time",editable:true,textBased:true},url:{element:"input",type:"url",editable:true,textBased:true},week:{element:"input",type:"week",editable:true,textBased:true},checkbox:{element:"input",type:"hidden",editable:true,textBased:false},color:{element:"input",type:"color",editable:true,textBased:false},file:{element:"input",type:"file",editable:true,textBased:false},range:{element:"input",type:"range",editable:true,textBased:false},select:{element:"select",editable:true,textBased:false},pointerselect:{element:"select",editable:true,textBased:false},checklist:{element:"div",editable:false,textBased:false},fieldset:{element:"fieldset",editable:false,textBased:false},radio:{element:"div",editable:false,textBased:false},hidden:{element:"input",type:"hidden",editable:false,textBased:false},image:{element:"input",type:"image",editable:false,textBased:false},legend:{element:"legend",editable:false,textBased:false},reset:{element:"button",type:"reset",editable:false,textBased:false},submit:{element:"button",type:"submit",editable:false,textBased:false},currency:{element:"input",type:"text",editable:true,textBased:true},exchangeRate:{element:"input",type:"text",editable:true,textBased:true},fileDownload:{element:"input",type:"hidden",editable:true,textBased:true},multiSelect:{element:"input",type:"text",editable:true,textBased:true},percent:{element:"input",type:"text",editable:true,textBased:true},UserMultiSelect:{element:"input",type:"text",editable:true,textBased:true},AutoGenerated:{element:"input",type:"text",editable:false,textBased:true},pointer_multiSelect:{element:"input",type:"text",editable:true,textBased:true},Angle:{element:"input",type:"text",editable:true,textBased:true},formula:{element:"input",type:"text",editable:true,textBased:true},subEntity:{element:"select",editable:true,textBased:false},};
var i=function(l,n,m){l.orderByName=h("orderBy");
var o=function(){var B=0;
var x=null,r=null,w=null,z="",D=false,C=n,v=null,q=null,A=m.submitFlagName;
if(!A){A="submitted"
}var y=4;
if(angular.isDefined(m.ngModel)&&(angular.isDefined(m.template)||angular.isDefined(m.templateUrl))&&!n.hasClass("dynamic-form")){v=d(m.ngModel)(l);
if(m.noOfFieldPerRow){y=parseInt(m.noOfFieldPerRow)
}if(!v){var p=m.ngModel.split(".");
l[p[0]]={};
var u=d(p[0])(l);
for(var t=1;
t<p.length;
t++){u[p[t]]={};
u=u[p[t]]
}v=u;
l[m.ngModel]={};
v=l[m.ngModel]
}q=d(m.dbMap)(l);
if(!q){var s=m.dbMap.split(".");
l[s[0]]={};
var E=d(s[0])(l);
for(var t=1;
t<s.length;
t++){E[s[t]]={};
E=E[s[t]]
}q=E
}(m.template?g.when(d(m.template)(l)):j.get(m.templateUrl,{cache:c}).then(function(F){return F.data
})).then(function(F){var G=function(I,aa){if(k.haveValue==="off"&&(I.model==="is_hidden$CB$Boolean"||I.isCurrencyInvolvedInField||I.type==="currency")){}else{if(I.type!=="imageUpload"&&I.type!=="fileUpload"){var X=false;
if(I.type==="date"&&I.attributes&&(I.attributes.type==="date"||I.attributes.type==="datetime")){I.fromModel="from"+I.model;
I.toModel="to"+I.model;
I.format="dd/MM/yyyy";
X=true
}if(angular.isDefined(I.dbType)){if(I.type==="date"&&I.attributes&&(I.attributes.type==="date"||I.attributes.type==="datetime"||I.attributes.type==="timerange"||I.attributes.type==="datetimerange"||I.attributes.type==="daterange")){q[I.fromModel]=I.dbType;
q[I.toModel]=I.dbType
}else{q[I.model]=I.dbType
}}if(!angular.isDefined(a[I.type])||a[I.type]===false){N=angular.element("<span></span>");
if(angular.isDefined(I.label)){angular.element(N).html(I.label)
}angular.forEach(I,function(ag,af){if(["label","type"].indexOf(af)>-1){return
}N.attr(af,ag)
});
this.append(N);
N=null
}else{if((angular.isDefined(m.isDiamond)&&m.isDiamond==="true")||m.isDiamond===true){m.isDiamond=true
}else{m.isDiamond=false
}if((angular.isDefined(m.viewOnly)&&m.viewOnly==="true")||m.viewOnly===true){m.viewOnly=true
}else{m.viewOnly=false
}if(angular.isDefined(m.userDefined)&&m.userDefined!==null){l.userDefined=true;
l.userDefinedData=l[m.userDefined]
}else{l.userDefined=false
}if(m.viewOnly){N=angular.element("<span></span>");
if(I.type==="date"||I.type==="timerange"){var ae=angular.element('<span  ng-hide="!'+m.ngModel+"."+I.fromModel+'" ></span>');
ae.prepend("{{"+m.ngModel+"['from"+I.model+"']}}{{"+m.ngModel+"['to"+I.model+"']}}");
N.prepend(ae);
var R=angular.element('<span  ng-show="!'+m.ngModel+"."+I.fromModel+'" ></span>');
R.prepend("N/A");
N.prepend(R)
}else{if(I.type==="percent"){var Y=angular.element('<span  ng-hide="!'+m.ngModel+"."+I.model+'" ></span>');
Y.prepend("{{"+m.ngModel+"['"+I.model+"']}}  % ");
N.prepend(Y);
var ab=angular.element('<span  ng-show="!'+m.ngModel+"."+I.model+'" ></span>');
ab.prepend("N/A");
N.prepend(ab)
}else{if(I.type==="currency"){var L=angular.element('<span  ng-hide="!'+m.ngModel+"."+I.model+'" ></span>');
L.prepend(format(I.currencyformat,"{{"+m.ngModel+"['"+I.model+"']}}"));
if(I.currencyPrefix==="P"){L.prepend(document.createTextNode(" "+I.currencytype+" "));
N.prepend(L)
}else{L.append(document.createTextNode("  "+I.currencytype));
N.append(L)
}var Z=angular.element('<span  ng-show="!'+m.ngModel+"."+I.model+'" ></span>');
Z.prepend("N/A");
N.prepend(Z)
}else{if(I.type==="exchangeRate"){var L=angular.element('<span  ng-hide="!'+m.ngModel+"."+I.model+'" ></span>');
L.prepend("{{"+m.ngModel+"['"+I.model+"']}}");
if(I.currencyPrefix==="P"){L.prepend(document.createTextNode(" "+I.currencytype+" "));
N.prepend(L)
}else{L.append(document.createTextNode("  "+I.currencytype));
N.append(L)
}var Z=angular.element('<span  ng-show="!'+m.ngModel+"."+I.model+'" ></span>');
Z.prepend("N/A");
N.prepend(Z)
}else{var ad=angular.element('<span  ng-hide="!'+m.ngModel+"."+I.model+'" ></span>');
ad.prepend("{{"+m.ngModel+"['"+I.model+"']}} ");
N.prepend(ad);
var ac=angular.element('<span  ng-show="!'+m.ngModel+"."+I.model+'" ></span>');
ac.prepend("N/A");
N.prepend(ac)
}}}}}else{if(!angular.isDefined(I.model)){I.model=aa
}N=angular.element(e[0].createElement(a[I.type].element));
if(angular.isDefined(a[I.type].type)){if(X){N.attr("type","daterange")
}else{N.attr("type",a[I.type].type)
}}if(angular.isDefined(a[I.type].editable)&&a[I.type].editable){if(angular.isDefined(I.fromModel)&&angular.isDefined(I.toModel)){N.attr("name",I.fromModel);
N.attr("from-model",m.ngModel+"['"+I.fromModel+"']");
N.attr("name",I.toModel);
N.attr("to-model",m.ngModel+"['"+I.toModel+"']")
}else{N.attr("id",I.model);
N.attr("name",I.model);
N.attr("ng-model",m.ngModel+"['"+I.model+"']")
}if(angular.isDefined(I.readonly)){N.attr("ng-readonly",I.readonly)
}}if(angular.isDefined(a[I.type].textBased)&&a[I.type].textBased){N.attr("class","form-control");
if(angular.isDefined(I.defaultPatternForText)){if(I.type!=="AutoGenerated"){N.attr("ng-pattern",I.defaultPatternForText)
}}else{if(angular.isDefined(I.defaultPatternForEmail)){N.attr("ng-pattern",I.defaultPatternForEmail)
}}}if(I.type==="number"||I.type==="range"){N.attr("numbers-only",true);
N.attr("negativeAllowed",true)
}else{if(["text","textarea"].indexOf(I.type)>-1){if(angular.isDefined(I.splitBy)){N.attr("ng-list",I.splitBy)
}}else{if(I.type==="checkbox"){var N=angular.element("<select class='form-control'></select>");
var W='<option value="">Select</option>';
N.append(W);
N.attr("ng-options","check.id as check.text for check in defaultcheckBoxList");
N.attr("ng-model",m.ngModel+"['"+I.model+"']");
var P="<div ng-controller='SearchCheckBoxController' ng-init='defineLabelForCheckBox();'> </div>";
N=N.wrap(P).parent()
}else{if(I.type==="checklist"){if(angular.isDefined(I.values)){if(!(angular.isDefined(v[I.model])&&angular.isObject(v[I.model]))){v[I.model]={}
}angular.forEach(I.values,function(af,ag){w=angular.element('<input type="checkbox" />');
w.attr("name",I.model+"."+ag);
w.attr("ng-model",m.ngModel+"['"+I.model+"']['"+ag+"']");
if(angular.isDefined(af["class"])){w.attr("ng-class",af["class"])
}if(angular.isDefined(I.disabled)){w.attr("ng-disabled",I.disabled)
}if(angular.isDefined(I.readonly)){w.attr("ng-readonly",I.readonly)
}if(angular.isDefined(I.callback)){w.attr("ng-change",I.callback)
}if(angular.isDefined(af.isOn)){w.attr("ng-true-value",af.isOn)
}if(angular.isDefined(af.isOff)){w.attr("ng-false-value",af.isOff)
}if(angular.isDefined(af.slaveTo)){w.attr("ng-checked",af.slaveTo)
}if(angular.isDefined(af.val)){v[I.model][ag]=angular.copy(af.val);
newChlid.attr("value",I.val)
}if(angular.isDefined(af.label)){w=w.wrap('<label class="col-md-4"></label>').parent();
w=w.append("{{"+m.internationalizationLabel+"+'"+af.label+"'| translate }}")
}N.append(w)
})
}}else{if(I.type==="select"){N.attr("ng-options","color.id as color.text for color in dropdown");
N.attr("class","form-control");
var J='<option value="">Select</option>';
N.prepend(J);
var O;
if(I.displayShortcutCode!==null&&I.displayShortcutCode!==undefined){O=I.displayShortcutCode
}else{O=false
}var P="<div ng-controller='SearchSingleSelectController' ng-init='defineLabelForSingleSelect(\""+I.label+'","'+I.model+'","'+m.ngModel+'","'+I.val+'","'+m.isDiamond+'","'+I.fieldId+'","'+O+"\");'> </div>";
N=N.wrap(P).parent()
}else{if(I.type==="subEntity"){var J='<option value="">Select</option>';
N.prepend(J);
N.attr("ng-options","color.text as color.id for color in dropdownForSubEntity");
N.attr("class","form-control");
var P="<div ng-controller='SearchSubEntityController' ng-init='defineLabelForSubEntity(\""+I.CustomFieldId+'","'+I.model+'","'+m.ngModel+'","'+m.isDiamond+"\");'> </div>";
N=N.wrap(P).parent()
}else{if(I.type==="pointerselect"){N.attr("ng-options","color.id as color.text for color in dropdown");
N.attr("class","form-control");
var J='<option value="">Select</option>';
N.prepend(J);
var O;
if(I.displayShortcutCode!==null&&I.displayShortcutCode!==undefined){O=I.displayShortcutCode
}else{O=false
}var P="<div ng-controller='SearchSingleSelectController' ng-init='defineLabelForSingleSelect(\""+I.pointerlabel+'","'+I.model+'","'+m.ngModel+'","'+I.val+'","'+m.isDiamond+'","'+I.pointerFieldId+'","'+O+"\");'> </div>";
N=N.wrap(P).parent()
}else{if(I.type==="AutoGenerated"){console.log();
N.attr("ui-select2","autoComplete");
N.attr("class","col-xs-12 hkg-nopadding");
N.attr("ng-model",m.ngModel+"['"+I.model+"']");
var P="<div  ng-controller='AutoGeneratedSingleSelectController' ng-init='defineLabel(\""+I.label+'","'+I.model+'","'+m.ngModel+'","'+I.val+'","'+m.isDiamond+"\");'> </div>";
N=N.wrap(P).parent()
}else{if(I.type==="hidden"){N.attr("name",I.model);
N.attr("ng-model",m.ngModel+"['"+I.model+"']")
}else{if(I.type==="percent"){N.attr("numbers-only",true);
N.attr("decimalallowed",true);
N.attr("negativeAllowed",true);
if(angular.isDefined(I.readonly)){N.attr("ng-readonly",I.readonly)
}if(angular.isDefined(I.readonly)){N.attr("ng-readonly",I.readonly)
}N=N.wrap('<div class="input-group"> </div>').parent();
var S=angular.element('<div class="input-group-addon"></div>');
S.append(document.createTextNode("%"));
N.append(S);
N.attr("ng-model",m.ngModel+"['"+I.model+"']")
}else{if(I.type==="Angle"){N.attr("negativeAllowed",true);
N.attr("numbers-only",true);
N.attr("decimalallowed",true);
if(angular.isDefined(I.readonly)){N.attr("ng-readonly",I.readonly)
}if(angular.isDefined(I.readonly)){N.attr("ng-readonly",I.readonly)
}N=N.wrap('<div class="input-group"> </div>').parent();
var S=angular.element('<div class="input-group-addon" ><span class="">&#176</span></div>');
N.append(S);
N.attr("ng-model",m.ngModel+"['"+I.model+"']")
}else{if(I.type==="currency"){N.attr("negativeAllowed",true);
N.attr("numbers-only",true);
N.attr("decimalallowed",true)
}else{if(I.type==="exchangeRate"){N.attr("negativeAllowed",false);
N.attr("numbers-only",true);
N.attr("decimalallowed",true)
}else{if(I.type==="multiSelect"){N.attr("ui-select2","autoComplete");
N.attr("class","col-xs-12 hkg-nopadding");
N.attr("ng-model",m.ngModel+"['"+I.model+"']");
var O;
if(I.displayShortcutCode!==null&&I.displayShortcutCode!==undefined){O=I.displayShortcutCode
}else{O=false
}var P="<div  ng-controller='SearchMultiSelectController' ng-init='defineLabel(\""+I.label+'","'+I.model+'","'+m.ngModel+'","'+I.val+'","'+m.isDiamond+'","'+I.fieldId+'","'+O+"\");'> </div>";
N=N.wrap(P).parent()
}else{if(I.type==="pointer_multiSelect"){var O;
if(I.displayShortcutCode!==null&&I.displayShortcutCode!==undefined){O=I.displayShortcutCode
}else{O=false
}var P="<div ng-controller='SearchMultiSelectController' ng-init='defineLabel(\""+I.pointerlabel+'","'+I.model+'","'+m.ngModel+'","'+I.val+'","'+m.isDiamond+'","'+I.pointerFieldId+'","'+O+"\");'> </div>";
N=N.wrap(P).parent();
N.attr("ui-select2","autoComplete");
N.attr("class","col-xs-12 hkg-nopadding");
N.attr("ng-model",m.ngModel+"['"+I.model+"']")
}else{if(I.type==="UserMultiSelect"){N.attr("ng-model",m.ngModel+"['"+I.model+"']");
N.attr("ui-select2","autoCompleteUser");
N.attr("class","col-xs-12 hkg-nopadding ");
var P="<div ng-controller='SearchUserMultiSelectController' ng-init='defineLabel(\""+I.isEmployee+'","'+I.isDepartment+'","'+I.isDesignation+'","'+I.isFranchise+'","'+I.model+'","'+I.isMultiSelect+'","'+m.ngModel+'","'+m.isDiamond+"\");'> </div>";
var Q="<div ng-controller='SearchUserSingleSelectController' ng-init='defineLabel(\""+I.isEmployee+'","'+I.isDepartment+'","'+I.isDesignation+'","'+I.isFranchise+'","'+I.model+'","'+I.isMultiSelect+'","'+m.ngModel+'","'+m.isDiamond+"\");'> </div>";
N=N.wrap('<div  class="input-group"></div>').parent();
N=N.append('<span class="input-group-addon"><span class="glyphicon glyphicon-info-sign" tooltip-html-unsafe="{{customPopover}}"  tooltip-trigger="mouseenter" tooltip-placement="right"></span></span>');
if(I.isMultiSelect!==undefined){N=N.wrap(P).parent()
}else{N=N.wrap(Q).parent()
}}else{if(I.type==="date"&&I.attributes&&I.attributes.type&&(I.attributes.type==="timerange"||I.attributes.type==="date"||I.attributes.type==="datetime")){N.attr("submitted",A);
N.attr("form",m.name);
if(!m.noOfFieldPerRow||m.noOfFieldPerRow===1){N.attr("input-class","col-md-12");
N.attr("label-class","col-md-12 text-center")
}else{N.attr("input-class",m.inputCss);
N.attr("label-class",m.labelCss)
}N.attr("to-label","To");
N.attr("from-label","From")
}else{if(I.type==="fieldset"){if(angular.isDefined(I.fields)){var V=N;
angular.forEach(I.fields,G,N);
N=V
}}}}}}}}}}}}}}}}}}}if(I.type!=="radio"){if(angular.isDefined(I["class"])){N.attr("ng-class",I["class"])
}if(I.type!=="checklist"){if(angular.isDefined(I.disabled)){N.attr("ng-disabled",I.disabled)
}if(angular.isDefined(I.callback)){if(["button","fieldset","image","legend","reset","submit"].indexOf(I.type)>-1){z="ng-click"
}else{z="ng-change"
}N.attr(z,I.callback)
}}}if(angular.isDefined(I.attributes)){angular.forEach(I.attributes,function(ag,af){if(af!=="maxLength"&&af!=="type"){if(af==="format"&&X){N.attr(af,"dd/MM/yyyy")
}else{N.attr(af,ag)
}}})
}}if(angular.isDefined(I.label)){if(["image","hidden"].indexOf(I.type)>-1){angular.noop()
}else{if(["fieldset"].indexOf(I.type)>-1){N.prepend(angular.element(e[0].createElement("legend")).html(I.label))
}else{if(["button","legend","reset","submit"].indexOf(I.type)>-1){N.html("{{"+m.internationalizationLabel+"+'"+I.label+"'| translate }}")
}else{if(r===null){r=angular.element('<div class="form-group" ></div>')
}if(I.type!=="checkbox"&&!(I.type==="date"&&I.attributes&&(I.attributes.type==="timerange"||I.attributes.type==="datetimerange"||I.attributes.type==="daterange"))){}else{if((!m.noOfFieldPerRow||m.noOfFieldPerRow===1)&&I.type!=="checkbox"){}else{if(I.type==="checkbox"){if(y===2){N=N.wrap('<div class="col-md-8 form-control-static" style="text-align:left"></div>').parent()
}if(y===3){N=N.wrap('<div class="col-md-8 form-control-static" style="text-align:left"></div>').parent()
}if(y===4){N=N.wrap('<div class="col-md-12 form-control-static" style="text-align:left"></div>').parent()
}if(y===10){N=N.wrap('<div  style="position: relative;min-height: 1px;float: left;width: 100%; padding-left:20px;"></div>').parent()
}N=N.wrap("<div ng-class=\"{'has-error': "+m.name+"."+I.model+".$invalid && ("+A+') }"  ></div>').parent()
}}}if(I.type!=="checkbox"){if(y===4){N=N.wrap("<div  ng-class=\"{'has-error': "+m.name+"."+I.model+".$invalid && ("+A+') }" ></div>').parent()
}if(y===3){N=N.wrap("<div  ng-class=\"{'has-error': "+m.name+"."+I.model+".$invalid && ("+A+') }" class="col-md-10"></div>').parent()
}if(y===2){N=N.wrap("<div  ng-class=\"{'has-error': "+m.name+"."+I.model+".$invalid && ("+A+') }" class="col-md-8 form-control-static"></div>').parent()
}if(y===10){N=N.wrap("<div  ng-class=\"{'has-error': "+m.name+"."+I.model+".$invalid && ("+A+') }" style="position: relative;min-height: 1px;float: left;width: 100%; padding-left:0px;padding-right:0px;"></div>').parent()
}}if(I.type!=="checkbox"){var U=angular.element(' <div ng-show="('+m.name+"."+I.model+".$dirty || "+A+") && "+m.name+"."+I.model+'.$invalid" class="error,help-block" ></div>');
U=U.prepend('<span class="text-danger"  ng-if="'+m.name+"."+I.model+'.$error.pattern">'+I.label+" is invalid</span>");
N=N.append(U)
}if(I.type!=="checkbox"){if(y===2){N=N.wrap('<div  id="dv_'+I.model+'" class="col-lg-6 col-md-6 col-xs-12  " style="padding-left:0px;padding-right:0px " ></div>').parent()
}if(y===3){N=N.wrap('<div  id="dv_'+I.model+'" class="col-lg-4 col-md-4 col-xs-12 " style="padding-left:0px;padding-right:0px "></div>').parent()
}if(y===4){N=N.wrap('<div  id="dv_'+I.model+'" class="col-lg-3 col-md-3 col-xs-12 " style="padding-left:5px;padding-right:5px "></div>').parent()
}if(y===10){N=N.wrap('<div  id="dv_'+I.model+'"   style="position: relative;min-height: 1px;float: left;width: 10%; padding-left:5px;padding-right:5px ng-hide"></div>').parent()
}}if(I.type==="checkbox"){if(y===2){var J=angular.element('<div class="col-md-4 control-label "></div>')
}if(y===3){var J=angular.element('<div class="col-md-10 control-label wordRap" style="padding-right:0px"></div>')
}if(y===4){var J=angular.element('<div class="col-md-12 control-label wordRap" style="padding-right:0px"></div>')
}if(y===10){var J=angular.element('<div class="col-md-12 control-label" style="text-align:left; padding-left:5px; padding-right:0px"></div>');
if(angular.isDefined(I.label)&&I.label.length>4){var M=angular.element('<span class="glyphicon glyphicon-info-sign" tooltip=" '+I.label+' " tooltip-trigger="mouseenter" tooltip-placement="right" style="padding-left:5px"></span>');
I.label=I.label.slice(0,4)
}}var H=angular.element('<label for="'+I.model+'"></label>');
H=H.append("&nbsp;{{"+m.internationalizationLabel+"+'"+I.label+"'| translate }}");
H=H.append(M);
J=J.append(H);
N=N.prepend(J)
}else{if(y===2){var H=angular.element('<label for="'+I.model+'" class="col-md-4 control-label "></label>')
}if(y===3){var H=angular.element('<label for="'+I.model+'" class="col-md-10 control-label" style="text-align:left"></label>')
}if(y===4){var H=angular.element('<label for="'+I.model+'" class="col-md-12 control-label form-group" style="text-align:left"></label>')
}else{if(y===10){var H=angular.element('<label for="'+I.model+'" class="col-md-12 control-label" style="text-align:left; padding-left:0px; padding-right:0px"></label>');
if(angular.isDefined(I.label)&&I.label.length>4){var M=angular.element('<span class="glyphicon glyphicon-info-sign"  tooltip=" '+I.label+' " tooltip-trigger="mouseenter" tooltip-placement="right" style="padding-left:5px"></span>');
I.label=I.label.slice(0,4)
}}}H=H.append("{{"+m.internationalizationLabel+"+'"+I.label+"'| translate }}");
var K;
if(angular.isDefined(I.hint)&&I.hint.length>0){var T=angular.element('<span class="glyphicon glyphicon-question-sign"  tooltip=" '+I.hint+' " tooltip-trigger="mouseenter" tooltip-placement="right"></span>');
if(H.hasClass("col-md-4")){K=T.wrap('<div class="col-md-4 text-right"></div>').parent();
H.removeClass("col-md-4")
}if(H.hasClass("col-md-12")){K=T.wrap('<div class="col-md-12"></div>').parent();
H.removeClass("col-md-12")
}H.css("display","inline")
}H=H.append(M);
if(angular.isDefined(K)){H=K.append(H)
}N=N.prepend(H)
}if(I.type==="checkbox"){if(y===2){N=N.wrap('<div  id="dv_'+I.model+'" class="col-lg-6 col-md-6 col-xs-12" style="padding-left:0px;padding-right:0px "></div>').parent()
}if(y===3){N=N.wrap('<div  id="dv_'+I.model+'" class="col-lg-4 col-md-4 col-xs-12"></div>').parent()
}if(y===4){N=N.wrap('<div  id="dv_'+I.model+'" class="col-lg-3 col-md-3 col-xs-12"></div>').parent()
}if(y===10){N=N.wrap('<div  id="dv_'+I.model+'" style="position: relative;min-height: 1px;float: left;width: 10%; padding-left:5px;padding-right:5px"></div>').parent()
}}}}}}r=r.append(N);
B++;
if(B%y===0){this.append(r);
r=null
}else{if(F.length%2===0){if(F.length-1===B){if(B%y!==0){this.append(r)
}}}else{if(F.length%2!==0){if(F.length===B){if(B%y!==0){this.append(r)
}}}}}N=null
}}}};
angular.forEach(F,G,n);
while(!angular.equals(C.parent(),e)&&C.parent().length){if(["form","ngForm"].indexOf(m.$normalize(angular.lowercase(C.parent()[0].nodeName)))>-1){D=true;
break
}C=C.parent()
}if(D){x=angular.element("<ng-form name="+m.name+"></ng-form>")
}else{x=angular.element("<form></form>")
}angular.forEach(m.$attr,function(I,H){x.attr(I,m[H])
});
x.attr("model",m.ngModel);
x.removeAttr("ng-model");
angular.forEach(n[0].classList,function(H){x[0].classList.add(H)
});
x.addClass("dynamic-form");
x.append(n.contents());
x.data("$_cleanModel",angular.copy(v));
x.bind("reset",function(){b(function(){l.$broadcast("reset",arguments)
},0)
});
l.$on("reset",function(){l.$apply(function(){l[m.ngModel]={}
});
l.$apply(function(){l[m.ngModel]=angular.copy(x.data("$_cleanModel"))
})
});
f(x)(l);
n.replaceWith(x)
})
}};
o()
};
return{restrict:"E",transclude:true,link:i}
}]);
globalProvider.compileProvider.directive("ngList",[function(){return{require:"?ngModel",link:function(d,c,a,e){var b=/\/(.*)\//.exec(c.attr(a.$attr.ngList)),f=b&&new RegExp(b[1])||c.attr(a.$attr.ngList)||",";
if(c[0].form!==null&&!angular.element(c[0].form).hasClass("dynamic-form")){return
}e.$parsers.splice(0,1);
e.$formatters.splice(0,1);
e.$parsers.push(function(h){var g=[];
if(angular.isString(h)){if(String.prototype.trim){angular.forEach(h.split(f),function(i){if(i){g.push(i.trim())
}})
}else{angular.forEach(h.split(f),function(i){if(i){g.push(i.replace(/^\s*/,"").replace(/\s*$/,""))
}})
}}return g
});
e.$formatters.push(function(h){var g=angular.isString(f)&&f||", ";
if(angular.isArray(h)){return h.join(g)
}return undefined
})
}}
}]);
globalProvider.controllerProvider.register("SearchSubEntityController",["$rootScope","$scope","SearchSubEntityService","CenterCustomService",function(a,b,c,d){b.defineLabelForSubEntity=function(e,h,i,g){b.model=h;
b.attribute=i;
b.dropdownForSubEntity=[];
b.fieldId=e;
b.isDiamond=g;
var j=function(k){if(k.length!==0){angular.forEach(k,function(l){b.dropdownForSubEntity.push({id:l.value,text:l.label})
})
}};
var f=function(){};
if(b.isDiamond===true||b.isDiamond==="true"){d.createDropDownListForSubEntity(b.fieldId,j,f)
}else{c.createDropDownListForSubEntity(b.fieldId,j,f)
}}
}]);
globalProvider.controllerProvider.register("SearchMultiSelectController",["$rootScope","$scope","CustomMasterService","CustomCenterMasterService",function(a,b,d,c){b.defineLabel=function(i,h,j,e,g,f,k){b.defaultValue=e;
b.model=h;
b.attribute=j;
b.fieldLabel=i;
b.isDiamond=g;
b.fieldId=f;
b.displayShortcutCode=k
};
b.autoComplete={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(e,f){a.maskLoading();
setTimeout(function(){b.defaultList=[];
b.initList=[];
b.names=[];
var i=b.attribute;
var h=b.model;
if(b[i][h]!==null&&b[i][h]!==undefined&&b[i][h].length>0){b.dataModel=b[i][h].replace(/&/g,",")
}if(b.dataModel!==undefined){var j=function(n){if(n.data!==null&&n.data!==undefined){var q;
if(b.displayShortcutCode===true||b.displayShortcutCode==="true"){q=parseInt(n.shortcutCode)+"-"+n.label
}else{q=n.label
}b.names.push({id:parseInt(n.value),text:q})
}if(b.dataModel!==undefined&&b.dataModel!=="undefined"&&b.dataModel.length>0){var k=angular.copy(b.dataModel);
var m=b.dataModel.split(",");
if(m!==undefined){for(var o=0;
o<b.names.length;
o++){for(var l in m){if(m[l].trim().toString()===b.names[o].id.toString()){b.initList.push(b.names[o])
}}}var p=[];
angular.forEach(b.initList,function(r){p.push({id:r.id,text:r.text,})
});
f(p);
b[i][h]=k
}}a.unMaskLoading()
};
var g=function(){a.unMaskLoading()
};
if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveAllValuesForMasters({primaryKey:b.fieldId},j,g)
}else{d.retrieveAllValuesForMasters({primaryKey:b.fieldId},j,g)
}}a.unMaskLoading()
},500)
},formatResult:function(e){return e.text
},formatSelection:function(e){return e.text
},query:function(h){b.names=[];
var i=function(j){if(j.data!==null&&j.data!==undefined){angular.forEach(j.data,function(k){var l;
if(b.displayShortcutCode===true||b.displayShortcutCode==="true"){l=parseInt(k.shortcutCode)+"-"+k.label
}else{l=k.label
}b.names.push({id:parseInt(k.value),text:l})
})
}h.callback({results:b.names})
};
var f=function(){};
var g=h.term.trim();
var e=[b.fieldId,g];
console.log("search detail/."+e);
if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveAllValuesForMastersFrMultiSelect(e,i,f)
}else{d.retrieveAllValuesForMastersFrMultiSelect(e,i,f)
}}}
}]);
globalProvider.controllerProvider.register("AutoGeneratedSingleSelectController",["$rootScope","$scope",function(a,b){b.defineLabel=function(f,e,g,c,d){b.defaultValue=c;
b.model=e;
b.attribute=g;
b.fieldLabel=f;
b.isDiamond=d
};
b.autoComplete={multiple:true,closeOnSelect:false,placeholder:"Select",allowClear:true,initSelection:function(c,e){var d=[];
console.log("here.. "+d);
e(d)
},formatResult:function(c){return c.text
},formatSelection:function(c){return c.text
},ajax:{url:a.appendAuthToken(a.centerapipath+"customfield/searchautogenerated"),dataType:"json",data:function(c,d){return{q:c,page_limit:10,page:d-1,field_name:b.model}
},results:function(f,e){f=f.data;
var d=(e*10)<f.total;
var c=[];
angular.forEach(f.records,function(h,g){c.push({id:h,text:h})
});
c=b.orderByName(c,["text"]);
return{results:c,more:d}
}}}
}]);
globalProvider.controllerProvider.register("SearchUserMultiSelectController",["$rootScope","$scope","UserManagementServiceSearch","CenterCustomService",function(a,b,d,c){b.isEmp=false;
b.isDep=false;
b.isDeg=false;
b.isFran=false;
b.defineLabel=function(l,f,e,m,j,i,n,k){b.model=j;
b.attribute=n;
var p=null;
var g=null;
var h=null;
var o=null;
b.isDiamond=k;
if(l===true||l==="true"){b.isEmp=true;
g="<tr>\n<td >'@E' </td>\n<td> &nbsp;  &nbsp;</td>\n<td align='left'>Employees</td>\n</tr>"
}if(f===true||f==="true"){b.isDep=true;
p="<tr>\n<td >'@D' </td>\n<td> &nbsp;  &nbsp;</td>\n<td align='left'>Departments</td>\n</tr>"
}if(e===true||e==="true"){b.isDeg=true;
h="<tr>\n<td >'@R' </td>\n<td> &nbsp;  &nbsp;</td>\n<td align='left'>Designations</td>\n</tr>"
}if(m===true||m==="true"){b.isFran=true;
o="<tr>\n<td >'@F' </td>\n<td> &nbsp;  &nbsp;</td>\n<td align='left'>Franchises</td>\n</tr>"
}if(i!=="undefined"){b.isMulti=i
}var q="";
if(g!==null){q=q+g
}if(p!==null){q=q+p
}if(h!==null){q=q+h
}if(o!==null){q=q+o
}b.customPopover="<NOBR>\n<font color='red;'>Use the shortcuts to search </font></NOBR><br/>\n<table cellpadding='0' cellspacing='0'>";
if(q!==null){b.customPopover=b.customPopover+q
}b.customPopover=b.customPopover+"</table>"
};
b.autoCompleteUser={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(e,f){setTimeout(function(){var i=b.attribute;
var h=b.model;
b.dataModel=b[i][h];
if(b.dataModel!==undefined){var g=b.dataModel;
var j=b.dataModel.split(",");
if(j!==undefined){if(b.isDiamond===true||b.isDiamond==="true"){c.defaultSelection(j,function(k){var l=[];
b.result=JSON.parse(angular.toJson(k));
for(key in b.result){l.push({id:key,text:k[key]})
}f(l);
b[i][h]=g
},function(){})
}else{d.defaultSelection(j,function(k){var l=[];
b.result=JSON.parse(angular.toJson(k));
for(key in b.result){l.push({id:key,text:k[key]})
}f(l);
b[i][h]=g
},function(){})
}}}},500)
},formatResult:function(e){return e.text
},formatSelection:function(e){return e.text
},query:function(k){var g=k.term;
b.names=[];
var l=function(n){if(n.length!==0){b.names=[];
angular.forEach(n,function(o){b.names.push({id:o.value+":"+o.description,text:o.label})
})
}k.callback({results:b.names})
};
var e=function(){};
if(b.isEmp===true){var j=false;
var m;
if(b.isDep===false&&b.isDeg===false&&b.isFran===false){if(g.substring(0,2)==="@E"||g.substring(0,2)==="@e"){j=true;
m=k.term.slice(2)
}else{j=true;
m=k.term
}}else{if(g.substring(0,2)==="@E"||g.substring(0,2)==="@e"){j=true;
m=k.term.slice(2)
}}if(j===true){if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveusers(m.trim(),l,e)
}else{d.retrieveusers(m.trim(),l,e)
}}}if(b.isDep===true){var m;
var f=false;
if(b.isEmp===false&&b.isDeg===false&&b.isFran===false){if(g.substring(0,2)==="@D"||g.substring(0,2)==="@d"){f=true;
m=k.term.slice(2)
}else{f=true;
m=k.term
}}else{if(g.substring(0,2)==="@D"||g.substring(0,2)==="@d"){f=true;
m=k.term.slice(2)
}}if(f===true){if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveDepartmentList(m.trim(),l,e)
}else{d.retrieveDepartmentList(m.trim(),l,e)
}}}if(b.isDeg===true){var m;
var h=false;
if(b.isEmp===false&&b.isDep===false&&b.isFran===false){if(g.substring(0,2)==="@R"||g.substring(0,2)==="@r"){h=true;
m=k.term.slice(2)
}else{h=true;
m=k.term
}}else{if(g.substring(0,2)==="@R"||g.substring(0,2)==="@r"){h=true;
m=k.term.slice(2)
}}if(h===true){if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveroles(m.trim(),l,e)
}else{d.retrieveroles(m.trim(),l,e)
}}}if(b.isFran===true){var m;
var i=false;
if(b.isEmp===false&&b.isDep===false&&b.isDeg===false){if(g.substring(0,2)==="@F"||g.substring(0,2)==="@f"){i=true;
m=k.term.slice(2)
}else{i=true;
m=k.term
}}else{if(g.substring(0,2)==="@F"||g.substring(0,2)==="@f"){i=true;
m=k.term.slice(2)
}}if(i===true){if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveFranchises(m.trim(),l,e)
}else{d.retrieveFranchises(m.trim(),l,e)
}}}}}
}]);
globalProvider.controllerProvider.register("SearchUserSingleSelectController",["$rootScope","$scope","UserManagementServiceSearch","CenterCustomService",function(a,b,d,c){b.isEmp=false;
b.isDep=false;
b.isDeg=false;
b.isFran=false;
b.defineLabel=function(l,f,e,m,j,i,n,k){b.model=j;
b.attribute=n;
b.isDiamond=k;
var p=null;
var g=null;
var h=null;
var o=null;
if(l===true||l==="true"){b.isEmp=true;
g="<tr>\n<td >'@E' </td>\n<td> &nbsp;  &nbsp;</td>\n<td align='left'>Employees</td>\n</tr>"
}if(f===true||f==="true"){b.isDep=true;
p="<tr>\n<td >'@D' </td>\n<td> &nbsp;  &nbsp;</td>\n<td align='left'>Departments</td>\n</tr>"
}if(e===true||e==="true"){b.isDeg=true;
h="<tr>\n<td >'@R' </td>\n<td> &nbsp;  &nbsp;</td>\n<td align='left'>Designations</td>\n</tr>"
}if(m===true||m==="true"){b.isFran=true;
o="<tr>\n<td >'@F' </td>\n<td> &nbsp;  &nbsp;</td>\n<td align='left'>Franchises</td>\n</tr>"
}if(i!=="undefined"){b.isMulti=i
}var q="";
if(g!==null){q=q+g
}if(p!==null){q=q+p
}if(h!==null){q=q+h
}if(o!==null){q=q+o
}b.customPopover="<NOBR>\n<font color='red;'>Use the shortcuts to search </font></NOBR><br/>\n<table cellpadding='0' cellspacing='0'>";
if(q!==null){b.customPopover=b.customPopover+q
}b.customPopover=b.customPopover+"</table>"
};
b.autoCompleteUser={multiple:true,closeOnSelect:false,maximumSelectionSize:1,placeholder:"Select",initSelection:function(e,f){setTimeout(function(){var i=b.attribute;
var h=b.model;
b.dataModel=b[i][h];
if(b.dataModel!==undefined){var g=b.dataModel;
var j=b.dataModel.split(",");
if(j!==undefined){if(b.isDiamond===true||b.isDiamond==="true"){c.defaultSelection(j,function(k){var l=[];
b.result=JSON.parse(angular.toJson(k));
for(key in b.result){l.push({id:key,text:k[key]})
}f(l);
b[i][h]=g
},function(){})
}else{d.defaultSelection(j,function(k){var l=[];
b.result=JSON.parse(angular.toJson(k));
for(key in b.result){l.push({id:key,text:k[key]})
}f(l);
b[i][h]=g
},function(){})
}}}},500)
},formatResult:function(e){return e.text
},formatSelection:function(e){return e.text
},query:function(k){var g=k.term;
b.names=[];
var l=function(n){if(n.length!==0){b.names=[];
angular.forEach(n,function(o){b.names.push({id:o.value+":"+o.description,text:o.label})
})
}k.callback({results:b.names})
};
var e=function(){};
if(b.isEmp===true){var j=false;
var m;
if(b.isDep===false&&b.isDeg===false&&b.isFran===false){if(g.substring(0,2)==="@E"||g.substring(0,2)==="@e"){j=true;
m=k.term.slice(2)
}else{j=true;
m=k.term
}}else{if(g.substring(0,2)==="@E"||g.substring(0,2)==="@e"){j=true;
m=k.term.slice(2)
}}if(j===true){if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveusers(m.trim(),l,e)
}else{d.retrieveusers(m.trim(),l,e)
}}}if(b.isDep===true){var m;
var f=false;
if(b.isEmp===false&&b.isDeg===false&&b.isFran===false){if(g.substring(0,2)==="@D"||g.substring(0,2)==="@d"){f=true;
m=k.term.slice(2)
}else{f=true;
m=k.term
}}else{if(g.substring(0,2)==="@D"||g.substring(0,2)==="@d"){f=true;
m=k.term.slice(2)
}}if(f===true){if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveDepartmentList(m.trim(),l,e)
}else{d.retrieveDepartmentList(m.trim(),l,e)
}}}if(b.isDeg===true){var m;
var h=false;
if(b.isEmp===false&&b.isDep===false&&b.isFran===false){h=true;
m=k.term
}else{if(g.substring(0,2)==="@R"||g.substring(0,2)==="@r"){h=true;
m=k.term.slice(2)
}}if(h===true){if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveroles(m.trim(),l,e)
}else{d.retrieveroles(m.trim(),l,e)
}}}if(b.isFran===true){var m;
var i=false;
if(b.isEmp===false&&b.isDep===false&&b.isDeg===false){if(g.substring(0,2)==="@F"||g.substring(0,2)==="@f"){i=true;
m=k.term.slice(2)
}else{i=true;
m=k.term
}}else{if(g.substring(0,2)==="@F"||g.substring(0,2)==="@f"){i=true;
m=k.term.slice(2)
}}if(i===true){if(b.isDiamond===true||b.isDiamond==="true"){c.retrieveFranchises(m.trim(),l,e)
}else{d.retrieveFranchises(m.trim(),l,e)
}}}}}
}]);
globalProvider.controllerProvider.register("SearchSingleSelectController",["$rootScope","$scope","CustomMasterService","CustomCenterMasterService","CenterCustomService","CaratRangeService","AssetCustomService",function(a,d,f,e,g,c,b){d.defineLabelForSingleSelect=function(o,j,i,n,k,l,m){d.defaultValue=n;
d.model=j;
d.attribute=i;
d.dropdown=[];
d.fieldLabel=o;
d.isDiamond=k;
d.fieldId=l;
if(j==="carate_range_of_lot$DRP$Long"||j==="carate_range_of_packet$DRP$Long"){var p=function(s){if(s.length!==0){var r=JSON.parse(angular.toJson(s));
for(var q in r){d.dropdown.push({id:parseInt(q),text:r[q].toString()})
}}};
var h=function(){};
if(d.isDiamond===true||d.isDiamond==="true"){g.makeValuesForCarateRange(p,h)
}else{c.makeValuesForCarateRange(p,h)
}}else{if(j==="machine_to_process_in$DRP$Long"){var p=function(s){if(s.length!==0){var r=JSON.parse(angular.toJson(s));
for(var q in r){d.dropdown.push({id:q,text:r[q].toString()})
}}};
var h=function(){};
if(d.isDiamond===true||d.isDiamond==="true"){g.makeValuesForMachineAssets(p,h)
}else{b.makeValuesForMachineAssets(p,h)
}}else{var p=function(q){if(q.data!==null){angular.forEach(q.data,function(r){var s;
if(m===true||m==="true"){s=parseInt(r.shortcutCode)+"-"+r.label
}else{s=r.label
}d.dropdown.push({id:parseInt(r.value),text:s})
})
}};
var h=function(){};
if(d.isDiamond===true||d.isDiamond==="true"){e.retrieveAllValuesForMasters({primaryKey:d.fieldId},p,h)
}else{f.retrieveAllValuesForMasters({primaryKey:d.fieldId},p,h)
}}}}
}]);
globalProvider.controllerProvider.register("SearchCheckBoxController",["$rootScope","$scope",function(a,b){b.defineLabelForCheckBox=function(){var c=[{id:true,text:"Yes"},{id:false,text:"No"}];
b.defaultcheckBoxList=[];
angular.forEach(c,function(d){b.defaultcheckBoxList.push({id:d.id,text:d.text})
})
}
}]);
globalProvider.provide.factory("CustomMasterService",["$resource","$rootScope",function(c,a){var b=c(a.apipath+"master/:action",{},{retrieveListOfMaster:{method:"GET",isArray:true,params:{action:"retrieve"}},retrieveDetailsOfMaster:{method:"POST",params:{action:"retrieve"}},retrieveAllValuesForMasters:{method:"POST",params:{action:"retrieveAllValuesForMasters"}},retrieveAllValuesForMastersFrMultiSelect:{method:"POST",params:{action:"retrieveAllValuesForMastersFrMultiSelect"}}});
return b
}]);
globalProvider.provide.factory("CustomCenterMasterService",["$resource","$rootScope",function(c,a){var b=c(a.centerapipath+"master/:action",{},{retrieveListOfMaster:{method:"GET",isArray:true,params:{action:"retrieve"}},retrieveDetailsOfMaster:{method:"POST",params:{action:"retrieve"}},retrieveAllValuesForMasters:{method:"POST",params:{action:"retrieveAllValuesForMasters"}},retrieveAllValuesForMastersFrMultiSelect:{method:"POST",params:{action:"retrieveAllValuesForMastersFrMultiSelect"}}});
return b
}]);
globalProvider.provide.factory("fileuploadservice",["$resource","$rootScope",function(c,b){var a=c(b.apipath+"fileUpload/:action",{action:"@actionName"},{uploadFiles:{method:"POST",isArray:false,params:{action:"onsubmit"}},cancelFile:{method:"POST",isArray:false,params:{action:"oncancel"}},removeImageFile:{method:"POST",params:{action:"removeImageFile"}},cancelAll:{method:"POST",isArray:false,params:{action:"oncancelall"}}});
return a
}]);
globalProvider.provide.factory("SearchSubEntityService",["$resource","$rootScope",function(c,a){var b=c(a.apipath+"customfield/:action",{},{createDropDownListForSubEntity:{method:"POST",isArray:true,params:{action:"createDropDownListForSubEntity"}},});
return b
}]);
globalProvider.provide.factory("UserManagementServiceSearch",["$resource","$rootScope",function(c,a){var b=c(a.apipath+"customfield/:action",{},{retrieveusers:{method:"POST",isArray:true,params:{action:"retrieveusers"}},retrieveDepartmentList:{method:"POST",isArray:true,params:{action:"retrieveDepartmentList"}},defaultSelection:{method:"POST",isArray:false,params:{action:"defaultSelection"}},retrieveroles:{method:"POST",isArray:true,params:{action:"retrieveroles"}},retrieveFranchises:{method:"POST",isArray:true,params:{action:"retrievefranchises"}}});
return b
}]);
globalProvider.provide.factory("CenterCustomService",["$resource","$rootScope",function(c,a){var b=c(a.centerapipath+"customfield/:action",{},{makeValuesForCarateRange:{method:"GET",params:{action:"makeValuesforcaraterange"}},makeValuesForMachineAssets:{method:"GET",params:{action:"makevaluesformachineassets"}},retrieveusers:{method:"POST",isArray:true,params:{action:"retrieveusers"}},retrieveDepartmentList:{method:"POST",isArray:true,params:{action:"retrieveDepartmentList"}},defaultSelection:{method:"POST",isArray:false,params:{action:"defaultSelection"}},retrieveroles:{method:"POST",isArray:true,params:{action:"retrieveroles"}},createDropDownListForSubEntity:{method:"POST",isArray:true,params:{action:"createDropDownListForSubEntity"}},retrieveFranchises:{method:"POST",isArray:true,params:{action:"retrievefranchises"}}});
return b
}]);
globalProvider.provide.factory("CaratRangeService",["$resource","$rootScope",function(b,a){var c=b(a.apipath+"customfield/:action",{},{makeValuesForCarateRange:{method:"GET",params:{action:"makeValuesforcaraterange"}}});
return c
}]);
globalProvider.provide.factory("AssetCustomService",["$resource","$rootScope",function(b,a){var c=b(a.apipath+"customfield/:action",{},{makeValuesForMachineAssets:{method:"GET",params:{action:"makevaluesformachineassets"}}});
return c
}])
});