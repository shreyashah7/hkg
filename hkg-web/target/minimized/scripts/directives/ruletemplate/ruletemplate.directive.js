define(["angular","ruleService","assetService","ruleField","customFieldService","messageService","activityFlowService"],function(){globalProvider.compileProvider.directive("ruleTemplate",["$rootScope","$filter","$templateCache","RuleService","ActivityFlowService","Messaging","CustomFieldService","AssetService",function(i,d,a,c,g,e,j,h){var k={rulesetObject:"=?",entityId:"=?"};
var f=function(n,m,l){};
var b=["$scope","$element","$attrs","$rootScope","$timeout","$filter","$location","$window","$log",function(w,s,m,q,C,t,n,r,x){w.rulesubmitted=false;
w.applyList=["All","Any"];
w.ruleObject={};
w.ruleObject.ruleList=[];
w.allRules=[];
w.isEditRule=false;
w.rulesetid=null;
w.editRule=false;
w.entityId=undefined;
w.popover="<NOBR><font color='red;'>Use the shortcuts to search</font></NOBR><br/><table cellpadding='0' cellspacing='0'><tr><td> "+ +"\n "+ +"'@D'  </td> <td> &nbsp;  &nbsp;</td><td align='left'>Departments</td></tr> "+ +"<tr><td>'@E'  </td> <td> &nbsp; &nbsp;</td><td align='left'>Employees</td></tr> "+ +"<tr><td>'@R'  </td> <td> &nbsp; &nbsp;</td><td align='left'>Roles</td></tr> "+ +"<tr><td>'@G'  </td> <td> &nbsp; &nbsp;</td><td align='left'>Groups</td></tr> "+ +"<tr><td>'@A'  </td> <td> &nbsp; &nbsp;</td><td align='left'>Activities</td></tr> "+ +"</table>";
w.status=[{id:true,name:"Active"},{id:false,name:"InActive"}];
w.entityList={};
w.selectedRule=null;
w.lastRuleId=0;
w.operators={};
var z={Number:"Numeric","Text field":"String","Text area":"String",Dropdown:"String","Radio button":"String",Date:"Date",Datepicker:"Date","Date range":"Date range",Time:"Date","Time range":"Date range",Password:"String",Currency:"Numeric",Decimal:"Numeric",Email:"String",Phone:"String",Checkbox:"Boolean",Percent:"Numeric",Formula:"Numeric",Pointer:"Numeric",AutoGenerated:"Boolean",MultiSelect:"String",UserMultiSelect:"String",Angle:"Numeric",Image:"Image",Upload:"Image"};
w.$on("$viewContentLoaded",function(){});
if(angular.isDefined(m.onlyCriteria)){try{w.onlyCriteria=JSON.parse(m.onlyCriteria.toLowerCase())
}catch(p){w.onlyCriteria=false;
console.log("Can not parse onlyCriteria"+p)
}}else{w.onlyCriteria=false
}console.log("onlyCriteria----"+w.onlyCriteria);
w.initializeRuleConfig=function(D){o();
if(w.rulesetObject!==undefined&&w.rulesetObject!==null&&w.rulesetObject.length>0){w.allRules=angular.copy(w.rulesetObject);
console.log(JSON.stringify(w.rulesetObject));
angular.forEach(w.allRules,function(F){for(var E=0;
E<F.criterias.length;
E++){if(F.criterias[E].fieldType==="UserMultiSelect"||F.criterias[E].fieldType==="MultiSelect"||F.criterias[E].fieldType==="Dropdown"||F.criterias[E].fieldType==="Pointer"||F.criterias[E].fieldType==="SubEntity"){F.criterias[E].value=angular.copy(F.criterias[E].value.toString().replace("[","").replace("]",""))
}}})
}};
var u=function(){var D={};
D.entity="";
D.field="";
D.operator="";
D.options=null;
D.operatorList=[];
D.fieldList=[];
D.rowsubmitted=false;
D.hint="Enter value";
D.values=[];
return D
};
var y=function(){w.ruleObject={};
w.ruleObject.ruleList=[];
var D=u();
w.ruleObject.ruleList.push(D);
w.ruleObject.remarks="";
D.rowsubmitted=false;
w.ruleObject.isActive=true;
w.ruleObject.ruleName="";
w.ruleObject.apply="All"
};
var o=function(){w.allRules=[];
c.retrievePrerequisite(function(E){console.log(E.entity);
w.entityListFromDb=angular.copy(E.entity);
w.entityListWithField={};
w.entityListWithOutField={};
for(var D in w.entityListFromDb){if(parseInt(D)>0){w.entityListWithField[D]=w.entityListFromDb[D]
}else{w.entityListWithOutField[D]=w.entityListFromDb[D]
}}w.entityList=E.entity;
if(!!!w.entityList){w.entityList={}
}w.operators=E.operator
});
y();
w.displayFlag="create"
};
function l(F){w.ruleObject={};
w.ruleObject.ruleList=[];
if(F!==null&&F!==undefined){w.ruleObject.id=F.id;
w.ruleObject.isActive=F.isActive;
w.ruleObject.isArchive=F.isArchive;
w.ruleObject.remarks=F.remarks;
w.ruleObject.ruleName=F.ruleName;
w.ruleObject.apply=F.apply;
w.ruleObject.ruleNumber=F.ruleNumber;
var D=0;
for(var E=0;
E<F.criterias.length;
E++){if(F.criterias[E].id>D){D=F.criterias[E].id
}}w.lastRuleId=D;
v(F.criterias,0)
}}function v(G,E){if(E<G.length&&G[E]!==undefined){var F={};
F.values=[];
F.options=null;
F.hint="Enter value";
if(G[E].fieldType==="Date range"){F.values[0]=G[E].value.split(",")[0];
F.values[1]=G[E].value.split(",")[1];
if(G[E].value1!==null){F.values[2]=G[E].value1.split(",")[0];
F.values[3]=G[E].value1.split(",")[1]
}}else{if(G[E].fieldType!=="Pointer"&&G[E].fieldType!=="SubEntity"){if(G[E].fieldType==="MultiSelect"||G[E].fieldType==="Dropdown"){F.values=G[E].value
}else{F.values[0]=G[E].value;
if(G[E].value1!==null){F.values[1]=G[E].value1
}}}else{if(G[E].fieldType==="SubEntity"){if(G[E].subentityComponentType!=="Date"){F.values=G[E].value
}else{F.values[0]=G[E].value;
if(G[E].value1!==null){F.values[1]=G[E].value1
}}}else{if(G[E].pointerComponentType==="MultiSelect"||G[E].pointerComponentType==="Dropdown"){F.values=G[E].value
}else{F.values[0]=G[E].value;
if(G[E].value1!==null){F.values[1]=G[E].value1
}}}}}F.id=G[E].id;
F.entity=G[E].entity.toString();
var H=G[E].field;
var D=G[E].operator;
if(parseInt(F.entity)<0){if(parseInt(F.entity)>=-3&&parseInt(F.entity)<=-1){F.fieldList=w.fieldListForAct
}else{F.fieldList=w.fieldListForSer
}if(F.fieldList!==undefined&&F.fieldList!==null){$.grep(F.fieldList,function(J,I){if(J.id==H){F.field=F.fieldList[I];
return true
}})
}B(F,D,G,E)
}else{c.retrieveFieldsByEntity('{"primaryKey": '+F.entity+"}",function(I){F.fieldList=I;
$.grep(F.fieldList,function(K,J){if(K.id==H){F.field=F.fieldList[J];
return true
}});
B(F,D,G,E)
})
}}}function A(D){if(D.field!==undefined&&D.field!==null&&D.field.type==="MultiSelect"){c.retrieveMasterByFieldById('{"primaryKey": '+D.field.id+"}",function(E){D.options=E
})
}}function B(J,E,M,I){J.operatorList=[];
if(J.field!==undefined&&J.field!==null&&J.field.type!=="SubEntity"){J.operatorList=w.operators[z[J.field.type]]
}else{if(J.field!==undefined&&J.field!==null&&J.field.type==="SubEntity"){J.operatorList=w.operators[z.Dropdown]
}else{if(!J.field){J.operatorList.push({label:"IsAbsentToday",isActive:true,shortcutCode:1});
J.operatorList.push({label:"AbsentWithoutInfo",isActive:true,shortcutCode:1});
J.operatorList.push({label:"RestrictByIP",isActive:true,shortcutCode:1})
}}}$.grep(J.operatorList,function(O,N){if(O.label===E){J.operator=J.operatorList[N];
return true
}});
if(J.field!==undefined&&J.field!==null&&(J.field.type==="Dropdown"||J.field.type==="Radio button"||J.field.type==="MultiSelect")){if(parseInt(J.entity)<=-1&&parseInt(J.entity)>=-3&&parseInt(J.field.id)!==-1){c.retrieveActivityMasterByFieldById('{"primaryKey": '+w.activityflow.version.value+"}",function(N){J.options=N;
$.grep(J.options,function(P,O){if(P.value===J.value){J.value[0]=J.options[O];
return true
}});
if(J.value1!==null){$.grep(J.options,function(P,O){if(P.value===J.value1){J.value[1]=J.options[O];
return true
}})
}})
}else{if(parseInt(J.entity)<=-4&&parseInt(J.entity)>=-6&&parseInt(J.field.id)!==-1){c.retrieveServiceMasterByFieldById('{"primaryKey": '+w.activityflow.version.value+"}",function(N){J.options=N;
$.grep(J.options,function(P,O){if(P.value===J.value){J.value[0]=J.options[O];
return true
}});
if(J.value1!==null){$.grep(J.options,function(P,O){if(P.value===J.value1){J.value[1]=J.options[O];
return true
}})
}})
}else{if(J.field!==undefined&&J.field!==null&&J.field.dbFieldName==="lot_status"||J.field.dbFieldName==="packet_status"||J.field.dbFieldName==="status_of_plan"||J.field.dbFieldName==="parcel_status"||J.field.dbFieldName==="invoice_status"||J.field.dbFieldName==="issue_status"||J.field.dbFieldName==="type_of_plan"){var D=J.field.dbFieldName;
c.retrieveLotStatus(D,function(N){J.options=N;
$.grep(J.options,function(P,O){if(P.value===J.value){J.value[0]=J.options[O];
return true
}});
if(J.value1!==null){$.grep(J.options,function(P,O){if(P.value===J.value1){J.value[1]=J.options[O];
return true
}})
}})
}else{c.retrieveMasterByFieldById('{"primaryKey": '+J.field.id+"}",function(N){J.options=N;
if(J.field!==undefined&&J.field!==null&&J.field.type!=="MultiSelect"){$.grep(J.options,function(P,O){if(P.value===J.value){J.value[0]=J.options[O];
return true
}});
if(J.value1!==null){$.grep(J.options,function(P,O){if(P.value===J.value1){J.value[1]=J.options[O];
return true
}})
}}})
}}}}else{if(J.field!==undefined&&J.field!==null&&J.field.type==="Checkbox"){J.options=[{label:"True",value:true},{label:"False",value:false}]
}else{if(J.field!==undefined&&J.field!==null&&J.field.type==="Pointer"){var G;
var L=J.field.validationPattern.replace("{","").replace("}","");
var H=[];
var F=[];
var K;
H=L.split(",");
angular.forEach(H,function(N){if(N.indexOf('"pointer":')>-1){F=N.split(":");
K=F[1].replace(/["']/g,"");
J.field.pointerId=K
}});
angular.forEach(J.fieldList,function(N){if(N.id.toString()===K.toString()){G=N.type;
J.field.pointertype=G
}});
c.retrieveMasterByFieldById('{"primaryKey": '+K+"}",function(N){J.options=N
})
}else{if(J.field!==undefined&&J.field!==null&&J.field.type==="SubEntity"){J.field.subEntityType="Dropdown";
c.retrieveDropListForSubEntity(J.field.id,function(N){J.options=N
})
}}}}J.showtemplate=false;
J.showtemplate=true;
w.ruleObject.ruleList[I]=J;
I++;
v(M,I);
A(J);
if(J.field!==undefined&&J.field!==null&&J.field.type==="MultiSelect"){angular.forEach(w.ruleObject.ruleList,function(O){if(O.field.id===J.field.id){var N=angular.copy(O.values);
O.multiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(P,R){var Q=[];
c.retrieveMasterByFieldById('{"primaryKey": '+O.field.id+"}",function(S){w.optionsMultiSelect=S;
var U=[];
U=angular.copy(N.toString().replace("[","").replace("]","").split(","));
var T=angular.copy(O.values);
angular.forEach(U,function(V){angular.forEach(w.optionsMultiSelect,function(W){if(V.toString()===W.value.toString()){Q.push({id:W.value,text:W.label})
}})
});
R(Q);
O.values=angular.copy(U.toString())
})
},formatResult:function(P){return P.text
},formatSelection:function(P){return P.text
},query:function(Q){var P=Q.term;
w.names=[];
if(O.options.length!==0){w.names=angular.copy(O.options);
angular.forEach(O.options,function(R){w.names.push({id:R.value,text:R.label})
})
}Q.callback({results:w.names})
}};
O.multiselectSingleComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(P,R){var Q=[];
c.retrieveMasterByFieldById('{"primaryKey": '+O.field.id+"}",function(S){w.optionsMultiSelect=S;
var U=[];
U=angular.copy(N.toString().replace("[","").replace("]","").split(","));
var T=angular.copy(O.values);
angular.forEach(U,function(V){angular.forEach(w.optionsMultiSelect,function(W){if(V.toString()===W.value.toString()){Q.push({id:W.value,text:W.label})
}})
});
R(Q);
O.values=angular.copy(U.toString())
})
},formatResult:function(P){return P.text
},formatSelection:function(P){return P.text
},query:function(Q){var P=Q.term;
w.names=[];
if(O.options.length!==0){w.names=angular.copy(O.options);
angular.forEach(O.options,function(R){w.names.push({id:R.value,text:R.label})
})
}Q.callback({results:w.names})
}}
}})
}if(J.field!==undefined&&J.field!==null&&J.field.type==="Pointer"){angular.forEach(w.ruleObject.ruleList,function(O){if(O.field.id===J.field.id){var P;
if(J.field.pointerId!==null&&J.field.pointerId!==undefined){P=J.field.pointerId.replace('"',"")
}var N=angular.copy(O.values);
O.pointerMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(Q,S){var R=[];
c.retrieveMasterByFieldById('{"primaryKey": '+P+"}",function(T){w.optionspointerMultiSelect=T;
var U=[];
U=angular.copy(N.toString().replace("[","").replace("]","").split(","));
var V=angular.copy(O.values);
angular.forEach(U,function(W){angular.forEach(w.optionspointerMultiSelect,function(X){if(W.toString()===X.value.toString()){R.push({id:X.value,text:X.label})
}})
});
S(R);
O.values=angular.copy(U.toString())
})
},formatResult:function(Q){return Q.text
},formatSelection:function(Q){return Q.text
},query:function(R){var Q=R.term;
w.names=[];
if(O.options.length!==0){w.names=angular.copy(O.options);
angular.forEach(O.options,function(S){w.names.push({id:S.value,text:S.label})
})
}R.callback({results:w.names})
}};
O.pointerSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(Q,T){var R=[];
var S=O.field.pointerId.replace('"',"");
c.retrieveMasterByFieldById('{"primaryKey": '+S+"}",function(V){w.optionsSingleSelectPointer=V;
var W=[];
W=angular.copy(N.toString().replace("[","").replace("]","").split(","));
var U=angular.copy(O.values);
angular.forEach(W,function(X){angular.forEach(w.optionsSingleSelectPointer,function(Y){if(X.toString()===Y.value.toString()){R.push({id:Y.value,text:Y.label})
}})
});
T(R);
O.values=angular.copy(W.toString())
})
},formatResult:function(Q){return Q.text
},formatSelection:function(Q){return Q.text
},query:function(R){var Q=R.term;
w.names=[];
if(O.options.length!==0){w.names=angular.copy(O.options);
angular.forEach(O.options,function(S){w.names.push({id:S.value,text:S.label})
})
}R.callback({results:w.names})
}}
}})
}if(J.field!==undefined&&J.field!==null&&J.field.type==="SubEntity"){angular.forEach(w.ruleObject.ruleList,function(O){if(O.field.id===J.field.id){var P;
if(J.field.pointerId!==null&&J.field.pointerId!==undefined){P=J.field.pointerId.replace('"',"")
}var N=angular.copy(O.values);
O.subEntityMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(Q,S){var R=[];
c.retrieveDropListForSubEntity(O.field.id,function(U){w.optionsSubentityMultiSelect=U;
var V=[];
V=angular.copy(N.toString().replace("[","").replace("]","").split(","));
var T=angular.copy(O.values);
angular.forEach(V,function(W){angular.forEach(w.optionsSubentityMultiSelect,function(X){if(W.toString()===X.value.toString()){R.push({id:X.value,text:X.label})
}})
});
S(R);
O.values=angular.copy(V.toString())
})
},formatResult:function(Q){return Q.text
},formatSelection:function(Q){return Q.text
},query:function(R){var Q=R.term;
w.names=[];
if(O.options.length!==0){w.names=angular.copy(O.options);
angular.forEach(O.options,function(S){w.names.push({id:S.value,text:S.label})
})
}R.callback({results:w.names})
}};
O.subEntitySingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(Q,S){var R=[];
c.retrieveDropListForSubEntity(O.field.id,function(U){w.optionsSubentitySingleSelect=U;
var V=[];
V=angular.copy(N.toString().replace("[","").replace("]","").split(","));
var T=angular.copy(O.values);
angular.forEach(V,function(W){angular.forEach(w.optionsSubentitySingleSelect,function(X){if(W.toString()===X.value.toString()){R.push({id:X.value,text:X.label})
}})
});
S(R);
O.values=angular.copy(V.toString())
})
},formatResult:function(Q){return Q.text
},formatSelection:function(Q){return Q.text
},query:function(R){var Q=R.term;
w.names=[];
if(O.options.length!==0){w.names=angular.copy(O.options);
angular.forEach(O.options,function(S){w.names.push({id:S.value,text:S.label})
})
}R.callback({results:w.names})
}}
}})
}if(J.field!==undefined&&J.field!==null&&J.field.type==="Dropdown"){angular.forEach(w.ruleObject.ruleList,function(O){if(O.field.id===J.field.id){if(J.id===O.id){var N=angular.copy(O.values);
O.dropdownMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(R,U){var S=[];
var T=function(V){w.optionsDropdown=V;
var X=[];
X=angular.copy(N.toString().replace("[","").replace("]","").split(","));
var W=angular.copy(O.values);
angular.forEach(X,function(Y){angular.forEach(w.optionsDropdown,function(Z){if(Y.toString()===Z.value.toString()){S.push({id:Z.value,text:Z.label})
}})
});
U(S);
O.values=angular.copy(X.toString())
};
var P=function(){};
if(parseInt(J.entity)<=-1&&parseInt(J.entity)>=-3&&parseInt(J.field.id)!==-1){c.retrieveActivityMasterByFieldById('{"primaryKey": '+w.activityflow.version.value+"}",T,P)
}else{if(parseInt(J.entity)<=-4&&parseInt(J.entity)>=-6&&parseInt(J.field.id)!==-1){c.retrieveServiceMasterByFieldById('{"primaryKey": '+w.activityflow.version.value+"}",T,P)
}else{if(J.field.dbFieldName==="lot_status"||J.field.dbFieldName==="packet_status"||J.field.dbFieldName==="status_of_plan"||J.field.dbFieldName==="parcel_status"||J.field.dbFieldName==="invoice_status"||J.field.dbFieldName==="issue_status"||J.field.dbFieldName==="type_of_plan"){var Q=J.field.dbFieldName;
c.retrieveLotStatus(Q,T,P)
}else{c.retrieveMasterByFieldById('{"primaryKey": '+O.field.id+"}",T,P)
}}}},formatResult:function(P){return P.text
},formatSelection:function(P){return P.text
},query:function(Q){var P=Q.term;
w.names=[];
if(O.options.length!==0){w.names=angular.copy(O.options);
angular.forEach(O.options,function(R){w.names.push({id:R.value,text:R.label})
})
}Q.callback({results:w.names})
}};
O.dropdownSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(R,U){var S=[];
var T=function(V){w.optionsDropdown=V;
var X=[];
X=angular.copy(N.toString().replace("[","").replace("]","").split(","));
var W=angular.copy(O.values);
angular.forEach(X,function(Y){angular.forEach(w.optionsDropdown,function(Z){if(Y.toString()===Z.value.toString()){S.push({id:Z.value,text:Z.label})
}})
});
U(S);
O.values=angular.copy(X.toString())
};
var P=function(){};
if(parseInt(J.entity)<=-1&&parseInt(J.entity)>=-3&&parseInt(J.field.id)!==-1){c.retrieveActivityMasterByFieldById('{"primaryKey": '+w.activityflow.version.value+"}",T,P)
}else{if(parseInt(J.entity)<=-4&&parseInt(J.entity)>=-6&&parseInt(J.field.id)!==-1){c.retrieveServiceMasterByFieldById('{"primaryKey": '+w.activityflow.version.value+"}",T,P)
}else{if(J.field.dbFieldName==="lot_status"||J.field.dbFieldName==="packet_status"||J.field.dbFieldName==="status_of_plan"||J.field.dbFieldName==="parcel_status"||J.field.dbFieldName==="invoice_status"||J.field.dbFieldName==="issue_status"||J.field.dbFieldName==="type_of_plan"){var Q=J.field.dbFieldName;
c.retrieveLotStatus(Q,T,P)
}else{c.retrieveMasterByFieldById('{"primaryKey": '+O.field.id+"}",T,P)
}}}},formatResult:function(P){return P.text
},formatSelection:function(P){return P.text
},query:function(Q){var P=Q.term;
w.names=[];
if(O.options.length!==0){w.names=angular.copy(O.options);
angular.forEach(O.options,function(R){w.names.push({id:R.value,text:R.label})
})
}Q.callback({results:w.names})
}}
}}})
}if(J.field!==undefined&&J.field!==null&&J.field.type==="UserMultiSelect"){angular.forEach(w.ruleObject.ruleList,function(R){if(R.field.id===J.field.id){var S=R.field.validationPattern;
var O=false;
var N=false;
var Q=false;
var P=S.replace("{","").replace("}","").split(",");
angular.forEach(P,function(T){if(T.indexOf('"isEmployee":')>-1){O=true
}if(T.indexOf('"isDepartment":')>-1){N=true
}if(T.indexOf('"isDesignation":')>-1){Q=true
}});
R.userMultiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(U,Y){var W=[];
var V=angular.copy(R.values);
var X=R.values.toString().split(",");
var T=[];
if(X!==undefined){angular.forEach(X,function(Z){Z=Z.replace('"',"").trim();
T.push(Z)
});
j.defaultSelection(T,function(Z){var aa=[];
w.result=JSON.parse(angular.toJson(Z));
for(key in w.result){aa.push({id:key,text:Z[key]})
}Y(aa);
R.values=angular.copy(V)
},function(){})
}},formatResult:function(T){return T.text
},formatSelection:function(T){return T.text
},query:function(Y){var X=Y.term;
w.names=[];
var aa=function(ab){if(ab.length!==0){w.names=ab;
angular.forEach(ab,function(ac){w.names.push({id:ac.value+":"+ac.description,text:ac.label})
})
}Y.callback({results:w.names})
};
var V=function(){};
if(O){var W;
var U=false;
if(N===false&&Q===false){if(X.substring(0,2)==="@E"||X.substring(0,2)==="@e"){U=true;
W=Y.term.slice(2)
}else{U=true;
W=Y.term
}}else{if(X.substring(0,2)==="@E"||X.substring(0,2)==="@e"){U=true;
W=Y.term.slice(2)
}}if(U===true){h.retrieveUserList(W.trim(),aa,V)
}}if(N){var W;
var T=false;
if(O===false&&Q===false){if(X.substring(0,2)==="@D"||X.substring(0,2)==="@d"){T=true;
W=Y.term.slice(2)
}else{T=true;
W=Y.term
}}else{if(X.substring(0,2)==="@D"||X.substring(0,2)==="@d"){T=true;
W=Y.term.slice(2)
}}if(T===true){e.retrieveDepartmentList(W.trim(),aa,V)
}}if(Q){var W;
var Z=false;
if(O===false&&N===false){if(X.substring(0,2)=="@R"||X.substring(0,2)=="@r"){Z=true;
W=Y.term.slice(2)
}else{Z=true;
W=Y.term
}}else{if(X.substring(0,2)=="@R"||X.substring(0,2)=="@r"){Z=true;
W=Y.term.slice(2)
}}if(Z===true){e.retrieveRoleList(W.trim(),aa,V)
}}}};
R.values=R.values.toString();
R.userSingleselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(V,Y){var W=[];
var U=angular.copy(R.values);
var X=R.values.toString().split(",");
var T=[];
if(X!==undefined){angular.forEach(X,function(Z){Z=Z.replace('"',"").trim();
T.push(Z)
});
j.defaultSelection(T,function(Z){var aa=[];
w.result=JSON.parse(angular.toJson(Z));
for(key in w.result){aa.push({id:key,text:Z[key]})
}Y(aa);
R.values=angular.copy(U)
},function(){})
}},formatResult:function(T){return T.text
},formatSelection:function(T){return T.text
},query:function(Y){var X=Y.term;
w.names=[];
var aa=function(ab){if(ab.length!==0){w.names=ab;
angular.forEach(ab,function(ac){w.names.push({id:ac.value+":"+ac.description,text:ac.label})
})
}Y.callback({results:w.names})
};
var V=function(){};
if(O){var W;
var U=false;
if(N===false&&Q===false){if(X.substring(0,2)==="@E"||X.substring(0,2)==="@e"){U=true;
W=Y.term.slice(2)
}else{U=true;
W=Y.term
}}else{if(X.substring(0,2)==="@E"||X.substring(0,2)==="@e"){U=true;
W=Y.term.slice(2)
}}if(U===true){h.retrieveUserList(W.trim(),aa,V)
}}if(N){var T=false;
var W;
if(O===false&&Q===false){if(X.substring(0,2)==="@D"||X.substring(0,2)==="@d"){T=true;
W=Y.term.slice(2)
}else{T=true;
W=Y.term
}}else{if(X.substring(0,2)==="@D"||X.substring(0,2)==="@d"){T=true;
W=Y.term.slice(2)
}}if(T===true){e.retrieveDepartmentList(W.trim(),aa,V)
}}if(Q){var Z=false;
var W;
if(O===false&&N===false){if(X.substring(0,2)=="@R"||X.substring(0,2)=="@r"){Z=true;
W=Y.term.slice(2)
}else{Z=true;
W=Y.term
}}else{if(X.substring(0,2)=="@R"||X.substring(0,2)=="@r"){Z=true;
W=Y.term.slice(2)
}}if(Z===true){e.retrieveRoleList(W.trim(),aa,V)
}}else{if(X.substring(0,2)==="@A"||X.substring(0,2)==="@a"){var W=Y.term.slice(2);
e.retrieveActivityList(W.trim(),aa,V)
}else{Y.callback({results:w.names})
}}}}
}})
}}w.onEntityChange=function(D){if(w.ruleObject.ruleList[D].entity!==null){w.ruleObject.ruleList[D].field=undefined;
w.ruleObject.ruleList[D].operatorList=[];
w.entityId=w.ruleObject.ruleList[D].entity;
w.ruleObject.ruleList[D].showtemplate=false;
w.ruleObject.ruleList[D].values=[];
w.ruleObject.ruleList[D].rowsubmitted=false;
if(parseInt(w.entityId)>0){c.retrieveFieldsByEntity('{"primaryKey": '+w.entityId+"}",function(E){w.ruleObject.ruleList[D].fieldList=E
})
}else{w.ruleObject.ruleList[D].fieldList=null;
w.ruleObject.ruleList[D].operatorList=[];
w.ruleObject.ruleList[D].operatorList.push({label:"IsAbsentToday",isActive:true,shortcutCode:1});
w.ruleObject.ruleList[D].operatorList.push({label:"AbsentWithoutInfo",isActive:true,shortcutCode:1});
w.ruleObject.ruleList[D].operatorList.push({label:"RestrictByIP",isActive:true,shortcutCode:1})
}}};
w.onFieldChange=function(F){if(w.ruleObject.ruleList[F].field!==null&&w.ruleObject.ruleList[F].field!==undefined){var E=w.ruleObject.ruleList[F].field.type;
w.ruleObject.ruleList[F].operatorList=[];
var J;
if(E==="Pointer"){var I;
var H=w.ruleObject.ruleList[F].field.validationPattern.replace("{","").replace("}","");
var D=[];
var K=[];
D=H.split(",");
angular.forEach(D,function(L){if(L.indexOf('"pointer":')>-1){K=L.split(":");
J=K[1].replace(/["']/g,"");
w.ruleObject.ruleList[F].field.pointerId=J
}});
angular.forEach(w.ruleObject.ruleList[F].fieldList,function(L){if(L.id.toString()===J.toString()){I=L.type;
w.ruleObject.ruleList[F].field.pointertype=I
}});
w.ruleObject.ruleList[F].operatorList=w.operators[z[I]]
}else{if(E==="SubEntity"){w.ruleObject.ruleList[F].field.subEntityType="Dropdown";
w.ruleObject.ruleList[F].operatorList=w.operators[z.Dropdown];
c.retrieveDropListForSubEntity(w.ruleObject.ruleList[F].field.id,function(L){w.ruleObject.ruleList[F].options=L;
w.ruleObject.ruleList[F].field.subentityDropListType=L[0].description
})
}else{w.ruleObject.ruleList[F].operatorList=w.operators[z[w.ruleObject.ruleList[F].field.type]]
}}if(E==="Dropdown"||E==="Radio button"||E==="MultiSelect"){if(parseInt(w.ruleObject.ruleList[F].entity)<=-1&&parseInt(w.ruleObject.ruleList[F].entity)>=-3&&parseInt(w.ruleObject.ruleList[F].field.id)!==-1){c.retrieveActivityMasterByFieldById('{"primaryKey": '+w.activityflow.version.value+"}",function(L){w.ruleObject.ruleList[F].options=L
})
}else{if(parseInt(w.ruleObject.ruleList[F].entity)<=-4&&parseInt(w.ruleObject.ruleList[F].entity)>=-6&&parseInt(w.ruleObject.ruleList[F].field.id)!==-1){c.retrieveServiceMasterByFieldById('{"primaryKey": '+w.activityflow.version.value+"}",function(L){w.ruleObject.ruleList[F].options=L
})
}else{if(w.ruleObject.ruleList[F].field.dbFieldName==="lot_status"||w.ruleObject.ruleList[F].field.dbFieldName==="packet_status"||w.ruleObject.ruleList[F].field.dbFieldName==="status_of_plan"||w.ruleObject.ruleList[F].field.dbFieldName==="parcel_status"||w.ruleObject.ruleList[F].field.dbFieldName==="invoice_status"||w.ruleObject.ruleList[F].field.dbFieldName==="issue_status"||w.ruleObject.ruleList[F].field.dbFieldName==="type_of_plan"){var G=w.ruleObject.ruleList[F].field.dbFieldName;
c.retrieveLotStatus(G,function(L){w.ruleObject.ruleList[F].options=L
})
}else{c.retrieveMasterByFieldById('{"primaryKey": '+w.ruleObject.ruleList[F].field.id+"}",function(L){w.ruleObject.ruleList[F].options=L
})
}}}}else{if(E==="Checkbox"){w.ruleObject.ruleList[F].options=[{label:"True",value:true},{label:"False",value:false}]
}else{if(E==="Pointer"){c.retrieveMasterByFieldById('{"primaryKey": '+J+"}",function(L){w.ruleObject.ruleList[F].options=L
})
}}}w.ruleObject.ruleList[F].operator=undefined;
w.ruleObject.ruleList[F].showtemplate=false;
w.ruleObject.ruleList[F].values=[];
w.ruleObject.ruleList[F].rowsubmitted=false
}else{w.ruleObject.ruleList[F].operator=undefined;
w.ruleObject.ruleList[F].operatorList=[];
w.ruleObject.ruleList[F].showtemplate=false;
w.ruleObject.ruleList[F].values=[];
w.ruleObject.ruleList[F].rowsubmitted=false
}angular.forEach(w.ruleObject.ruleList[F].operatorList,function(L){console.log("--------------");
console.log(JSON.stringify(L))
})
};
w.onOperatorChange=function(E){w.ruleObject.ruleList[E].showtemplate=false;
w.ruleObject.ruleList[E].rowsubmitted=false;
w.ruleObject.ruleList[E].values=[];
var D=w.ruleObject.ruleList[E].operator;
console.log(JSON.stringify(D));
if(!!D){if(D.label==="contains"||D.label==="has no value"||D.label==="has any value"){w.ruleObject.ruleList[E].hint="Enter comma separated list"
}w.ruleObject.ruleList[E].showtemplate=true;
angular.forEach(w.ruleObject.ruleList,function(J){var K=null;
if(J.field!==undefined&&J.field!==null){K=J.field.validationPattern
}var G=false;
var F=false;
var I=false;
var H=null;
if(K!==undefined&&K!==null){H=K.replace("{","").replace("}","").split(",")
}angular.forEach(H,function(L){if(L.indexOf('"isEmployee":')>-1){G=true
}if(L.indexOf('"isDepartment":')>-1){F=true
}if(L.indexOf('"isDesignation":')>-1){I=true
}});
J.multiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
w.names=[];
if(J.options.length!==0){w.names=angular.copy(J.options);
angular.forEach(J.options,function(N){w.names.push({id:N.value,text:N.label})
})
}M.callback({results:w.names})
}};
J.multiselectSingleComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
w.names=[];
if(J.options.length!==0){w.names=angular.copy(J.options);
angular.forEach(J.options,function(N){w.names.push({id:N.value,text:N.label})
})
}M.callback({results:w.names})
}};
J.dropdownMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
w.names=[];
if(J.options.length!==0){w.names=angular.copy(J.options);
angular.forEach(J.options,function(N){w.names.push({id:N.value,text:N.label})
})
}M.callback({results:w.names})
}};
J.dropdownSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
w.names=[];
if(J.options.length!==0){w.names=angular.copy(J.options);
angular.forEach(J.options,function(N){w.names.push({id:N.value,text:N.label})
})
}M.callback({results:w.names})
}};
J.subEntityMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
w.names=[];
if(J.options.length!==0){w.names=angular.copy(J.options);
angular.forEach(J.options,function(N){w.names.push({id:N.value,text:N.label})
})
}M.callback({results:w.names})
}};
J.subEntitySingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
w.names=[];
if(J.options.length!==0){w.names=angular.copy(J.options);
angular.forEach(J.options,function(N){w.names.push({id:N.value,text:N.label})
})
}M.callback({results:w.names})
}};
J.pointerMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
w.names=[];
if(J.options.length!==0){w.names=angular.copy(J.options);
angular.forEach(J.options,function(N){w.names.push({id:N.value,text:N.label})
})
}M.callback({results:w.names})
}};
J.pointerSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
w.names=[];
if(J.options.length!==0){w.names=angular.copy(J.options);
angular.forEach(J.options,function(N){w.names.push({id:N.value,text:N.label})
})
}M.callback({results:w.names})
}};
J.userMultiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(Q){var P=Q.term;
w.names=[];
var S=function(T){if(T.length!==0){w.names=T;
angular.forEach(T,function(U){w.names.push({id:U.value+":"+U.description,text:U.label})
})
}Q.callback({results:w.names})
};
var N=function(){};
if(G){var M=false;
var O;
if(F===false&&I===false){if(P.substring(0,2)==="@E"||P.substring(0,2)==="@e"){M=true;
O=Q.term.slice(2)
}else{M=true;
O=Q.term
}}else{if(P.substring(0,2)==="@E"||P.substring(0,2)==="@e"){M=true;
O=Q.term.slice(2)
}}if(M===true){h.retrieveUserList(O.trim(),S,N)
}}if(F){var L=false;
var O;
if(G===false&&I===false){if(P.substring(0,2)==="@D"||P.substring(0,2)==="@d"){L=true;
O=Q.term.slice(2)
}else{L=true;
O=Q.term
}}else{if(P.substring(0,2)==="@D"||P.substring(0,2)==="@d"){L=true;
O=Q.term.slice(2)
}}if(L===true){e.retrieveDepartmentList(O.trim(),S,N)
}}if(I){var R=false;
var O;
if(G===false&&F===false){if(P.substring(0,2)=="@R"||P.substring(0,2)=="@r"){R=true;
O=Q.term.slice(2)
}else{R=true;
O=Q.term
}}else{if(P.substring(0,2)=="@R"||P.substring(0,2)=="@r"){R=true;
O=Q.term.slice(2)
}}if(R===true){e.retrieveRoleList(O.trim(),S,N)
}}else{Q.callback({results:w.names})
}}};
J.userSingleselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,N){var M=[];
N(M)
},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(Q){var P=Q.term;
w.names=[];
var S=function(T){if(T.length!==0){w.names=T;
angular.forEach(T,function(U){w.names.push({id:U.value+":"+U.description,text:U.label})
})
}Q.callback({results:w.names})
};
var N=function(){};
if(G){var O;
var M=false;
if(F===false&&I===false){if(P.substring(0,2)==="@E"||P.substring(0,2)==="@e"){M=true;
O=Q.term.slice(2)
}else{M=true;
O=Q.term
}}else{if(P.substring(0,2)==="@E"||P.substring(0,2)==="@e"){M=true;
O=Q.term.slice(2)
}}if(M===true){h.retrieveUserList(O.trim(),S,N)
}}if(F){var L=false;
var O;
if(G===false&&I===false){if(P.substring(0,2)==="@D"||P.substring(0,2)==="@d"){L=true;
O=Q.term.slice(2)
}else{L=true;
O=Q.term
}}else{if(P.substring(0,2)==="@D"||P.substring(0,2)==="@d"){L=true;
O=Q.term.slice(2)
}}if(L===true){e.retrieveDepartmentList(O.trim(),S,N)
}}if(I){var R=false;
var O;
if(G===false&&F===false){if(P.substring(0,2)=="@R"||P.substring(0,2)=="@r"){R=true;
O=Q.term.slice(2)
}else{R=true;
O=Q.term
}}else{if(P.substring(0,2)=="@R"||P.substring(0,2)=="@r"){R=true;
O=Q.term.slice(2)
}}if(R===true){e.retrieveRoleList(O.trim(),S,N)
}}else{}}}
});
w.ruleObject.ruleList[E].showtemplate=true
}else{w.ruleObject.ruleList[E].showtemplate=false
}};
w.isRulesEmpty=function(){if(!!w.allRules){return w.allRules.length<=0
}else{return true
}};
w.onOperatorClick=function(D){w.ruleObject.ruleList[D].showtemplate=false;
w.ruleObject.ruleList[D].rowsubmitted=false;
setTimeout(function(){w.onOperatorChange(D)
})
};
w.addRule=function(H,E){w.ruleObject.ruleList[E].rowsubmitted=true;
console.log(H.$valid);
if(H.$valid){var D=true;
var G=w.ruleObject.ruleList[E].operator.shortcutCode;
console.log(G);
for(var F=0;
F<G;
F++){var K=w.ruleObject.ruleList[E].values[F];
if(w.ruleObject.ruleList[E].operator.label!=="has no value"&&w.ruleObject.ruleList[E].operator.label!=="has any value"&&w.ruleObject.ruleList[E].operator.label!=="IsAbsentToday"&&w.ruleObject.ruleList[E].operator.label!=="AbsentWithoutInfo"&&w.ruleObject.ruleList[E].operator.label!=="RestrictByIP"){if(w.ruleObject.ruleList[E].field.type==="MultiSelect"){var J=w.ruleObject.ruleList[E].values;
D=(D&&true)
}else{if(K!==null&&K!==undefined){D=(D&&true)
}else{D=false
}}}else{D=(D&&true)
}}if(D){console.log("==="+w.entityId);
if(parseInt(w.entityId)<0){w.entityList=angular.copy(w.entityListWithOutField)
}else{w.entityList=angular.copy(w.entityListWithField)
}var I=u();
w.ruleObject.ruleList.push(I)
}}};
w.remove=function(D){w.ruleObject.ruleList.splice(D,1);
if(w.ruleObject.ruleList.length===1){w.entityList=angular.copy(w.entityListFromDb)
}if(w.ruleObject.ruleList.length===0){var E=u();
w.ruleObject.ruleList.push(E);
w.ruleObject.ruleList[D].rowsubmitted=false
}};
w.save=function(E){if(!!w.ruleObject.ruleList){for(var I=0;
I<w.ruleObject.ruleList.length;
I++){w.ruleObject.ruleList[I].rowsubmitted=true
}}w.ruleSubmitted=true;
if(E.$valid){var K=true;
for(var J=0;
J<w.ruleObject.ruleList.length;
J++){var D=w.ruleObject.ruleList[J].operator.shortcutCode;
for(var I=0;
I<D;
I++){var G=w.ruleObject.ruleList[J].values[I];
if(w.ruleObject.ruleList[J].operator.label!=="has no value"&&w.ruleObject.ruleList[J].operator.label!=="has any value"){if(w.ruleObject.ruleList[J].field.type==="MultiSelect"){K=(K&&true)
}else{if(G!==null&&G!==undefined){K=(K&&true)
}else{K=false;
break
}}}else{K=(K&&true)
}}if(K===false){break
}}if(K){var N=[];
var F=w.ruleObject.ruleList.length;
for(var I=0;
I<F;
I++){w.ruleObject.ruleList[I].rowsubmitted=true;
var H={};
H=angular.copy(w.ruleObject.ruleList[I]);
var L={};
L.entity=H.entity;
L.field=H.field.id;
L.operator=H.operator.label;
L.fieldType=H.field.type;
if(L.fieldType!=="Pointer"&&L.fieldType!=="SubEntity"){if(L.fieldType!=="Date range"&&L.fieldType!=="UserMultiSelect"&&L.fieldType!=="MultiSelect"&&L.fieldType!=="Dropdown"){L.value=H.values[0];
if(H.values.length>1){L.value1=H.values[1]
}}else{if(L.fieldType!=="UserMultiSelect"&&L.fieldType!=="MultiSelect"&&L.fieldType!=="Dropdown"){L.value=H.values[0]+","+H.values[1]
}else{if(H.operator.label!=="has any value from"){if(H.values.toString().indexOf(",")>-1){H.values.toString().replace(/,/g,"")
}}L.value=H.values
}if(H.values.length>1&&L.fieldType!=="UserMultiSelect"&&L.fieldType!=="MultiSelect"&&L.fieldType!=="Dropdown"){L.value1=H.values[2]+","+H.values[3]
}}}else{if(L.fieldType==="SubEntity"){if(H.field.subentityDropListType==="Date "){L.value=H.values[0];
if(H.values.length>1){L.value1=H.values[1]
}}else{if(H.operator.label!=="has any value from"){if(H.values.toString().indexOf(",")>-1){H.values.toString().replace(/,/g,"")
}}L.value=H.values
}if(H.values.length>1&&H.field.subentityDropListType==="Date "){L.value1=H.values[2]+","+H.values[3]
}}else{if(H.field.pointertype!=="MultiSelect"&&H.field.pointertype!=="Dropdown"){L.value=H.values[0];
if(H.values.length>1){L.value1=H.values[1]
}}else{if(H.field.pointertype!=="MultiSelect"&&H.field.pointertype!=="Dropdown"){L.value=H.values[0]+","+H.values[1]
}else{if(H.operator.label!=="has any value from"){if(H.values.toString().indexOf(",")>-1){H.values.toString().replace(/,/g,"")
}}L.value=H.values
}if(H.values.length>1&&H.field.pointertype!=="MultiSelect"&&H.field.pointertype!=="Dropdown"){L.value1=H.values[2]+","+H.values[3]
}}}}N.push(L)
}if(E.$valid){w.ruleObject.criterias=angular.copy(N);
w.ruleObject.isArchive=!w.ruleObject.isActive;
if(!!w.selectedRule){var J=parseInt(w.selectedRule.id);
angular.forEach(w.allRules,function(O){if(O.id==w.selectedRule.id){O.ruleName=angular.copy(w.ruleObject.ruleName);
O.remarks=angular.copy(w.ruleObject.remarks);
O.apply=angular.copy(w.ruleObject.apply);
O.criterias=angular.copy(w.ruleObject.criterias);
O.isActive=angular.copy(w.ruleObject.isActive);
O.isArchive=angular.copy(w.ruleObject.isArchive);
O.ruleNumber=angular.copy(w.ruleObject.ruleNumber)
}});
if(w.isEditRule){w.reset(E)
}}else{if(w.addFlag){if(!!!w.allRules){w.allRules=[]
}w.allRules.push(w.ruleObject);
w.selectedRule=w.ruleObject
}}w.rulesetObject=angular.copy(w.allRules);
w.ruleSubmitted=false;
w.addFlag=false;
w.selectedRule=""
}}}else{var M=s[0].querySelector("input.ng-invalid");
if(M){M.focus()
}}};
w.checkIfCriteriasAreValid=function(D){for(var E=0;
E<D.length;
E++){if(D[E]===undefined||D[E]===null){console.log("here it's failed--ruleList[i] === undefined");
return false
}if(D[E].entity===undefined||D[E].entity.length===0){console.log("here it's failed-- entity undefined");
return false
}if(w.entityId>0&&(D[E].field===undefined||(D[E].field instanceof Object&&jQuery.isEmptyObject(D[E].field)))){console.log("here it's failed-- field undefined");
return false
}if(D[E].operator===undefined||(D[E].operator instanceof Object&&jQuery.isEmptyObject(D[E].operator))){console.log("here it's failed-- operator undefined");
return false
}else{if(D[E].operator.label==="has no value"||D[E].operator.label==="has any value"||D[E].operator.label==="IsAbsentToday"||D[E].operator.label==="AbsentWithoutInfo"||D[E].operator.label==="RestrictByIP"){return true
}}if(D[E].values===undefined||D[E].values.length===0){console.log("here it's failed-- values undefined");
return false
}}return true
};
w.saveCriterias=function(){if(w.checkIfCriteriasAreValid(w.ruleObject.ruleList)){console.log("CriteriasAreValid");
var J=true;
for(var I=0;
I<w.ruleObject.ruleList.length;
I++){var D=w.ruleObject.ruleList[I].operator.shortcutCode;
for(var H=0;
H<D;
H++){var F=w.ruleObject.ruleList[I].values[H];
if(w.ruleObject.ruleList[I].operator.label!=="has no value"&&w.ruleObject.ruleList[I].operator.label!=="has any value"&&w.ruleObject.ruleList[I].operator.label!=="IsAbsentToday"&&w.ruleObject.ruleList[I].operator.label!=="AbsentWithoutInfo"&&w.ruleObject.ruleList[I].operator.label!=="RestrictByIP"){if(w.ruleObject.ruleList[I].field.type==="MultiSelect"){J=(J&&true)
}else{if(F!==null&&F!==undefined){J=(J&&true)
}else{J=false;
break
}}}else{J=(J&&true)
}}if(J===false){break
}}if(J){var L=[];
var E=w.ruleObject.ruleList.length;
for(var H=0;
H<E;
H++){var G={};
G=angular.copy(w.ruleObject.ruleList[H]);
var K={};
K.entity=G.entity;
if(w.entityId>0){K.field=G.field.id;
K.fieldType=G.field.type
}K.operator=G.operator.label;
if(K.fieldType!=="Pointer"&&K.fieldType!=="SubEntity"){if(K.fieldType!=="Date range"&&K.fieldType!=="UserMultiSelect"&&K.fieldType!=="MultiSelect"&&K.fieldType!=="Dropdown"){K.value=G.values[0];
if(G.values.length>1){K.value1=G.values[1]
}}else{if(K.fieldType!=="UserMultiSelect"&&K.fieldType!=="MultiSelect"&&K.fieldType!=="Dropdown"){K.value=G.values[0]+","+G.values[1]
}else{if(G.operator.label!=="has any value from"){if(G.values.toString().indexOf(",")>-1){G.values.toString().replace(/,/g,"")
}}K.value=G.values
}if(G.values.length>1&&K.fieldType!=="UserMultiSelect"&&K.fieldType!=="MultiSelect"&&K.fieldType!=="Dropdown"){K.value1=G.values[2]+","+G.values[3]
}}}else{if(K.fieldType==="SubEntity"){if(G.field.subentityDropListType==="Date "){K.value=G.values[0];
if(G.values.length>1){K.value1=G.values[1]
}}else{if(G.operator.label!=="has any value from"){if(G.values.toString().indexOf(",")>-1){G.values.toString().replace(/,/g,"")
}}K.value=G.values
}if(G.values.length>1&&G.field.subentityDropListType==="Date "){K.value1=G.values[2]+","+G.values[3]
}}else{if(G.field!==undefined&&G.field!==null&&G.field.pointertype!=="MultiSelect"&&G.field.pointertype!=="Dropdown"){K.value=G.values[0];
if(G.values.length>1){K.value1=G.values[1]
}}else{if(G.field!==undefined&&G.field!==null&&G.field.pointertype!=="MultiSelect"&&G.field.pointertype!=="Dropdown"){K.value=G.values[0]+","+G.values[1]
}else{if(G.operator.label!=="has any value from"){if(G.values.toString().indexOf(",")>-1){G.values.toString().replace(/,/g,"")
}}K.value=G.values
}if(G.field!==undefined&&G.field!==null&&G.values!==undefined&&G.values!==null&&G.values.length>1&&G.field.pointertype!=="MultiSelect"&&G.field.pointertype!=="Dropdown"){K.value1=G.values[2]+","+G.values[3]
}}}}L.push(K)
}w.ruleObject.criterias=angular.copy(L)
}}};
w.saveAndSubmit=function(E){w.save(E);
if(E.$valid||w.allRules.length<=0){var D={};
D.rules=angular.copy(w.allRules);
D.franchise=w.activityflow.franchise.otherId;
if(w.allRules.length>0){c.createRuleSet(D,function(F){w.rulesetid=null;
w.hideRule(E,false)
});
w.allRules=[]
}}else{return
}};
w.onRuleChange=function(D){q.maskLoading();
if(!!!w.selectedRule){}else{l(w.allRules[w.allRules.indexOf(w.selectedRule)]);
w.editRule=true;
w.addFlag=false
}q.unMaskLoading()
};
w.deleteRule=function(){var D;
if(w.selectedRule!==null){$.grep(w.allRules,function(F,E){if(F.ruleName===w.selectedRule.ruleName){D=E;
return true
}});
w.allRules.splice(D,1);
w.selectedRule=null
}};
w.reset=function(D){w.selectedRule="";
w.addFlag=true;
y();
if(D!==undefined){D.$setPristine()
}else{w.addRuleForm.$setPristine()
}w.selectedRule=null;
w.ruleSubmitted=false
};
w.resetCancel=function(D){w.selectedRule="";
w.addFlag=false;
y();
D.$setPristine();
w.ruleSubmitted=false;
w.selectedRule=null
};
w.$watch("rulesetObject",function(D){if(w.onlyCriteria===false){w.initializeRuleConfig();
w.addFlag=false;
w.selectedRule=undefined
}else{c.retrievePrerequisite(function(F){console.log(JSON.stringify(F.entity));
w.entityListFromDb=angular.copy(F.entity);
w.entityListWithField={};
w.entityListWithOutField={};
for(var E in w.entityListFromDb){if(parseInt(E)>0){w.entityListWithField[E]=w.entityListFromDb[E]
}else{w.entityListWithOutField[E]=w.entityListFromDb[E]
}}console.log(w.entityListWithOutField);
w.entityList=F.entity;
if(!!!w.entityList){w.entityList={}
}w.operators=F.operator;
if(w.rulesetObject!==undefined&&w.rulesetObject!==null){w.ruleObject=w.rulesetObject;
if(w.rulesetObject.criterias!==undefined&&w.rulesetObject.criterias!==null){w.ruleObject.ruleList=[];
v(w.rulesetObject.criterias,0)
}else{w.ruleObject.ruleList=[];
var G=u();
w.ruleObject.ruleList.push(G);
G.rowsubmitted=false;
w.ruleObject.apply="All"
}}})
}});
w.$watch("ruleObject.ruleList",function(D){console.log("$scope.saveCriterias---$scope.onlyCriteria---"+w.onlyCriteria);
if(w.onlyCriteria===true){w.saveCriterias()
}},true)
}];
return{restrict:"E",link:f,scope:k,controller:b,templateUrl:"scripts/directives/ruletemplate/ruletemplate.tmpl.html"}
}])
});