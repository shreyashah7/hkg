define(["angular","webcam","datepickercustom.directive"],function(){globalProvider.compileProvider.directive("subentity",["$q","$parse","$http","$templateCache","$compile","$document","$timeout","$rootScope","$filter",function(g,d,j,c,f,e,b,k,h){var a={text:{element:"input",type:"text",editable:true,textBased:true},date:{element:"ag-date-picker-custom",type:"date",editable:true,textBased:false},datetime:{element:"input",type:"datetime",editable:true,textBased:true},"datetime-local":{element:"input",type:"datetime-local",editable:true,textBased:true},email:{element:"input",type:"email",editable:true,textBased:true},month:{element:"input",type:"month",editable:true,textBased:true},number:{element:"input",type:"text",editable:true,textBased:true},password:{element:"input",type:"password",editable:true,textBased:true},search:{element:"input",type:"search",editable:true,textBased:true},tel:{element:"input",type:"tel",editable:true,textBased:true},textarea:{element:"textarea",editable:true,textBased:true},time:{element:"input",type:"time",editable:true,textBased:true},url:{element:"input",type:"url",editable:true,textBased:true},week:{element:"input",type:"week",editable:true,textBased:true},checkbox:{element:"input",type:"checkbox",editable:true,textBased:false},color:{element:"input",type:"color",editable:true,textBased:false},file:{element:"input",type:"file",editable:true,textBased:false},range:{element:"input",type:"range",editable:true,textBased:false},checklist:{element:"div",editable:false,textBased:false},fieldset:{element:"fieldset",editable:false,textBased:false},radio:{element:"div",editable:false,textBased:false},hidden:{element:"input",type:"hidden",editable:false,textBased:false},image:{element:"input",type:"image",editable:false,textBased:false},legend:{element:"legend",editable:false,textBased:false},reset:{element:"button",type:"reset",editable:false,textBased:false},submit:{element:"button",type:"submit",editable:false,textBased:false},imageUpload:{element:"input",type:"hidden",editable:true,textBased:false},fileUpload:{element:"input",type:"hidden",editable:true,textBased:true},fileDownload:{element:"input",type:"hidden",editable:true,textBased:true},multiSelect:{element:"input",type:"text",editable:true,textBased:true},percent:{element:"input",type:"text",editable:true,textBased:true},UserMultiSelect:{element:"input",type:"text",editable:true,textBased:true},AutoGenerated:{element:"input",type:"text",editable:false,textBased:true},pointer_multiSelect:{element:"input",type:"text",editable:true,textBased:true},Angle:{element:"input",type:"text",editable:true,textBased:true},};
var i=function(l,n,m){var o=function(){console.log("in sub directive");
var A=l[m.template];
var x=0;
var t=null,q=null,s=null,v="",z=false,y=n,r=null,p=null,w=m.submitFlagName;
if(!w){w="submitted"
}var u=2;
l.$watch(function(){return l.subFieldTemplate
},function(C,G){if(angular.isDefined(m.ngModel)&&(angular.isDefined(m.template)||angular.isDefined(m.templateUrl))&&!n.hasClass("dynamic-form")){r=d(m.ngModel)(l);
if(m.noOfFieldPerRow){u=parseInt(m.noOfFieldPerRow)
}if(!r){var H=m.ngModel.split(".");
l[H[0]]={};
var F=d(H[0])(l);
for(var E=1;
E<H.length;
E++){F[H[E]]={};
F=F[H[E]]
}r=F;
l[m.ngModel]={};
r=l[m.ngModel]
}p=d(m.dbMap)(l);
if(!p){var B=m.dbMap.split(".");
l[B[0]]={};
var D=d(B[0])(l);
for(var E=1;
E<B.length;
E++){D[B[E]]={};
D=D[B[E]]
}p=D
}(m.template?g.when(d(m.template)(l)):j.get(m.templateUrl,{cache:c}).then(function(I){return I.data
})).then(function(I){var J=function(Y,aC){if(angular.isDefined(Y.dbType)){if(Y.type==="date"&&Y.attributes&&(Y.attributes.type==="timerange"||Y.attributes.type==="datetimerange"||Y.attributes.type==="daterange")){p[Y.fromModel]=Y.dbType;
p[Y.toModel]=Y.dbType
}else{p[Y.model]=Y.dbType
}}if(!angular.isDefined(a[Y.type])||a[Y.type]===false){t=angular.element("<span></span>");
if(angular.isDefined(Y.label)){angular.element(t).html(Y.label)
}angular.forEach(Y,function(aT,aS){if(["label","type"].indexOf(aS)>-1){return
}t.attr(aS,aT)
});
this.append(t);
t=null
}else{if((angular.isDefined(m.viewOnly)&&m.viewOnly==="true")||m.viewOnly===true){m.viewOnly=true
}else{m.viewOnly=false
}if(angular.isDefined(m.userDefined)&&m.userDefined!==null){l.userDefined=true;
l.userDefinedData=l[m.userDefined]
}else{l.userDefined=false
}if(m.viewOnly){t=angular.element("<span></span>");
if(Y.type==="date"||Y.type==="timerange"){var af=angular.element('<span  ng-hide="!'+m.ngModel+"."+Y.fromModel+'" ></span>');
af.prepend("{{"+m.ngModel+"['from"+Y.model+"']}}{{"+m.ngModel+"['to"+Y.model+"']}}");
t.prepend(af);
var aD=angular.element('<span  ng-show="!'+m.ngModel+"."+Y.fromModel+'" ></span>');
aD.prepend("N/A");
t.prepend(aD)
}else{if(Y.type==="percent"){var aa=angular.element('<span  ng-hide="!'+m.ngModel+"."+Y.model+'" ></span>');
aa.prepend("{{"+m.ngModel+"['"+Y.model+"']}}  % ");
t.prepend(aa);
var S=angular.element('<span  ng-show="!'+m.ngModel+"."+Y.model+'" ></span>');
S.prepend("N/A");
t.prepend(S)
}else{if(Y.type==="Angle"){var aI=angular.element('<span  ng-hide="!'+m.ngModel+"."+Y.model+'" ></span>');
aI.prepend("{{"+m.ngModel+"['"+Y.model+"']}}");
aI.append('<span class="">&#176</span>');
t.prepend(aI);
var M=angular.element('<span  ng-show="!'+m.ngModel+"."+Y.model+'" ></span>');
M.prepend("N/A");
t.prepend(M)
}else{if(Y.type==="currency"){var aF=angular.element('<span  ng-hide="!'+m.ngModel+"."+Y.model+'" ></span>');
aF.prepend(format(Y.currencyformat,"{{"+m.ngModel+"['"+Y.model+"']}}"));
if(Y.currencyPrefix==="P"){aF.prepend(document.createTextNode(" "+Y.currencytype+" "));
t.prepend(aF)
}else{aF.append(document.createTextNode("  "+Y.currencytype));
t.append(aF)
}var ax=angular.element('<span  ng-show="!'+m.ngModel+"."+Y.model+'" ></span>');
ax.prepend("N/A");
t.prepend(ax)
}else{var aH=angular.element('<span  ng-hide="!'+m.ngModel+"."+Y.model+'" ></span>');
aH.prepend("{{"+m.ngModel+"['"+Y.model+"']}} ");
t.prepend(aH);
var T=angular.element('<span  ng-show="!'+m.ngModel+"."+Y.model+'" ></span>');
T.prepend("N/A");
t.prepend(T)
}}}}}else{if(!angular.isDefined(Y.model)){Y.model=aC
}t=angular.element(e[0].createElement(a[Y.type].element));
if(angular.isDefined(a[Y.type].type)){t.attr("type",a[Y.type].type)
}if(angular.isDefined(a[Y.type].editable)&&a[Y.type].editable){if(angular.isDefined(Y.fromModel)&&angular.isDefined(Y.toModel)){t.attr("name",Y.fromModel);
t.attr("from-model",m.ngModel+"['"+Y.fromModel+"']");
t.attr("name",Y.toModel);
t.attr("to-model",m.ngModel+"['"+Y.toModel+"']")
}else{t.attr("id",Y.model);
t.attr("name",Y.model);
t.attr("ng-model",m.ngModel+"['"+Y.model+"']")
}if(angular.isDefined(Y.readonly)){t.attr("ng-readonly",Y.readonly)
}if(angular.isDefined(Y.required)){t.attr("ng-required",Y.required)
}if(angular.isDefined(Y.val)){r[Y.model]=angular.copy(Y.val);
t.attr("value",Y.val)
}}if(angular.isDefined(a[Y.type].textBased)&&a[Y.type].textBased){console.log("inside text");
if(angular.isDefined(Y.minLength)){t.attr("ng-minlength",Y.minLength)
}t.attr("class","form-control");
if(angular.isDefined(Y.maxLength)){t.attr("maxlength",Y.maxLength)
}if(angular.isDefined(Y.minLength)){t.attr("ng-minlength",Y.minLength)
}if(Y.attributes!==undefined&&angular.isDefined(Y.attributes.maxLength)){t.attr("maxlength",Y.attributes.maxLength)
}if(angular.isDefined(Y.validate)){t.attr("ng-pattern",Y.validate)
}if(angular.isDefined(Y.placeholder)){t.attr("placeholder",Y.placeholder)
}if(angular.isDefined(Y.masked)&&Y.masked){if(k.viewEncryptedData===false){t.attr("type","password")
}}else{t.attr("type","text")
}}if(Y.type==="date"){t.attr("ng-form","form1234")
}if(Y.type==="number"||Y.type==="range"){console.log("in number");
t.attr("numbers-only",true);
if(Y.negativeAllowed!==null&&Y.negativeAllowed!==undefined&&(Y.negativeAllowed===true||Y.negativeAllowed==="true")){t.attr("negativeallowed",Y.negativeAllowed)
}console.log("decimal ----"+Y.decimalallowed+"---"+Y.model);
if(Y.decimalallowed!==null&&Y.decimalallowed!==undefined&&(Y.decimalallowed===true||Y.decimalallowed==="true")){console.log("if in dec");
t.attr("decimalallowed",true)
}else{console.log("else");
t.attr("decimalallowed",false)
}if(angular.isDefined(Y.min)){t.attr("min",Y.min)
}if(angular.isDefined(Y.max)){t.attr("max",Y.max)
}if(Y.type==="range"){if(angular.isDefined(Y.step)){t.attr("step",Y.step)
}}}else{if(["text","textarea"].indexOf(Y.type)>-1){if(angular.isDefined(Y.splitBy)){t.attr("ng-list",Y.splitBy)
}}else{if(Y.type==="checkbox"){if(angular.isDefined(Y.isOn)){t.attr("ng-true-value",Y.isOn)
}if(angular.isDefined(Y.isOff)){t.attr("ng-false-value",Y.isOff)
}if(angular.isDefined(Y.slaveTo)){t.attr("ng-checked",Y.slaveTo)
}}else{if(Y.type==="checklist"){if(angular.isDefined(Y.val)){r[Y.model]=angular.copy(Y.val)
}if(angular.isDefined(Y.values)){if(!(angular.isDefined(r[Y.model])&&angular.isObject(r[Y.model]))){r[Y.model]={}
}angular.forEach(Y.values,function(aS,aT){s=angular.element('<input type="checkbox" />');
s.attr("name",Y.model+"."+aT);
s.attr("ng-model",m.ngModel+"['"+Y.model+"']['"+aT+"']");
if(angular.isDefined(aS["class"])){s.attr("ng-class",aS["class"])
}if(angular.isDefined(Y.disabled)){s.attr("ng-disabled",Y.disabled)
}if(angular.isDefined(Y.readonly)){s.attr("ng-readonly",Y.readonly)
}if(angular.isDefined(Y.required)){s.attr("ng-required",Y.required)
}if(angular.isDefined(Y.callback)){s.attr("ng-change",Y.callback)
}if(angular.isDefined(aS.isOn)){s.attr("ng-true-value",aS.isOn)
}if(angular.isDefined(aS.isOff)){s.attr("ng-false-value",aS.isOff)
}if(angular.isDefined(aS.slaveTo)){s.attr("ng-checked",aS.slaveTo)
}if(angular.isDefined(aS.val)){r[Y.model][aT]=angular.copy(aS.val);
newChlid.attr("value",Y.val)
}if(angular.isDefined(aS.label)){s=s.wrap('<label class="col-md-4"></label>').parent();
s=s.append("{{"+m.internationalizationLabel+"+'"+aS.label+"'| translate }}")
}t.append(s)
})
}}else{if(Y.type==="radio"){if(angular.isDefined(Y.val)){r[Y.model]=angular.copy(Y.val)
}if(angular.isDefined(Y.values)){angular.forEach(Y.values,function(aS,aT){s=angular.element('<input type="radio" />');
s.attr("name",Y.model);
s.attr("ng-model",m.ngModel+"['"+Y.model+"']");
if(angular.isDefined(Y["class"])){s.attr("ng-class",Y["class"])
}if(angular.isDefined(Y.disabled)){s.attr("ng-disabled",Y.disabled)
}if(angular.isDefined(Y.callback)){s.attr("ng-change",Y.callback)
}if(angular.isDefined(Y.readonly)){s.attr("ng-readonly",Y.readonly)
}if(angular.isDefined(Y.required)){s.attr("ng-required",Y.required)
}s.attr("value",parseInt(aT));
if(angular.isDefined(Y.val)&&Y.val===aT){s.attr("checked","checked")
}if(aS){s=s.wrap('<label class="radio-inline"></label>').parent();
s=s.append("{{"+m.internationalizationLabel+"+'"+aS+"'| translate }}")
}t.append(s)
})
}}else{if(Y.type==="hidden"){t.attr("name",Y.model);
t.attr("ng-model",m.ngModel+"['"+Y.model+"']");
if(angular.isDefined(Y.val)){r[Y.model]=angular.copy(Y.val);
t.attr("value",Y.val)
}}else{if(Y.type==="fileUpload"){var aO=JSON.stringify(Y.acceptedFormats);
var az=Y.maxsize;
var an="<div ng-controller='SubentityFileUploadController' flow-file-added='fileAdded($file, $flow,"+aO+","+az+","+Y.flowInit.singleFile+',"'+m.ngModel+'","'+Y.model+"\")' flow-file-error='fileError($flow,$file,$message)' flow-file-progress='fileProgress($file);' flow-file-success='fileSuccess($file,$flow,\""+Y.model+'","'+m.ngModel+'",'+Y.flowInit.singleFile+" )' flow-files-submitted='$flow.upload()' > </div>";
t=t.wrap(an).parent();
t.attr("flow-init","{target: '"+Y.flowInit.target+"',singleFile:"+Y.flowInit.singleFile+", testChunks:"+Y.flowInit.testChunks+",query:{model: '"+Y.model+"'}}");
l.flag=false;
l.UploadedFiles=l[m.ngModel][Y.model];
var al=0;
if(l[m.ngModel][Y.model]){al=l[m.ngModel][Y.model].length
}var at=angular.element('<button class="btn btn-hkg" ng-hide="flag || '+m.ngModel+"."+Y.model+".length===1 && "+Y.flowInit.singleFile+'" flow-btn>Choose File</button>');
t.append(at);
var aK=angular.element('<li class="list-group-item col-md-12"></li>');
aK.prepend("<label>{{file.name}}</label>");
var Q="<span><input type='button' class='btn btn-info pull-right' ng-click='remove(file,\""+Y.model+'","'+m.ngModel+'",'+Y.flowInit.singleFile+")' value='Cancel' /></span>";
var am=angular.element(Q);
var R=angular.element('<span ng-click="pause(file)" class="btn btn-info pull-right" ng-show="!file.isComplete()">Pause</span>');
var ak=angular.element('<span ng-click="resume(file)" class="btn btn-info pull-right" ng-show="!file.isComplete()">Resume</span>');
aK.attr("ng-repeat","file in $flow.files");
var aN=angular.element('<div class="progress-bar" aria-valuemax="1" style="color:black;width:  {{(100*file.sizeUploaded()/file.size)| number:0}}%;"> </div>');
var L=angular.element('<div class="progress"></div>');
L.prepend(aN);
aK.prepend(L);
aK.prepend(R);
aK.prepend(ak);
aK.prepend(am);
t.append(aK);
var ap="<span class='btn btn-info pull-right' ng-show='$flow.files.length >1' ng-click='cancel($flow,\""+Y.model+'","'+m.ngModel+"\" )'>CancelAll</span>";
var aq=angular.element(ap);
t.prepend(aq);
var ay=angular.element('<li class="list-group-item col-md-12"></li>');
var aL="fileName in "+m.ngModel+"."+Y.model+"";
ay.attr("ng-repeat",aL);
var ao=angular.element("<a ng-href='api/fileUpload/download?filename={{fileName}}&token={{authToken}}'>{{fileName.substring(fileName.lastIndexOf('@')+1)}}</a>");
ay.append(ao);
var aM=angular.element("<span class='glyphicon glyphicon-remove pull-right text-danger' ng-click='removeLink(fileName,\""+Y.model+'","'+m.ngModel+'",'+Y.flowInit.singleFile+")'/>");
ay.append(aM);
ay.wrap('<div style="position:relative"> </div>').parent();
var aG=angular.element('<a ng-show="'+m.ngModel+"."+Y.model+" && !("+m.ngModel+"."+Y.model+".length <= 1) ng-href='api/fileUpload/downloadAll?filenames={{"+m.ngModel+"."+Y.model+"}}&token={{authToken}}'>DownLoadAll</a>");
t.append(ay);
t.append(aG)
}else{if(Y.type==="file"){}else{if(Y.type==="fileDownload"){var an="<div> </div>";
t=t.wrap(an).parent();
var aK=angular.element('<li class="list-group-item"></li>');
var aL="fileName in ["+Y.data+"]";
aK.attr("ng-repeat",aL);
var V=angular.element("<a ng-href='api/fileUpload/download?filename={{fileName}}&token={{authToken}}'>{{fileName}}</a>");
aK.prepend(V);
t.append(aK)
}else{if(Y.type==="imageUpload"){var aj=JSON.stringify(Y.fileFormat);
var az=Y.maxsize;
t.attr("flow-btn","true");
t.attr("singleFile","true");
var an="<div ng-controller='SubentityImageUploadController' flow-file-added='fileAdded($file, $flow,"+aj+","+az+")' flow-file-error='fileError($flow,$file,$message)' flow-file-completed='complete($file)' flow-file-progress='fileProgress($file);' flow-file-success='fileSuccess($file,$flow,\""+Y.model+'","'+m.ngModel+'",'+Y.flowInit.singleFile+" )'   flow-files-submitted='$flow.upload()' > </div>";
t=t.wrap(an).parent();
var ae="true";
t.attr("flow-init","{target: '"+Y.flowInit.target+"',singleFile:"+Y.flowInit.singleFile+", testChunks:"+ae+",query:{model: '"+Y.model+"'}}");
var ab=angular.element('<div class="thumbnail col-md-11" ng-show="'+m.ngModel+"."+Y.model+'" style="margin-bottom:0px;></div>');
var ad=angular.element('<img ng-src="{{'+m.ngModel+Y.model+'}}"  style= "width:'+Y.width+";height:"+Y.height+'" />');
ab=ab.prepend(ad);
t.prepend(ab);
var X=angular.element('<div class="thumbnail" ng-show="!'+m.ngModel+"."+Y.model+'" style="margin-bottom:0px;></div>');
var ah=angular.element('<img src="images/noImage.gif" />');
X=X.prepend(ah);
t.prepend(X);
var au="<span style='display:inline;font-size:18px;cursor: pointer;' title='Remove image' ng-click='remove(\""+Y.model+'","'+m.ngModel+"\")' ng-show='"+m.ngModel+"."+Y.model+"'' class='glyphicon glyphicon-remove text-danger'></span>";
var ag=angular.element(au);
t.append(ag);
t.append(ag);
var U=angular.element("<div class='text-right' ng-class=\"{'col-md-11':"+m.ngModel+"."+Y.model+",'col-md-12':!"+m.ngModel+"."+Y.model+'}"></div>');
var P='<div class="row"></div>';
var N="<span  class='glyphicon glyphicon-folder-open text-info' style='font-size:18px;cursor: pointer;' title='Upload from drive'  ng-show='"+m.ngModel+"."+Y.model+"' flow-btn></span>";
var at=angular.element(N);
U.append(at);
var Z=angular.element('<span class="glyphicon glyphicon-folder-open text-info" title="Upload from drive" style="font-size:18px;cursor: pointer;" ng-model="file.name" ng-show="!'+m.ngModel+"."+Y.model+'" flow-btn=""></span>');
var aJ=angular.element('<camera style="display:inline;" model-name="'+Y.model+'" unique-id="'+Y.model+'_sub_entity" model-value="'+m.ngModel+"."+Y.model+'" is-custom="true"></camera>');
U.append(Z);
U.append(aJ);
var ac=angular.element(' <a class="col-md-offset-1" ng-href="api/surveys/download?filename={{file.fileName}}&token={{authToken}}">{{file.fileName}} </a>');
U.append(ac);
U=U.wrap(P).parent();
t.append(U)
}else{if(Y.type==="percent"){t.attr("numbers-only",true);
if(Y.negativeAllowed!==null&&Y.negativeAllowed!==undefined&&(Y.negativeAllowed===true||Y.negativeAllowed==="true")){t.attr("negativeallowed",Y.negativeAllowed)
}if(Y.decimalallowed!==null&&Y.decimalallowed!==undefined&&(Y.decimalallowed===true||Y.decimalallowed==="true")){t.attr("decimalallowed",Y.decimalallowed)
}if(angular.isDefined(Y.required)){t.attr("ng-required",Y.required)
}if(angular.isDefined(Y.min)){t.attr("min",Y.min)
}if(angular.isDefined(Y.max)){t.attr("max",Y.max)
}if(angular.isDefined(Y.readonly)){t.attr("ng-readonly",Y.readonly)
}if(angular.isDefined(Y.readonly)){t.attr("ng-readonly",Y.readonly)
}t.attr("ng-model",m.ngModel+"['"+Y.model+"']");
t=t.wrap('<div class="input-group"> </div>').parent();
var aE=angular.element('<div class="input-group-addon"></div>');
aE.append(document.createTextNode("%"));
t.append(aE)
}else{if(Y.type==="Angle"){if(Y.attributes.negativeAllowed&&angular.isDefined(Y.attributes.negativeAllowed)){}else{t.attr("numbers-only",true);
t.attr("decimalallowed",true)
}if(angular.isDefined(Y.required)){t.attr("ng-required",Y.required)
}if(angular.isDefined(Y.min)){t.attr("min",Y.min)
}if(angular.isDefined(Y.max)){t.attr("max",Y.max)
}if(angular.isDefined(Y.readonly)){t.attr("ng-readonly",Y.readonly)
}if(angular.isDefined(Y.readonly)){t.attr("ng-readonly",Y.readonly)
}t=t.wrap('<div class="input-group"> </div>').parent();
var aE=angular.element('<div class="input-group-addon" ><span class="">&#176</span></div>');
t.append(aE);
t.attr("ng-model",m.ngModel+"['"+Y.model+"']")
}else{if(Y.type==="currency"){if(Y.attributes.negativeAllowed&&angular.isDefined(Y.attributes.negativeAllowed)){}else{t.attr("numbers-only",true);
t.attr("decimalallowed",true)
}if(angular.isDefined(Y.required)){t.attr("ng-required",Y.required)
}if(angular.isDefined(Y.min)){t.attr("min",Y.min)
}if(angular.isDefined(Y.max)){t.attr("max",Y.max)
}if(angular.isDefined(Y.readonly)){t.attr("ng-readonly",Y.readonly)
}if(angular.isDefined(Y.readonly)){t.attr("ng-readonly",Y.readonly)
}t=t.wrap('<div class="input-group"> </div>').parent();
if(Y.currencyPrefix==="P"){var av=angular.element('<span class="input-group-addon"></span>');
av.prepend(document.createTextNode(""+Y.currencytype));
t.prepend(av)
}else{var aE=angular.element('<span class="input-group-addon"></span>');
aE.append(document.createTextNode(""+Y.currencytype));
t.append(aE)
}t.attr("ng-model",m.ngModel+"['"+Y.model+"']")
}else{if(Y.type==="date"&&Y.attributes&&Y.attributes.type&&(Y.attributes.type==="timerange"||Y.attributes.type==="daterange"||Y.attributes.type==="datetimerange")){t.attr("submitted",w);
t.attr("form",m.formName);
if(!m.noOfFieldPerRow||m.noOfFieldPerRow===1){t.attr("input-class","col-md-12");
t.attr("label-class","col-md-12 text-center")
}else{t.attr("input-class",m.inputCss);
t.attr("label-class",m.labelCss)
}t.attr("to-label","To");
t.attr("from-label","From")
}else{if(Y.type==="fieldset"){if(angular.isDefined(Y.fields)){var aB=t;
angular.forEach(Y.fields,J,t);
t=aB
}}}}}}}}}}}}}}}}if(Y.type!=="radio"){if(angular.isDefined(Y["class"])){t.attr("ng-class",Y["class"])
}if(Y.type!=="checklist"){if(angular.isDefined(Y.disabled)){t.attr("ng-disabled",Y.disabled)
}if(angular.isDefined(Y.callback)){if(["button","fieldset","image","legend","reset","submit"].indexOf(Y.type)>-1){v="ng-click"
}else{v="ng-change"
}t.attr(v,Y.callback)
}}}if(Y.type==="imageUpload"){var V=m.ngModel+"."+Y.model;
l.$watch(V,function(){l.imgsrc=l[m.ngModel][Y.model];
var aS="";
if(l[m.ngModel][Y.model]){aS=aS+l[m.ngModel][Y.model]
}var aT=m.ngModel+Y.model;
l[aT]=k.appendAuthToken("api/fileUpload/getimage?file_name="+aS)
})
}if(angular.isDefined(Y.attributes)){angular.forEach(Y.attributes,function(aT,aS){if(aS!=="maxLength"){t.attr(aS,aT)
}})
}}if(angular.isDefined(Y.label)){if(["image","hidden"].indexOf(Y.type)>-1){angular.noop()
}else{if(["fieldset"].indexOf(Y.type)>-1){t.prepend(angular.element(e[0].createElement("legend")).html(Y.label))
}else{if(["button","legend","reset","submit"].indexOf(Y.type)>-1){t.html("{{"+m.internationalizationLabel+"+'"+Y.label+"'| translate }}")
}else{if(q===null){q=angular.element('<div class="form-group" ></div>')
}if(Y.type!=="checkbox"&&!(Y.type==="date"&&Y.attributes&&(Y.attributes.type==="timerange"||Y.attributes.type==="datetimerange"||Y.attributes.type==="daterange"))){}else{if((!m.noOfFieldPerRow||m.noOfFieldPerRow===1)&&Y.type!=="checkbox"){}else{if(Y.type==="checkbox"){if(Y.formatValue==="before"){if(u===2){t=t.wrap('<div class="col-md-4 control-label"></div>').parent()
}if(u===3){t=t.wrap('<div class="col-md-3 control-label"></div>').parent()
}if(u===10){t=t.wrap('<div style="position: relative;min-height: 1px;float: left;width: 100%; padding-left:25px;"></div>').parent()
}}else{if(Y.formatValue==="after"){if(u===2){t=t.wrap('<div class="col-md-8 control-label" style="text-align:left"></div>').parent()
}if(u===3){t=t.wrap('<div class="col-md-8 control-label" style="text-align:left"></div>').parent()
}if(u===10){t=t.wrap('<div  style="position: relative;min-height: 1px;float: left;width: 100%; padding-left:20px;"></div>').parent()
}}}t=t.wrap("<div ng-class=\"{'has-error': "+m.formName+"."+Y.model+".$invalid && ("+w+') }"  ></div>').parent()
}}}if(Y.type!=="checkbox"){if(u===3){t=t.wrap("<div  ng-class=\"{'has-error': "+m.formName+"."+Y.model+".$invalid && ("+w+') }" class="col-md-10"></div>').parent()
}if(u===2){t=t.wrap("<div  ng-class=\"{'has-error': "+m.formName+"."+Y.model+".$invalid && ("+w+') }" class="col-md-8 form-control-static"></div>').parent()
}if(u===10){t=t.wrap("<div  ng-class=\"{'has-error': "+m.formName+"."+Y.model+".$invalid && ("+w+') }" style="position: relative;min-height: 1px;float: left;width: 100%; padding-left:0px;padding-right:0px;"></div>').parent()
}}if(Y.type==="textarea"&&Y.attributes&&Y.attributes.maxLength){var ar=angular.element("<div class='pull-right center'>{{"+Y.attributes.maxLength+" - "+m.ngModel+"."+Y.model+".length}}&nbsp;  {{entity + 'characters left'| translate }}</div>");
t=t.append(ar);
var O="<div class='clearfix'></div>";
t=t.append(O)
}if(Y.type==="number"||Y.type==="percent"||Y.type==="currency"||Y.type==="date"){var W=angular.element('<div id="const_'+Y.model+'" class="text-danger error,help-block ng-hide" > Invalid value constraint </div>');
t=t.append(W)
}if(Y.type==="date"){var aQ=angular.element('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.min">'+Y.label+" violates minimum constraint </span>");
t=t.append(aQ);
aQ=angular.element('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.max">'+Y.label+" violates maximum constraint</span>");
t=t.append(aQ);
aQ=angular.element('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.date">'+Y.label+" invalid date format</span>");
t=t.append(aQ)
}if(Y.type!=="checkbox"){var aQ=angular.element(' <div ng-show="('+m.formName+"."+Y.model+".$dirty || "+w+") && "+m.formName+"."+Y.model+'.$invalid" class="error,help-block" ></div>');
if(Y.type!=="number"&&Y.type!=="percent"&&Y.type!=="Angle"&&Y.type!=="currency"){console.log("if...."+Y.model);
aQ=aQ.prepend('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.pattern">'+Y.label+" is invalid</span>");
t=t.append(aQ)
}aQ=aQ.prepend('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.minlength">'+Y.label+" must contain at least "+Y.minLength+" characters</span>");
t=t.append(aQ);
aQ=aQ.prepend('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.maxlength">'+Y.label+" length exceeded</span>");
t=t.append(aQ)
}if(angular.isDefined(Y.required)&&Y.required===true&&Y.type!=="checkbox"){if(Y.type==="date"){aQ=aQ.prepend('<span class="help-block" ng-show="'+m.formName+"."+Y.model+".$error.required && !("+m.formName+"."+Y.model+".$error.min || "+m.formName+"."+Y.model+".$error.max || "+m.formName+"."+Y.model+".$error.date) && "+w+'">'+Y.label+"  should not be empty</span>")
}else{aQ=aQ.prepend('<span class="help-block" ng-show="'+m.formName+"."+Y.model+".$error.required && "+w+'">'+Y.label+"  should not be empty</span>")
}t=t.append(aQ)
}if(Y.type==="number"||Y.type==="percent"||Y.type==="Angle"||Y.type==="currency"){console.log("min.."+Y.min+"---max"+Y.max);
if(Y.min!==undefined&&Y.max!==undefined){aQ=aQ.prepend('<span class="text-danger"  ng-show="'+m.formName+"."+Y.model+".$error.min || "+m.formName+"."+Y.model+'.$error.max"> Invalid value. Entered value should be between '+Y.min+" and "+Y.max+" </span>");
t=t.append(aQ)
}else{if(Y.min!==undefined){aQ=aQ.prepend('<span class="text-danger"  ng-show="'+m.formName+"."+Y.model+'.$error.min "> Invalid value. Entered value should be >='+Y.min+" </span>");
t=t.append(aQ)
}else{if(Y.max!==undefined){aQ=aQ.prepend('<span class="text-danger"  ng-show="'+m.formName+"."+Y.model+'.$error.max "> Invalid value. Entered value should be <= '+Y.max+" </span>");
t=t.append(aQ)
}else{}}}if(Y.digitsBeforeDecimal!==undefined&&Y.digitsAfterDecimal!==undefined){aQ=aQ.prepend('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.pattern">'+Y.label+" is invalid.Digits before decimal should be"+Y.digitsBeforeDecimal+" and after decimal should be "+Y.digitsAfterDecimal+"</span>");
t=t.append(aQ)
}else{if(Y.digitsBeforeDecimal!==undefined){aQ=aQ.prepend('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.pattern">'+Y.label+" is invalid.No decimal allowed.Only "+Y.digitsBeforeDecimal+" digits allowed.</span>");
t=t.append(aQ)
}else{if(Y.digitsAfterDecimal!==undefined){aQ=aQ.prepend('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.pattern">'+Y.label+" is invalid.Digits after decimal should be"+Y.digitsAfterDecimal+"</span>");
t=t.append(aQ)
}else{aQ=aQ.prepend('<span class="text-danger"  ng-if="'+m.formName+"."+Y.model+'.$error.pattern">'+Y.label+" is invalid.");
t=t.append(aQ)
}}}}if(Y.type!=="checkbox"){if(u===2){if(m.viewOnly){t=t.wrap('<div  id="dv_view_'+Y.modelWithoutSeperators+'" class="col-lg-6 col-md-6 col-xs-12  " style="padding-left:0px;padding-right:0px " ></div>').parent()
}else{t=t.wrap('<div  id="dv_'+Y.modelWithoutSeperators+'" class="col-lg-6 col-md-6 col-xs-12  " style="padding-left:0px;padding-right:0px " ></div>').parent()
}if(Y.isDependant){t.addClass("ng-hide")
}else{if(t.hasClass("ng-hide")){t.removeClass("ng-hide")
}}}if(u===3){if(m.viewOnly){t=t.wrap('<div  id="dv_view_'+Y.modelWithoutSeperators+'" class="col-lg-4 col-md-4 col-xs-12 " style="padding-left:0px;padding-right:0px "></div>').parent()
}else{t=t.wrap('<div  id="dv_'+Y.modelWithoutSeperators+'" class="col-lg-4 col-md-4 col-xs-12 " style="padding-left:0px;padding-right:0px "></div>').parent()
}if(Y.isDependant){t.addClass("ng-hide")
}else{if(t.hasClass("ng-hide")){t.removeClass("ng-hide")
}}}if(u===10){if(m.viewOnly){t=t.wrap('<div  id="dv_view_'+Y.modelWithoutSeperators+'"   style="position: relative;min-height: 1px;float: left;width: 10%; padding-left:5px;padding-right:5px ng-hide"></div>').parent()
}else{t=t.wrap('<div  id="dv_'+Y.modelWithoutSeperators+'"   style="position: relative;min-height: 1px;float: left;width: 10%; padding-left:5px;padding-right:5px ng-hide"></div>').parent()
}if(Y.isDependant){t.addClass("ng-hide")
}else{if(t.hasClass("ng-hide")){t.removeClass("ng-hide")
}}}}if(angular.isDefined(Y.required)&&Y.required===true){if(Y.type==="checkbox"){if(Y.formatValue==="before"){if(u===2||u===3){var ac=angular.element('<div class="col-md-8 control-label " style="text-align:left"></div>')
}if(u===10){var ac=angular.element('<div class="col-md-12 control-label" style="text-align:left; padding-left:0px; padding-right:0px"></div>');
if(angular.isDefined(Y.label)&&Y.label.length>4){var K=angular.element('<span class="glyphicon glyphicon-info-sign" tooltip=" '+Y.label+' " tooltip-trigger="mouseenter" tooltip-placement="right" style="padding-left:5px"></span>');
Y.label=Y.label.slice(0,4)
}}var aw=angular.element('<label for="'+Y.model+'"></label>');
var aR=angular.element('<span style="color:red"></span');
aR=aR.append("&nbsp;*");
aw=aw.append(aR);
aw=aw.append("&nbsp;{{"+m.internationalizationLabel+"+'"+Y.label+"'| translate }}");
aw=aw.append(K);
ac=ac.append(aw);
t=t.append(ac)
}else{if(Y.formatValue==="after"){if(u===2){var ac=angular.element('<div class="col-md-4 control-label "></div>')
}if(u===3){var ac=angular.element('<div class="col-md-4 control-label wordRap" style="padding-right:0px"></div>')
}if(u===10){var ac=angular.element('<div class="col-md-12 control-label" style="text-align:left; padding-left:0px; padding-right:0px"></div>');
if(angular.isDefined(Y.label)&&Y.label.length>4){var K=angular.element('<span class="glyphicon glyphicon-info-sign" tooltip=" '+Y.label+' " tooltip-trigger="mouseenter" tooltip-placement="right" style="padding-left:5px"></span>');
Y.label=Y.label.slice(0,4)
}}var aw=angular.element('<label for="'+Y.model+'"></label>');
var aR=angular.element('<span style="color:red"></span');
aR=aR.append("&nbsp;*");
aw=aw.append(aR);
aw=aw.append("&nbsp;{{"+m.internationalizationLabel+"+'"+Y.label+"'| translate }}");
aw=aw.append(K);
ac=ac.append(aw);
t=t.prepend(ac)
}}var aA=angular.element(' <div class="clearfix"></div>');
t=t.append(aA);
if(u===2){var aQ=angular.element(' <div ng-show="('+m.formName+"."+Y.model+".$dirty || "+w+") && "+m.formName+"."+Y.model+'.$invalid" class="error,help-block,col-md-12" style="position: relative;left: 38%;" ></div>')
}if(u===3){var aQ=angular.element(' <div ng-show="('+m.formName+"."+Y.model+".$dirty || "+w+") && "+m.formName+"."+Y.model+'.$invalid" class="error,help-block,col-md-12" style="position: relative;left: 6%;" ></div>')
}if(u===10){var aQ=angular.element(' <div ng-show="('+m.formName+"."+Y.model+".$dirty || "+w+") && "+m.formName+"."+Y.model+'.$invalid" class="error,help-block,col-md-12" style="position: relative;left: 10%;" ></div>')
}aQ=aQ.prepend('<span class="help-block" ng-show="'+m.formName+"."+Y.model+".$error.required && "+w+'">'+Y.label+"  should not be empty</span>");
t=t.append(aQ)
}else{if(u===2){var aw=angular.element('<label for="'+Y.model+'" class="col-md-4 control-label "></label>')
}else{if(u===3){var aw=angular.element('<label for="'+Y.model+'" class="col-md-4 control-label" style="text-align:left"></label>')
}else{if(u===10){var aw=angular.element('<label  for = "'+Y.model+'" class = "col-md-12 control-label" style = "text-align:left;padding-left:0px;padding-right:0px" </label>');
if(angular.isDefined(Y.label)&&Y.label.length>4){var K=angular.element('<span class="glyphicon glyphicon-info-sign" tooltip=" '+Y.label+' " tooltip-trigger="mouseenter" tooltip-placement="right" style="padding-left:5px"></span>');
Y.label=Y.label.slice(0,4)
}}}}var aP;
if(angular.isDefined(Y.hint)&&Y.hint.length>0){var ai=angular.element('<span class="glyphicon glyphicon-question-sign"  tooltip=" '+Y.hint+' " tooltip-trigger="mouseenter" tooltip-placement="right"></span>');
if(aw.hasClass("col-md-4")){aP=ai.wrap('<div class="col-md-4 text-right"></div>').parent();
aw.removeClass("col-md-4")
}if(aw.hasClass("col-md-12")){aP=ai.wrap('<div class="col-md-12"></div>').parent();
aw.removeClass("col-md-12")
}aw.css("display","inline")
}var aR=angular.element('<span style="color:red"></span');
aR=aR.append("&nbsp;*");
aw=aw.append(aR);
aw=aw.append("&nbsp;{{"+m.internationalizationLabel+"+'"+Y.label+"'| translate }}");
aw=aw.append(K);
if(angular.isDefined(aP)){aw=aP.append(aw)
}t=t.prepend(aw)
}}else{if(Y.type==="checkbox"){if(Y.formatValue==="before"){if(u===2||u===3){var ac=angular.element('<div class="col-md-8 control-label " style="text-align:left"></div>')
}if(u===10){var ac=angular.element('<div class="col-md-12 control-label" style="text-align:left; padding-left:5px; padding-right:0px"></div>');
if(angular.isDefined(Y.label)&&Y.label.length>4){var K=angular.element('<span class="glyphicon glyphicon-info-sign" tooltip=" '+Y.label+' " tooltip-trigger="mouseenter" tooltip-placement="right" style="padding-left:5px"></span>');
Y.label=Y.label.slice(0,4)
}}var aw=angular.element('<label for="'+Y.model+'"></label>');
aw=aw.append("&nbsp;{{"+m.internationalizationLabel+"+'"+Y.label+"'| translate }}");
aw=aw.append(K);
ac=ac.append(aw);
t=t.append(ac)
}else{if(Y.formatValue==="after"){if(u===2){var ac=angular.element('<div class="col-md-4 control-label "></div>')
}if(u===3){var ac=angular.element('<div class="col-md-4 control-label wordRap" style="padding-right:0px"></div>')
}if(u===10){var ac=angular.element('<div class="col-md-12 control-label" style="text-align:left; padding-left:5px; padding-right:0px"></div>');
if(angular.isDefined(Y.label)&&Y.label.length>4){var K=angular.element('<span class="glyphicon glyphicon-info-sign" tooltip=" '+Y.label+' " tooltip-trigger="mouseenter" tooltip-placement="right" style="padding-left:5px"></span>');
Y.label=Y.label.slice(0,4)
}}var aw=angular.element('<label for="'+Y.model+'"></label>');
aw=aw.append("&nbsp;{{"+m.internationalizationLabel+"+'"+Y.label+"'| translate }}");
aw=aw.append(K);
ac=ac.append(aw);
t=t.prepend(ac)
}}}else{if(u===2){var aw=angular.element('<label for="'+Y.model+'" class="col-md-4 control-label "></label>')
}if(u===3){var aw=angular.element('<label for="'+Y.model+'" class="col-md-4 control-label" style="text-align:left"></label>')
}else{if(u===10){var aw=angular.element('<label for="'+Y.model+'" class="col-md-12 control-label" style="text-align:left; padding-left:0px; padding-right:0px"></label>');
if(angular.isDefined(Y.label)&&Y.label.length>4){var K=angular.element('<span class="glyphicon glyphicon-info-sign"  tooltip=" '+Y.label+' " tooltip-trigger="mouseenter" tooltip-placement="right" style="padding-left:5px"></span>');
Y.label=Y.label.slice(0,4)
}}}aw=aw.append("{{"+m.internationalizationLabel+"+'"+Y.label+"'| translate }}");
var aP;
if(angular.isDefined(Y.hint)&&Y.hint.length>0){var ai=angular.element('<span class="glyphicon glyphicon-question-sign"  tooltip=" '+Y.hint+' " tooltip-trigger="mouseenter" tooltip-placement="right"></span>');
if(aw.hasClass("col-md-4")){aP=ai.wrap('<div class="col-md-4 text-right"></div>').parent();
aw.removeClass("col-md-4")
}if(aw.hasClass("col-md-12")){aP=ai.wrap('<div class="col-md-12"></div>').parent();
aw.removeClass("col-md-12")
}aw.css("display","inline")
}aw=aw.append(K);
if(angular.isDefined(aP)){aw=aP.append(aw)
}t=t.prepend(aw)
}}if(Y.type==="checkbox"){if(u===2){if(m.viewOnly){t=t.wrap('<div  id="dv_view_'+Y.modelWithoutSeperators+'" class="col-lg-6 col-md-6 col-xs-12" style="padding-left:0px;padding-right:0px "></div>').parent()
}else{t=t.wrap('<div  id="dv_'+Y.modelWithoutSeperators+'" class="col-lg-6 col-md-6 col-xs-12" style="padding-left:0px;padding-right:0px "></div>').parent()
}if(Y.isDependant){t.addClass("ng-hide")
}else{if(t.hasClass("ng-hide")){t.removeClass("ng-hide")
}}}if(u===3){if(m.viewOnly){t=t.wrap('<div  id="dv_view_'+Y.modelWithoutSeperators+'" class="col-lg-4 col-md-4 col-xs-12" style="padding-left:0px;padding-right:0px "></div>').parent()
}else{t=t.wrap('<div  id="dv_'+Y.modelWithoutSeperators+'" class="col-lg-4 col-md-4 col-xs-12" style="padding-left:0px;padding-right:0px "></div>').parent()
}if(Y.isDependant){t.addClass("ng-hide")
}else{if(t.hasClass("ng-hide")){t.removeClass("ng-hide")
}}}if(u===10){if(m.viewOnly){t=t.wrap('<div  id="dv_view_'+Y.modelWithoutSeperators+'" style="position: relative;min-height: 1px;float: left;width: 10%; padding-left:5px;padding-right:5px"></div>').parent()
}else{t=t.wrap('<div  id="dv_'+Y.modelWithoutSeperators+'" style="position: relative;min-height: 1px;float: left;width: 10%; padding-left:5px;padding-right:5px"></div>').parent()
}if(Y.isDependant){t.addClass("ng-hide")
}else{if(t.hasClass("ng-hide")){t.removeClass("ng-hide")
}}}}}}}}q=q.append(t);
x++;
if(x%u===0){this.append(q);
q=null
}else{if(I.length%2===0){if(I.length-1===x){if(x%u!==0){this.append(q);
this.append('<div class="row">&nbsp;</div>')
}}}else{if(I.length%2!==0){if(I.length===x){if(x%u!==0){this.append(q);
this.append('<div class="row">&nbsp;</div>')
}}}}}t=null
}};
angular.forEach(I,J,n);
while(!angular.equals(y.parent(),e)&&y.parent().length){if(["form","ngForm"].indexOf(m.$normalize(angular.lowercase(y.parent()[0].nodeName)))>-1){z=true;
break
}y=y.parent()
}if(z){t=angular.element("<ng-form name="+m.formName+"></ng-form>")
}else{t=angular.element("<form></form>")
}angular.forEach(m.$attr,function(L,K){t.attr(L,m[K])
});
t.attr("model",m.ngModel);
t.removeAttr("ng-model");
angular.forEach(n[0].classList,function(K){t[0].classList.add(K)
});
t.addClass("dynamic-form");
t.append(n.contents());
t.data("$_cleanModel",angular.copy(r));
t.bind("reset",function(){b(function(){l.$broadcast("reset",arguments)
},0)
});
l.$on("reset",function(){l.$apply(function(){l[m.ngModel]={}
});
l.$apply(function(){l[m.ngModel]=angular.copy(t.data("$_cleanModel"))
})
});
f(t)(l);
n.replaceWith(t)
})
}},true)
};
o()
};
return{restrict:"E",transclude:true,link:i}
}]);
globalProvider.compileProvider.directive("ngList",[function(){return{require:"?ngModel",link:function(d,c,a,e){var b=/\/(.*)\//.exec(c.attr(a.$attr.ngList)),f=b&&new RegExp(b[1])||c.attr(a.$attr.ngList)||",";
if(c[0].form!==null&&!angular.element(c[0].form).hasClass("dynamic-form")){return
}e.$parsers.splice(0,1);
e.$formatters.splice(0,1);
e.$parsers.push(function(h){var g=[];
if(angular.isString(h)){if(String.prototype.trim){angular.forEach(h.split(f),function(i){if(i){g.push(i.trim())
}})
}else{angular.forEach(h.split(f),function(i){if(i){g.push(i.replace(/^\s*/,"").replace(/\s*$/,""))
}})
}}return g
});
e.$formatters.push(function(h){var g=angular.isString(f)&&f||", ";
if(angular.isArray(h)){return h.join(g)
}return undefined
})
}}
}]);
globalProvider.controllerProvider.register("SubentityFileUploadController",["$rootScope","$scope","fileuploadservice",function(a,b,c){b.UploadedFiles=[];
b.addFileToArray=function(d){a.uploadingFiles.fileName.push(d)
};
b.removeFileFromArray=function(e){var d=a.uploadingFiles.fileName.indexOf(e);
a.uploadingFiles.fileName.splice(d,1)
};
b.fileAdded=function(e,d,k,h,l,m,j){if(!k||!!k[e.getExtension()]){if(!h||h>e.size){if(m&&j){if(b[m][j]){var n=b[m][j];
for(var f=0;
f<n.length;
f++){var g=n[f];
if(g.indexOf(e.name)>-1){alert("file name("+e.name+") already exist");
b.InvalidFileFlag=true;
return false
}}}}b.InvalidFileFlag=false;
b.addFileToArray(e.name);
if(l){b.flag=true
}return true
}else{alert(e.name+" has invalid size.. max upload size is "+(h/(1024*1024))+" MB");
b.InvalidFileFlag=true;
return false
}}else{alert(e.name+"has invalid extension "+e.getExtension()+"\nextension allowed are : "+k);
b.InvalidFileFlag=true;
return false
}};
b.fileError=function(d,e){b.removeFileFromArray(d.name)
};
b.fileSuccess=function(g,e,d,h,f){var i=[g.name,d];
c.uploadFiles(i,function(j){if(j.res){if(f){b.UploadedFiles=[j.res];
b[h][d]=[j.res]
}else{if(!b.UploadedFiles){b.UploadedFiles=[]
}if(!b[h][d]){b[h][d]=[]
}b.UploadedFiles.push(j.res);
b[h][d].push(j.res)
}b.validUploadFlag=true
}if(j.bytecode){b.bytecode=j.bytecode
}else{b.validUploadFlag=false
}b.removeFileFromArray(g.name);
g.cancel();
if(f){b.flag=false
}})
};
b.fileProgress=function(){};
b.removeLink=function(j,d,h,g){var f=b[h][d];
var e=f.indexOf(j);
f.splice(e,1);
if(f.length===0){b[h][d]=undefined
}else{b[h][d]=f
}var i=[j,d];
c.cancelFile(i);
if(g){b.flag=false
}};
b.remove=function(e,j,m,l){e.cancel();
var n=b[m][j];
if(n!==undefined){for(var f=0;
f<n.length;
f++){var g=n[f];
if(g.indexOf(e.name)>-1){b[m][j].splice(f,1)
}}}if(b.UploadedFiles){var h=b.UploadedFiles;
var d=[];
var k=false;
if(h!==undefined){for(var f=0;
f<h.length;
f++){var g=h[f];
if(g.indexOf(e.name)>-1){b.UploadedFiles.splice(f,1);
d=[g,j];
k=true
}}if(k===false){d=[e.name,j]
}}}if(b[m][j]){if(b[m][j].length===0){b[m][j]=undefined
}}b.removeFileFromArray(e.name);
c.cancelFile(d);
if(l){b.flag=false
}if(b.UploadedFiles.length===0){b[m][j]=undefined
}};
b.cancel=function(h,d,l){h.cancel();
if(b[l][d]){for(var k=0;
k<b.UploadedFiles.length;
k++){var g=b.UploadedFiles[k];
var j=b[l][d].indexOf(g);
b[l][d].splice(j,1)
}}var f;
var e=b.UploadedFiles;
if(e.length>0){f=e.concat(d)
}else{f=[d]
}b.UploadedFiles=[];
a.uploadingFiles.fileName=[];
c.cancelAll(f)
};
b.pause=function(d){d.pause()
};
b.resume=function(d){d.resume()
}
}]);
globalProvider.controllerProvider.register("SubentityImageUploadController",["$rootScope","$scope","fileuploadservice",function(a,b,c){b.UploadedFiles=[];
b.addFileToArray=function(d){a.uploadingFiles.fileName.push(d)
};
b.removeFileFromArray=function(e){var d=a.uploadingFiles.fileName.indexOf(e);
a.uploadingFiles.fileName.splice(d,1)
};
b.fileAdded=function(h,e,g,d,f){if(!g||!!g[h.getExtension()]){if(!d||d>h.size){b.InvalidFileFlag=false;
b.addFileToArray(h.name);
return true
}else{alert(h.name+" has invalid size.. max upload size is "+(d/(1024*1024))+" MB");
b.InvalidFileFlag=true;
return false
}}else{alert(h.name+"has invalid extension "+h.getExtension());
b.InvalidFileFlag=true;
return false
}};
b.fileError=function(d,e){b.removeFileFromArray(d.name)
};
b.fileSuccess=function(g,e,d,h,f){var i=[g.name,d];
c.uploadFiles(i,function(j){if(j.res){b.UploadedFiles=[j.res];
b.validUploadFlag=true
}else{b.validUploadFlag=false
}b[h][d]=b.UploadedFiles;
b.removeFileFromArray(g.name);
g.cancel()
})
};
b.fileProgress=function(){};
b.remove=function(d,f){var e=b[f][d];
c.removeImageFile(e.toString());
b[f][d]=undefined
}
}]);
globalProvider.controllerProvider.register("SubEntitySingleSelectController",["$rootScope","$scope","ManageMasterService",function(a,c,b){c.defineLabelForSingleSelect=function(g,f,h,d){c.defaultValue=d;
c.model=f;
c.attribute=h;
c.dropdown=[];
c.fieldLabel=g;
var i=function(j){if(!c.userDefined){if(j.length!==0){angular.forEach(j.masterDataBeans,function(k){c.dropdown.push({id:k.valueEntityId,text:k.value})
})
}}else{c.dropdown=c.userDefinedData
}};
var e=function(){};
b.retrieveListOfMaster(function(n){c.listOfMaster=n;
c.masters=angular.copy(c.listOfMaster);
c.builtInMaster=[];
c.customMaster=[];
for(var l=0;
l<c.masters.length;
l++){var m=c.masters[l];
if(m.masterType==="B"||m.masterType==="b"){c.builtInMaster.push(m)
}else{c.customMaster.push(m)
}}for(var k=0;
k<c.customMaster.length;
k++){if(c.customMaster[k].masterName===c.fieldLabel){c.code=c.customMaster[k].code
}}if(c.code!=null){b.retrieveDetailsOfMaster({primaryKey:c.code},i,e)
}})
}
}]);
globalProvider.provide.factory("ManageMasterService",["$resource","$rootScope",function(c,a){var b=c(a.apipath+"master/:action",{},{retrieveListOfMaster:{method:"GET",isArray:true,params:{action:"retrieve"}},retrieveCustomOfMaster:{method:"POST",isArray:false,params:{action:"retrieveMasterValues"}},retrieveDetailsOfMaster:{method:"POST",params:{action:"retrieve"}}});
return b
}]);
globalProvider.provide.factory("fileuploadservice",["$resource","$rootScope",function(c,b){var a=c(b.apipath+"fileUpload/:action",{action:"@actionName"},{uploadFiles:{method:"POST",isArray:false,params:{action:"onsubmit"}},cancelFile:{method:"POST",isArray:false,params:{action:"oncancel"}},removeImageFile:{method:"POST",params:{action:"removeImageFile"}},cancelAll:{method:"POST",isArray:false,params:{action:"oncancelall"}}});
return a
}]);
globalProvider.provide.factory("UserManagementServiceSubEntity",["$resource","$rootScope",function(c,a){var b=c(a.apipath+"customfield/:action",{},{retrieveusers:{method:"POST",isArray:true,params:{action:"retrieveusers"}},retrieveDepartmentList:{method:"POST",isArray:true,params:{action:"retrieveDepartmentList"}},defaultSelection:{method:"POST",isArray:false,params:{action:"defaultSelection"}},retrieveroles:{method:"POST",isArray:true,params:{action:"retrieveroles"}}});
return b
}])
});