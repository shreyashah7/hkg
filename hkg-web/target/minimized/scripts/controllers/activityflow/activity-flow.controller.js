define(["hkg","activityFlowService","ruleService","messageService","customFieldService","checklist.directive","ruleField","ngload!flowChart","assetService"],function(a,b){a.register.controller("ActivityFlowController",["$rootScope","$scope","ActivityFlowService","$timeout","$filter","$location","$window","RuleService","$log","Messaging","CustomFieldService","AssetService",function(l,s,g,B,q,i,n,h,u,f,v,C){l.mainMenu="manageLink";
l.childMenu="manageActivityFlow";
s.parentId=0;
s.addFlag=false;
l.activateMenu();
s.entity="ACTIVITYFLOW.";
s.activityflow={};
s.activityflow.franchise="";
s.activityflow.version="";
s.activityFlowVersion={};
s.activityGroup={};
s.activityNode={};
s.activityNodeRoute={};
s.isVersionPending=false;
s.isVersionActive=false;
s.versionList={};
s.franchiseList={};
s.subbmited=false;
s.submitted=false;
s.ruleSubmitted=false;
s.activityFlowDiagram={};
s.activitylist=[];
s.actName="";
s.rules=[{id:5,rule:"equals"}];
s.serviceId=undefined;
s.selectedActivity="";
s.finalActivityFlow={};
s.newServiceList=[];
s.versionStatusPending="P";
s.versionStatusActive="A";
s.rulesubmitted=false;
s.applyList=["All","Any"];
s.ruleObject={};
s.ruleList=[];
s.allRules=[];
s.isEditRule=false;
s.rulesetid=null;
s.editRule=false;
s.popover="<NOBR><font color='red;'>Use the shortcuts to search</font></NOBR><br/><table cellpadding='0' cellspacing='0'><tr><td> "+ +"\n "+ +"'@D'  </td> <td> &nbsp;  &nbsp;</td><td align='left'>Departments</td></tr> "+ +"<tr><td>'@E'  </td> <td> &nbsp; &nbsp;</td><td align='left'>Employees</td></tr> "+ +"<tr><td>'@R'  </td> <td> &nbsp; &nbsp;</td><td align='left'>Roles</td></tr> "+ +"<tr><td>'@G'  </td> <td> &nbsp; &nbsp;</td><td align='left'>Groups</td></tr> "+ +"<tr><td>'@A'  </td> <td> &nbsp; &nbsp;</td><td align='left'>Activities</td></tr> "+ +"</table>";
s.status=[{id:true,name:"Active"},{id:false,name:"InActive"}];
s.fieldListForSer=[{id:-1,label:"Status",oldLabelName:"Status",type:"Dropdown",validationPattern:"{}",isNewField:false,fieldType:"Long"},{id:-2,label:"No. of occurance",oldLabelName:"No. of occurance",type:"Number",validationPattern:"{}",isNewField:false,fieldType:"Number"},{id:-3,label:"Time",oldLabelName:"Time",type:"Decimal",validationPattern:"{}",isNewField:false,fieldType:"String"},{id:-4,label:"Name",oldLabelName:"Name",type:"Dropdown",validationPattern:"{}",isNewField:false,fieldType:"String"}];
s.fieldListForAct=[{id:-2,label:"No. of occurance",oldLabelName:"No. of occurance",type:"Number",validationPattern:"{}",isNewField:false,fieldType:"Number"},{id:-3,label:"Time",oldLabelName:"Time",type:"Decimal",validationPattern:"{}",isNewField:false,fieldType:"String"},{id:-4,label:"Name",oldLabelName:"Name",type:"Dropdown",validationPattern:"{}",isNewField:false,fieldType:"String"}];
s.entityList={};
s.selectedRule=null;
s.lastRuleId=0;
s.operators={};
var x={Number:"Numeric","Text field":"String","Text area":"String",Dropdown:"String","Radio button":"String",Date:"Date",Datepicker:"Date","Date range":"Date range",Time:"Date","Time range":"Date range",Password:"String",Currency:"Numeric",Decimal:"Numeric",Email:"String",Phone:"String",Checkbox:"Boolean",Percent:"Numeric",Formula:"Numeric",Pointer:"Numeric",AutoGenerated:"Boolean",MultiSelect:"String",UserMultiSelect:"String",Angle:"Numeric",Image:"Image",Upload:"Image"};
s.$on("$viewContentLoaded",function(){s.initializeActivityFlow()
});
s.initializeActivityFlow=function(){m();
s.retrieveAllServices();
s.retrieveDesignations();
s.retrieveModifiers();
s.retrievePlanStatus()
};
s.retrieveAllServices=function(){l.maskLoading();
g.retrieveServices(function(D){s.serviceList=D;
l.unMaskLoading()
})
};
s.retrieveModifiers=function(){g.retrieveModifiers(function(D){s.modifierList=D.Mandatory;
s.nonModifierList=D.NonMandatory
})
};
s.retrieveDesignations=function(){l.maskLoading();
g.retrieveDesignations(function(D){s.designationList=D.data;
l.unMaskLoading()
})
};
s.selectMe=function(D){};
function m(){l.maskLoading();
g.retrievePrerequisite(function(G){if(angular.isDefined(G)&&G!=null){var E=G.activityflowbycompany;
if(l.session!==undefined&&l.session.isHKAdmin){s.franchiseList=G.activefranchises;
if(l.session!==undefined&&l.session.isHKAdmin&&i.path()!=="/printsvg"){var D=l.session.companyId;
if(s.franchiseList!==undefined&&s.franchiseList.length>0){for(var F=0;
F<s.franchiseList.length;
F++){if(s.franchiseList[F].value===D){s.activityflow.franchise=s.franchiseList[F]
}}s.onFranchiseChange(s.activityflow.franchise)
}}if(i.path()==="/printsvg"){s.activityflow.version=JSON.parse(localStorage.getItem("activityFlowVersion"));
s.retrieveActivityFlowVersion(true)
}}else{if(angular.isDefined(E[0])&&E[0]!==null){s.activityflow.franchise=E[0];
localStorage.setItem("activityFlowFranchise",JSON.stringify(s.activityflow.franchise));
s.activityflow.activityId=E[0].value;
s.versionList=E[0]["custom2"];
if(i.path()==="/manageactivityflow"){s.activityflow.version=s.versionList[0]
}else{s.activityflow.version=JSON.parse(localStorage.getItem("activityFlowVersion"))
}s.onVersionChange(s.activityflow.version)
}}}});
l.unMaskLoading()
}s.positive=function(){l.deselectFlag=true;
l.sample()
};
s.onFranchiseChange=function(D){l.maskLoading();
if(D!==null){localStorage.setItem("activityFlowFranchise",JSON.stringify(D));
g.retrieveActivityFlowByCompany(D.value,function(E){l.unMaskLoading();
if(angular.isDefined(E.data[0])&&E.data[0]!=null){s.versionList=E.data[0].custom2;
s.activityflow.activityId=D.value;
s.activityflow.version=s.versionList[0];
s.onVersionChange(s.activityflow.version)
}else{s.versionList={}
}})
}else{l.unMaskLoading();
s.versionList={}
}};
s.onVersionChange=function(D){s.isVersionPending=false;
s.isVersionActive=false;
var E=false;
if(i.path()!=="/manageactivityflow"){E=true
}if(D!==null){localStorage.setItem("activityFlowVersion",JSON.stringify(D));
if(D.description===s.versionStatusPending){s.isVersionPending=true
}else{if(D.description===s.versionStatusActive){s.isVersionActive=true
}else{E=true
}}s.retrieveActivityFlowVersion(E)
}else{s.chartViewModel=null
}};
s.closeAddActivityVersionPopup=function(){s.activityflow.versionId="";
$("#addNewActivityVersionPopup").modal("hide");
l.removeModalOpenCssAfterModalHide()
};
s.showAddActivityVersionPopup=function(){$("#addNewActivityVersionPopup").modal("show")
};
s.createNewVersion=function(){s.activityFlowVersion={};
s.activityFlowVersion.activityId=s.activityflow.activityId;
if(s.activityflow.versionId!==null&&s.activityflow.versionId!==undefined){s.activityFlowVersion.flowVersionId=s.activityflow.versionId.value;
l.maskLoading();
g.addActivityFlowVersion(s.activityFlowVersion,function(D){l.unMaskLoading();
if(D.messages){l.addMessage(D.messages[0].message,l.failure);
s.initializeActivityFlow();
s.closeAddActivityVersionPopup()
}else{s.initializeActivityFlow();
s.closeAddActivityVersionPopup();
B(function(){angular.forEach(s.versionList,function(E){if(E.value===D.flowVersionId){s.activityflow.version=E;
s.onVersionChange(E)
}})
},300)
}},function(){})
}else{s.activityFlowVersion.flowVersionId=null;
l.maskLoading();
g.addActivityFlowVersion(s.activityFlowVersion,function(D){l.unMaskLoading();
if(D.messages){l.addMessage(D.messages[0].message,l.failure)
}s.initializeActivityFlow();
s.closeAddActivityVersionPopup()
},function(){})
}};
s.publishVersion=function(){if(s.activityflow&&s.activityflow.version.value&&s.activityflow.version.value!==null){l.maskLoading();
g.publishVersion(s.activityflow.version.value,function(D){l.unMaskLoading();
s.initializeActivityFlow()
})
}};
s.openActivityFlow=function(){s.activityGroup={};
s.subbmited=false;
$("#activityPopUp").modal("show")
};
s.hideActivityPanel=function(D){s.activityGroup={};
D.$setPristine();
s.subbmited=false;
$("#activityPopUp").modal("hide");
l.removeModalOpenCssAfterModalHide()
};
s.hideEditActivityPanel=function(D){s.activityGroup={};
D.$setPristine();
s.subbmited=false;
$("#activityEditPopUp").modal("hide");
l.removeModalOpenCssAfterModalHide()
};
s.addActivity=function(D){s.subbmited=true;
s.activityGroup.versionId=s.activityflow.version.value;
s.activityGroup.x=s.newPosX;
s.activityGroup.y=s.newPosY;
if(D.$valid){l.maskLoading();
g.addActivityFlowGroup(s.activityGroup,function(E){l.unMaskLoading();
if(!E.messages){s.retrieveActivityFlowVersion(false);
if(s.chartViewModel===null){s.chartViewModel=new flowchart.ChartViewModel(d)
}}else{l.addMessage(E.messages[0].message,l.failure)
}},function(){});
s.activityGroup={};
D.$setPristine();
s.hideActivityPanel(D)
}};
s.doesActivityNameExists=function(E,D){angular.forEach(s.activitylist,function(F){if(F.name===E){D.activityName.$setValidity("exists",false)
}})
};
s.editActivity=function(D){s.subbmited=true;
s.activityGroup.versionId=s.activityflow.version.value;
s.activityGroup.x=s.newPosX;
s.activityGroup.y=s.newPosY;
if(D.$valid){if(l.flowGroupName!==null){s.activityGroup.flowGroupName=l.flowGroupName
}if(l.groupId!==null){s.activityGroup.groupId=l.groupId
}l.maskLoading();
g.updateGroup(s.activityGroup,function(E){l.unMaskLoading();
if(!E.messages){s.flowGroupName=null;
l.flowGroupName=null;
s.retrieveActivityFlowVersion(false)
}else{l.addMessage(E.messages[0].message,l.failure)
}},function(){});
s.activityGroup={};
D.$setPristine();
s.hideEditActivityPanel(D)
}};
s.openService=function(){s.activityNode={};
s.associatedService="";
s.submitted=false;
s.retrieveAllServices();
$("#servicePopUp").modal("show")
};
s.hideService=function(D){s.activityNode={};
if(!!s.activityFlow&&!!s.activityFlow.plans){delete s.activityFlow.plans
}s.activityflow.modifier="";
s.activityflow.noOfPlans="";
s.activityflow.nonModifierCodes=[];
D.$setPristine();
s.designation="";
s.submitted=false;
$("#servicePopUp").modal("hide");
l.removeModalOpenCssAfterModalHide()
};
s.addService=function(E){s.submitted=true;
s.flagmembers=false;
if(s.activityFlow!==undefined&&s.activityFlow.plans!==undefined&&s.activityFlow.plans!==null&&s.activityflow.nonModifierCodes!==undefined&&s.activityflow.nonModifierCodes!==null&&s.activityflow.nonModifierCodes.indexOf("SP")>-1){angular.forEach(s.activityFlow.plans,function(G){G.rowsubmitted=true;
if(G.taskRecipients.length===0){s.flagmembers=true
}})
}if(E.$valid&&!s.flagmembers){s.activityNode.versionId=s.activityflow.version.value;
s.activityNode.associatedService=s.associatedService.id;
s.activityNode.designationId=s.designation;
s.activityNode.x=s.newPosX-l.mouseOverGroup.x();
s.activityNode.y=s.newPosY-l.mouseOverGroup.y();
s.activityNode.groupId=l.mouseOverGroup.data.id;
s.activityNode.isLastService=s.finalServiceModel;
if(s.finalServiceModel===true){s.activityNode.previousFinalNode=s.finalServiceId
}s.activityNode.modifier=s.activityflow.modifier;
s.activityNode.nonMandatoryModifier=s.activityflow.nonModifierCodes;
s.activityNode.noOfPlans=s.activityflow.noOfPlans;
if(!!s.activityflow.nonModifierCodes&&s.activityflow.nonModifierCodes.indexOf("SP")===-1){if(!!s.activityFlow&&!!s.activityFlow.plans){delete s.activityFlow.plans
}}if(!!s.activityFlow&&!!s.activityFlow.plans){var F=[];
angular.forEach(s.activityFlow.plans,function(G){F.push({accessToUsers:G.taskRecipients,planStatuses:G.status})
});
s.activityNode.plans=F
}if(!!s.activityNode.plans){var D=[];
angular.forEach(s.activityNode.plans,function(H){var G=H.accessToUsers.split(",");
if(!!G){angular.forEach(G,function(I){D.push(I)
})
}});
g.retrieveUsersByCode(D,function(G){s.listOfUserForMultiselect=[];
if(!!G){s.listOfUserForMultiselect=G
}})
}l.maskLoading();
g.saveActivityNode(s.activityNode,function(H){l.unMaskLoading();
if(H.data!==null){var G=q("filter")(s.serviceList,function(K){return K.id===s.associatedService.id
})[0];
if(!!s.activityNode.plans){angular.forEach(s.activityNode.plans,function(K){K.multiselectConfig={multiple:true,closeOnSelect:false,placeholder:"Select members",initSelection:function(L,O){var N=[];
var M=K.accessToUsers.split(",");
angular.forEach(M,function(P){angular.forEach(s.listOfUserForMultiselect,function(Q){if(P==(Q.recipientInstance+":"+Q.recipientType)){N.push({id:Q.recipientInstance+":"+Q.recipientType,text:Q.recipientValue})
}})
});
O(N);
K.taskRecipients=K.accessToUsers
},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(O){var N=O.term;
s.names=[];
var Q=function(R){if(R.length!==0){s.names=R;
angular.forEach(R,function(S){s.names.push({id:S.value+":"+S.description,text:S.label})
})
}O.callback({results:s.names})
};
var L=function(){};
if(N.substring(0,2)==="@E"||N.substring(0,2)==="@e"){var M=O.term.slice(2);
if(l.session.isHKAdmin){var P={user:M.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(P,Q,L)
}else{C.retrieveUserList(M.trim(),Q,L)
}}else{if(N.substring(0,2)==="@D"||N.substring(0,2)==="@d"){var M=O.term.slice(2);
if(l.session.isHKAdmin){var P={department:M.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(P,Q,L)
}else{f.retrieveDepartmentList(M.trim(),Q,L)
}}else{if(N.substring(0,2)=="@R"||N.substring(0,2)=="@r"){var M=O.term.slice(2);
if(l.session.isHKAdmin){var P={role:M.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(P,Q,L)
}else{f.retrieveRoleList(M.trim(),Q,L)
}}else{if(N.substring(0,2)==="@A"||N.substring(0,2)==="@a"){var M=O.term.slice(2);
f.retrieveActivityList(M.trim(),Q,L)
}else{if(N.substring(0,2)=="@G"||N.substring(0,2)=="@g"){var M=O.term.slice(2);
f.retrieveGroupList(M.trim(),Q,L)
}else{if(N.length>0){var M=N;
if(l.session.isHKAdmin){var P={user:M.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(P,Q,L)
}else{C.retrieveUserList(M.trim(),Q,L)
}}else{O.callback({results:s.names})
}}}}}}}};
K.statusMultiselectconfig={allowClear:true,data:s.planStatusList,placeholder:"Select",multiple:true,initSelection:function(M,O){var L=K.planStatuses.split(",");
var N=[];
angular.forEach(L,function(P){angular.forEach(s.planStatusList,function(Q){if(Q.id==P){N.push({id:P,text:Q.text})
}})
});
O(N);
K.status=K.planStatuses
},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(L){L.callback({results:s.planStatusList})
}}
})
}var J={name:G.serviceName,serviceCode:G.serviceCode,id:H.data,x:s.newPosX-l.mouseOverGroup.x(),y:s.newPosY-l.mouseOverGroup.y(),designation:s.designation,modifier:s.activityflow.modifier,nonModifierCodes:s.activityNode.nonMandatoryModifier,plans:s.activityNode.plans,noOfPlans:s.activityNode.noOfPlans,inputConnectors:[{name:"X"}],outputConnectors:[{name:"1"}]};
var I=$("#finalServiceAdd").is(":checked");
if(I){s.finalServiceId=J.id
}s.finalServiceModel=false;
s.designation="";
l.mouseOverGroup.addNode(J);
s.hideService(E)
}else{l.addMessage(H.messages[0].message,l.failure);
s.hideService(E)
}s.activityflow.modifier="";
s.activityflow.nonModifierCodes=[];
delete s.activityflow.plans;
s.activityNode={};
E.$setPristine()
})
}};
s.openRule=function(){s.activityNodeRoute={};
s.currentGroupId="";
s.nextGroupId="";
s.selectedRule="";
s.ruleSubmitted=false;
$("#rulesPopUp").modal("show")
};
s.hideRule=function(E,D){s.addFlag=false;
s.currentGroupId="";
s.nextGroupId="";
s.selectedRule="";
s.rulesetid=null;
s.allRules=[];
s.activityNodeRoute={};
if(D&&!s.isEditRule){s.chartViewModel.cancelled(l.sourceNodeId,l.destinationNodeId)
}s.isEditRule=false;
E.$setPristine();
s.ruleSubmitted=false;
$("#rulesPopUp").modal("hide");
l.removeModalOpenCssAfterModalHide()
};
s.addRuleAndRuleSet=function(J){s.save(J);
s.ruleSubmitted=true;
var E=true;
for(var F=0;
F<s.ruleList.length;
F++){var I=s.ruleList[F].operator.shortcutCode;
for(var G=0;
G<I;
G++){var H=s.ruleList[F].values[G];
if(s.ruleList[F].operator.label!=="has no value"&&s.ruleList[F].operator.label!=="has any value"){if(s.ruleList[F].field.type==="MultiSelect"){E=(E&&true)
}else{if(H!==null&&H!==undefined){E=(E&&true)
}else{E=false;
break
}}}else{E=(E&&true)
}}if(E===false){break
}}if(!!s.allRules){if(E&&J.$valid||(s.allRules.length<=0||(s.selectedRule===null||s.selectedRule===undefined))){s.addFlag=false;
s.save(J);
u.info("in save and submit");
var D={};
D.rules=angular.copy(s.allRules);
D.id=s.rulesetid;
D.franchise=s.activityflow.franchise.otherId;
s.activityNodeRoute.ruleSet=D;
if(s.isEditRule){u.info("UPDATE rule::      ");
h.updateRule(D,function(K){s.hideRule(J,false)
});
s.allRules=[];
s.rulesetid=null;
return
}s.activityNodeRoute.curentNode=l.sourceNodeId;
s.activityNodeRoute.nextNode=l.destinationNodeId;
s.activityNodeRoute.activityVersion=s.activityflow.version.value;
l.maskLoading();
if(!!!s.allRules){delete s.activityNodeRoute.ruleSet.rules
}g.saveActivityNodeRoute(s.activityNodeRoute,function(K){u.info("Activity route..."+JSON.stringify(s.activityNodeRoute));
l.unMaskLoading();
if(K.data!==null){s.chartViewModel.addRouteId(l.sourceNodeId,l.destinationNodeId,K.data.routeId,K.data.ruleset)
}else{l.addMessage(K.messages[0].message,l.failure)
}s.activityNodeRoute={};
J.$setPristine();
s.rulesetid=null;
s.hideRule(J,false)
})
}else{return
}}};
s.listOutCurrentService=function(){var D=q("filter")(s.activitylist,function(E){return E.id===s.currentGroupId
})[0];
if(D){s.currentServiceList=D.nodes
}else{s.currentServiceList=[]
}};
s.listOutNextService=function(){var D=q("filter")(s.activitylist,function(E){return E.id===s.nextGroupId
})[0];
if(D){s.nextServiceList=D.nodes
}else{s.nextServiceList=[]
}};
s.checkCurrentNode=function(E,G,F,D,H){if(E===G){if(F===D){H.nextService.$setValidity("nodeCheck",false)
}}else{H.nextService.$setValidity("nodeCheck",true)
}};
var z=46;
var w=17;
var y=false;
var j=65;
var c=27;
var o=10;
var d={isreadonly:false,groups:[],connections:[]};
l.keyDown=function(D){if(D.keyCode===w){y=true;
D.stopPropagation();
D.preventDefault()
}};
s.deleteComponent=function(){var D=s.chartViewModel.deleteSelected();
var E=new Object();
E.groupIds=D.groupIds;
E.nodeIds=D.nodeIds;
E.connectorIds=D.connectorIds;
E.rulesetIds=D.rulesetIds;
var F=function(){s.hideDelete()
};
g.deleteComponent(E,F)
};
s.hideDelete=function(){$("#deletePopUp").modal("hide");
l.removeModalOpenCssAfterModalHide()
};
l.keyUp=function(D){if(D.keyCode===z){if(s.activityflow.version.description!=="A"){$("#deletePopUp").modal("show")
}}if(D.keyCode===j&&y){s.chartViewModel.selectAll()
}if(D.keyCode===c){s.chartViewModel.deselectAll()
}if(D.keyCode===w){y=false;
D.stopPropagation();
D.preventDefault()
}};
s.addNewNode=function(){var E=prompt("Enter a node name:","New node");
if(!E){return
}var D={name:E,id:o++,x:0,y:0,inputConnectors:[{name:"X"}],outputConnectors:[{name:"1"}]};
s.chartViewModel.addNode(D)
};
s.addNewInputConnector=function(){var G=prompt("Enter a connector name:","New connector");
if(!G){return
}var F=s.chartViewModel.getSelectedNodes();
for(var D=0;
D<F.length;
++D){var E=F[D];
E.addInputConnector({name:G})
}};
s.addNewOutputConnector=function(){var G=prompt("Enter a connector name:","New connector");
if(!G){return
}var F=s.chartViewModel.getSelectedNodes();
for(var D=0;
D<F.length;
++D){var E=F[D];
E.addOutputConnector({name:G})
}};
s.retrieveActivityFlowVersion=function(D){d={isreadonly:D,groups:[],connections:[]};
if(s.activityflow.version!==null){l.maskLoading();
g.retrieveActivityFlowVersion(s.activityflow.version.value,function(E){l.unMaskLoading();
if(!!s.activitylist){s.activitylist=[]
}if(E.data.activityFlowGroups!==null&&E.data.activityFlowGroups.length>0){angular.forEach(E.data.activityFlowGroups,function(G){s.activitylist.push(G);
if(G.nodeDataBeanList!==null){s.nodes=[];
angular.forEach(G.nodeDataBeanList,function(I){var H=q("filter")(s.serviceList,function(K){return K.id===I.associatedService
})[0];
var J=q("filter")(s.designationList,function(K){return K.value===I.designationId
})[0];
if(!!I.plans){s.activityFlow={};
s.activityFlow.plans=[];
angular.forEach(I.plans,function(K){K.multiselectConfig={multiple:true,closeOnSelect:false,placeholder:"Select members",initSelection:function(L,N){var M=[];
angular.forEach(K.userData,function(O){M.push({id:O.recipientInstance+":"+O.recipientType,text:O.recipientValue})
});
N(M);
K.taskRecipients=K.accessToUsers
},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(O){var N=O.term;
s.names=[];
var Q=function(R){if(R.length!==0){s.names=R;
angular.forEach(R,function(S){s.names.push({id:S.value+":"+S.description,text:S.label})
})
}O.callback({results:s.names})
};
var L=function(){};
if(N.substring(0,2)==="@E"||N.substring(0,2)==="@e"){var M=O.term.slice(2);
if(l.session.isHKAdmin){var P={user:M.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(P,Q,L)
}else{C.retrieveUserList(M.trim(),Q,L)
}}else{if(N.substring(0,2)==="@D"||N.substring(0,2)==="@d"){var M=O.term.slice(2);
if(l.session.isHKAdmin){var P={department:M.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(P,Q,L)
}else{f.retrieveDepartmentList(M.trim(),Q,L)
}}else{if(N.substring(0,2)=="@R"||N.substring(0,2)=="@r"){var M=O.term.slice(2);
if(l.session.isHKAdmin){var P={role:M.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(P,Q,L)
}else{f.retrieveRoleList(M.trim(),Q,L)
}}else{if(N.substring(0,2)==="@A"||N.substring(0,2)==="@a"){var M=O.term.slice(2);
f.retrieveActivityList(M.trim(),Q,L)
}else{if(N.substring(0,2)=="@G"||N.substring(0,2)=="@g"){var M=O.term.slice(2);
f.retrieveGroupList(M.trim(),Q,L)
}else{if(N.length>0){var M=N;
if(l.session.isHKAdmin){var P={user:M.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(P,Q,L)
}else{C.retrieveUserList(M.trim(),Q,L)
}}else{O.callback({results:s.names})
}}}}}}}};
K.statusMultiselectconfig={allowClear:true,data:s.planStatusList,placeholder:"Select",multiple:true,initSelection:function(M,O){var L=K.planStatuses.split(",");
var N=[];
angular.forEach(L,function(P){angular.forEach(s.planStatusList,function(Q){if(Q.id==P){N.push({id:P,text:Q.text})
}})
});
O(N);
K.status=K.planStatuses
},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(L){L.callback({results:s.planStatusList})
}}
})
}if(J){s.nodeDataModel={name:H.serviceName,id:I.nodeId,serviceCode:H.serviceCode,x:I.x,y:I.y,designation:I.designationId,desigName:J.label,modifier:I.modifier,nonModifierCodes:I.nonMandatoryModifier,plans:I.plans,noOfPlans:I.noOfPlans,inputConnectors:[{name:"X"}],outputConnectors:[{name:"1"}],active:I.selected}
}else{s.nodeDataModel={name:H.serviceName,id:I.nodeId,serviceCode:H.serviceCode,x:I.x,y:I.y,designation:I.designationId,modifier:I.modifier,nonModifierCodes:I.nonMandatoryModifier,plans:I.plans,noOfPlans:I.noOfPlans,inputConnectors:[{name:"X"}],outputConnectors:[{name:"1"}],active:I.selected}
}if(I.isLastService===true){s.finalServiceId=I.nodeId
}s.nodes.push(s.nodeDataModel)
});
var F={name:G.flowGroupName,description:G.description,id:G.groupId,x:G.x,y:G.y,nodes:[],active:G.selected};
angular.forEach(s.nodes,function(H){F.nodes.push(H)
});
d.groups.push(F)
}else{var F={name:G.flowGroupName,description:G.description,id:G.groupId,x:G.x,y:G.y,nodes:[],active:G.selected};
d.groups.push(F)
}});
if(E.data.activityFlowNodeRoutes!==null){angular.forEach(E.data.activityFlowNodeRoutes,function(F){var G={id:F.nodeRouteId,ruleset:F.nodeRouteStatus,source:{nodeID:F.curentNode,connectorIndex:0},dest:{nodeID:F.nextNode,connectorIndex:0},active:F.selected};
d.connections.push(G)
})
}if(i.path()==="/manageactivityflow"){s.chartViewModel=new flowchart.ChartViewModel(d)
}else{s.onlyViewModel=new flowchart.ChartViewModel(d)
}}else{s.chartViewModel=new flowchart.ChartViewModel(d)
}})
}};
$("#dragActivity").draggable({helper:"clone",cursor:"move",opacity:0.25});
$("#dragService").draggable({helper:"clone",cursor:"move",opacity:0.25});
$("#activityFlowFrame").droppable({drop:function(E,F){s.newPosX=F.offset.left-$(this).offset().left;
s.newPosY=F.offset.top-$(this).offset().top;
var D=F.draggable.attr("id");
if(D==="dragActivity"){s.openActivityFlow()
}else{if(D==="dragService"){if(l.mouseOverGroup!==null){s.openService()
}else{l.addMessage("Invalid drop , please try again to put it in activity.",1)
}}}}});
s.hideEditService=function(D){s.activityNode={};
delete l.plans;
l.noOfPlans="";
l.nonModifierCodes="";
l.modifierCode="";
l.designationId="";
D.$setPristine();
s.submitted=false;
$("#serviceEditPopUp").modal("hide");
l.removeModalOpenCssAfterModalHide()
};
s.editService=function(D){s.submitted=true;
s.flagmembers=false;
if(s.activityFlow!==undefined&&s.activityFlow.plans!==undefined&&s.activityFlow.plans!==null&&s.activityflow.nonModifierCodes!==undefined&&s.activityflow.nonModifierCodes!==null&&s.activityflow.nonModifierCodes.indexOf("SP")>-1){angular.forEach(s.activityFlow.plans,function(F){F.rowsubmitted=true;
if(F.taskRecipients.length===0){s.flagmembers=true
}})
}if(D.$valid&&l.serviceId!==null&&!s.flagmembers){s.activityNode.nodeId=l.id;
s.activityNode.designationId=l.designationId;
s.activityNode.isLastService=$("#finalService").is(":checked");
s.activityNode.modifier=l.modifierCode;
s.activityNode.nonMandatoryModifier=l.nonModifierCodes;
s.activityNode.noOfPlans=l.noOfPlans;
if(!!l.nonModifierCodes&&l.nonModifierCodes.indexOf("SP")===-1){if(!!l.plans){delete l.plans
}}if(!!l.plans){var E=[];
angular.forEach(l.plans,function(G){var H="";
if(angular.isArray(G.taskRecipients)){angular.forEach(G.taskRecipients,function(I){H+=I.id+","
});
H=H.replace(/,\s*$/,"")
}else{H=G.taskRecipients
}var F="";
if(angular.isArray(G.status)){angular.forEach(G.status,function(I){F+=I.id+","
});
F=F.replace(/,\s*$/,"")
}else{F=G.status
}E.push({accessToUsers:H,planStatuses:F})
});
s.activityNode.plans=E
}if($("#finalService").is(":checked")===true){s.activityNode.previousFinalNode=s.finalServiceId
}l.maskLoading();
g.updateNode(s.activityNode,function(){l.unMaskLoading();
var F=$("#finalService").is(":checked");
if(F){s.finalServiceId=l.id
}else{s.finalServiceId=""
}s.retrieveActivityFlowVersion(false);
s.hideEditService(D);
s.activityNode={};
D.$setPristine()
})
}};
$("#rulesPopUp").on("show.bs.modal",function(D){u.info("rules popup show event");
k();
s.rulesetid=l.ruleSetId;
if(s.rulesetid!==undefined&&s.rulesetid!==null){l.ruleSetId=null;
s.isEditRule=true;
h.retrieveRuleById('{"primaryKey": "'+s.rulesetid+'"}',function(E){s.allRules=angular.copy(E.rules);
angular.forEach(s.allRules,function(G){for(var F=0;
F<G.criterias.length;
F++){if(G.criterias[F].fieldType==="UserMultiSelect"||G.criterias[F].fieldType==="MultiSelect"||G.criterias[F].fieldType==="Dropdown"||G.criterias[F].fieldType==="Pointer"||G.criterias[F].fieldType==="SubEntity"){G.criterias[F].value=angular.copy(G.criterias[F].value.toString().replace("[","").replace("]",""))
}}})
})
}});
var p=function(){var D={};
D.entity="";
D.field="";
D.operator="";
D.options=null;
D.operatorList=[];
D.fieldList=[];
D.rowsubmitted=false;
D.hint="Enter value";
D.values=[];
return D
};
var t=function(){s.ruleObject={};
s.ruleList=[];
var D=p();
s.ruleList.push(D);
s.ruleObject.remarks="";
s.ruleObject.id=null;
D.rowsubmitted=false;
s.ruleObject.isActive=true;
s.ruleObject.ruleName="";
s.ruleObject.apply="All"
};
var k=function(){s.allRules=[];
h.retrievePrerequisite(function(D){s.entityList=D.entity;
if(!!!s.entityList){s.entityList={}
}s.entityList["-1"]="Current Activity";
s.entityList["-2"]="Next Activity";
s.entityList["-3"]="Previous Activity";
s.entityList["-4"]="Current Service";
s.entityList["-5"]="Next Service";
s.entityList["-6"]="Previous Service";
s.operators=D.operator
});
t();
s.displayFlag="create"
};
function e(F){s.ruleObject={};
s.ruleList=[];
if(F!==null&&F!==undefined){s.ruleObject.id=F.id;
s.ruleObject.isActive=F.isActive;
s.ruleObject.isArchive=F.isArchive;
s.ruleObject.remarks=F.remarks;
s.ruleObject.ruleName=F.ruleName;
s.ruleObject.apply=F.apply;
var D=0;
for(var E=0;
E<F.criterias.length;
E++){if(F.criterias[E].id>D){D=F.criterias[E].id
}}s.lastRuleId=D;
r(F.criterias,0)
}}function r(G,E){if(E<G.length){var F={};
F.values=[];
F.options=null;
F.hint="Enter value";
if(G[E].fieldType==="Date range"){F.values[0]=G[E].value.split(",")[0];
F.values[1]=G[E].value.split(",")[1];
if(G[E].value1!==null){F.values[2]=G[E].value1.split(",")[0];
F.values[3]=G[E].value1.split(",")[1]
}}else{if(G[E].fieldType!=="Pointer"&&G[E].fieldType!=="SubEntity"){if(G[E].fieldType==="MultiSelect"||G[E].fieldType==="Dropdown"){F.values=G[E].value
}else{F.values[0]=G[E].value;
if(G[E].value1!==null){F.values[1]=G[E].value1
}}}else{if(G[E].fieldType==="SubEntity"){if(G[E].subentityComponentType!=="Date"){F.values=G[E].value
}else{F.values[0]=G[E].value;
if(G[E].value1!==null){F.values[1]=G[E].value1
}}}else{if(G[E].pointerComponentType==="MultiSelect"||G[E].pointerComponentType==="Dropdown"){F.values=G[E].value
}else{F.values[0]=G[E].value;
if(G[E].value1!==null){F.values[1]=G[E].value1
}}}}}F.id=G[E].id;
F.entity=G[E].entity.toString();
var H=G[E].field;
var D=G[E].operator;
if(parseInt(F.entity)<0){if(parseInt(F.entity)>=-3&&parseInt(F.entity)<=-1){F.fieldList=s.fieldListForAct
}else{F.fieldList=s.fieldListForSer
}$.grep(F.fieldList,function(J,I){if(J.id==H){F.field=F.fieldList[I];
return true
}});
A(F,D,G,E)
}else{h.retrieveFieldsByEntity('{"primaryKey": '+F.entity+"}",function(I){F.fieldList=I;
$.grep(F.fieldList,function(K,J){if(K.id==H){F.field=F.fieldList[J];
return true
}});
A(F,D,G,E)
})
}}}function A(K,E,N,J){K.operatorList=[];
if(K.field.type!=="SubEntity"){K.operatorList=s.operators[x[K.field.type]]
}else{K.operatorList=s.operators[x.Dropdown]
}$.grep(K.operatorList,function(P,O){if(P.label===E){K.operator=K.operatorList[O];
return true
}});
if(K.field.type==="Dropdown"||K.field.type==="Radio button"||K.field.type==="MultiSelect"){if(parseInt(K.entity)<=-1&&parseInt(K.entity)>=-3&&parseInt(K.field.id)!==-1){h.retrieveActivityMasterByFieldById('{"primaryKey": '+s.activityflow.version.value+"}",function(O){K.options=O;
$.grep(K.options,function(Q,P){if(Q.value===K.value){K.value[0]=K.options[P];
return true
}});
if(K.value1!==null){$.grep(K.options,function(Q,P){if(Q.value===K.value1){K.value[1]=K.options[P];
return true
}})
}})
}else{if(parseInt(K.entity)<=-4&&parseInt(K.entity)>=-6&&parseInt(K.field.id)!==-1){h.retrieveServiceMasterByFieldById('{"primaryKey": '+s.activityflow.version.value+"}",function(O){K.options=O;
$.grep(K.options,function(Q,P){if(Q.value===K.value){K.value[0]=K.options[P];
return true
}});
if(K.value1!==null){$.grep(K.options,function(Q,P){if(Q.value===K.value1){K.value[1]=K.options[P];
return true
}})
}})
}else{if(K.field.dbFieldName==="lot_status"||K.field.dbFieldName==="packet_status"||K.field.dbFieldName==="status_of_plan"||K.field.dbFieldName==="parcel_status"||K.field.dbFieldName==="invoice_status"||K.field.dbFieldName==="issue_status"||K.field.dbFieldName==="type_of_plan"){var D=K.field.dbFieldName;
h.retrieveLotStatus(D,function(O){K.options=O;
$.grep(K.options,function(Q,P){if(Q.value===K.value){K.value[0]=K.options[P];
return true
}});
if(K.value1!==null){$.grep(K.options,function(Q,P){if(Q.value===K.value1){K.value[1]=K.options[P];
return true
}})
}})
}else{h.retrieveMasterByFieldById('{"primaryKey": '+K.field.id+"}",function(O){K.options=O;
if(K.field.type!=="MultiSelect"){$.grep(K.options,function(Q,P){if(Q.value===K.value){K.value[0]=K.options[P];
return true
}});
if(K.value1!==null){$.grep(K.options,function(Q,P){if(Q.value===K.value1){K.value[1]=K.options[P];
return true
}})
}}})
}}}}else{if(K.field.type==="Checkbox"){K.options=[{label:"True",value:true},{label:"False",value:false}]
}else{if(K.field.type==="Pointer"){var G;
var M=K.field.validationPattern.replace("{","").replace("}","");
var H=[];
var F=[];
var L;
H=M.split(",");
angular.forEach(H,function(O){if(O.indexOf('"pointer":')>-1){F=O.split(":");
L=F[1].replace(/["']/g,"");
K.field.pointerId=L
}});
angular.forEach(K.fieldList,function(O){if(O.id.toString()===L.toString()){G=O.type;
K.field.pointertype=G
}});
h.retrieveMasterByFieldById('{"primaryKey": '+L+"}",function(O){K.options=O
})
}else{if(K.field.type==="SubEntity"){K.field.subEntityType="Dropdown";
h.retrieveDropListForSubEntity(K.field.id,function(O){K.options=O
})
}}}}K.showtemplate=false;
K.showtemplate=true;
function I(){if(K.field.type==="MultiSelect"){h.retrieveMasterByFieldById('{"primaryKey": '+K.field.id+"}",function(O){K.options=O
})
}}s.ruleList[J]=K;
J++;
r(N,J);
I();
if(K.field.type==="MultiSelect"){angular.forEach(s.ruleList,function(P){var O=angular.copy(P.values);
P.multiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(Q,S){var R=[];
h.retrieveMasterByFieldById('{"primaryKey": '+P.field.id+"}",function(T){s.optionsMultiSelect=T;
var V=[];
V=angular.copy(O.toString().replace("[","").replace("]","").split(","));
var U=angular.copy(P.values);
angular.forEach(V,function(W){angular.forEach(s.optionsMultiSelect,function(X){if(W.toString()===X.value.toString()){R.push({id:X.value,text:X.label})
}})
});
S(R);
P.values=angular.copy(U)
})
},formatResult:function(Q){return Q.text
},formatSelection:function(Q){return Q.text
},query:function(R){var Q=R.term;
s.names=[];
if(P.options.length!==0){s.names=angular.copy(P.options);
angular.forEach(P.options,function(S){s.names.push({id:S.value,text:S.label})
})
}R.callback({results:s.names})
}};
P.multiselectSingleComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(Q,S){var R=[];
h.retrieveMasterByFieldById('{"primaryKey": '+P.field.id+"}",function(T){s.optionsMultiSelect=T;
var V=[];
V=angular.copy(O.toString().replace("[","").replace("]","").split(","));
var U=angular.copy(P.values);
angular.forEach(V,function(W){angular.forEach(s.optionsMultiSelect,function(X){if(W.toString()===X.value.toString()){R.push({id:X.value,text:X.label})
}})
});
S(R);
P.values=angular.copy(U)
})
},formatResult:function(Q){return Q.text
},formatSelection:function(Q){return Q.text
},query:function(R){var Q=R.term;
s.names=[];
if(P.options.length!==0){s.names=angular.copy(P.options);
angular.forEach(P.options,function(S){s.names.push({id:S.value,text:S.label})
})
}R.callback({results:s.names})
}}
})
}if(K.field.type==="Pointer"){angular.forEach(s.ruleList,function(P){var Q;
if(K.field.pointerId!==null&&K.field.pointerId!==undefined){Q=K.field.pointerId.replace('"',"")
}var O=angular.copy(P.values);
P.pointerMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(R,T){var S=[];
h.retrieveMasterByFieldById('{"primaryKey": '+Q+"}",function(U){s.optionspointerMultiSelect=U;
var V=[];
V=angular.copy(O.toString().replace("[","").replace("]","").split(","));
var W=angular.copy(P.values);
angular.forEach(V,function(X){angular.forEach(s.optionspointerMultiSelect,function(Y){if(X.toString()===Y.value.toString()){S.push({id:Y.value,text:Y.label})
}})
});
T(S);
P.values=angular.copy(W)
})
},formatResult:function(R){return R.text
},formatSelection:function(R){return R.text
},query:function(S){var R=S.term;
s.names=[];
if(P.options.length!==0){s.names=angular.copy(P.options);
angular.forEach(P.options,function(T){s.names.push({id:T.value,text:T.label})
})
}S.callback({results:s.names})
}};
P.pointerSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(R,U){var S=[];
var T=P.field.pointerId.replace('"',"");
h.retrieveMasterByFieldById('{"primaryKey": '+T+"}",function(W){s.optionsSingleSelectPointer=W;
var X=[];
X=angular.copy(O.toString().replace("[","").replace("]","").split(","));
var V=angular.copy(P.values);
angular.forEach(X,function(Y){angular.forEach(s.optionsSingleSelectPointer,function(Z){if(Y.toString()===Z.value.toString()){S.push({id:Z.value,text:Z.label})
}})
});
U(S);
P.values=angular.copy(V)
})
},formatResult:function(R){return R.text
},formatSelection:function(R){return R.text
},query:function(S){var R=S.term;
s.names=[];
if(P.options.length!==0){s.names=angular.copy(P.options);
angular.forEach(P.options,function(T){s.names.push({id:T.value,text:T.label})
})
}S.callback({results:s.names})
}}
})
}if(K.field.type==="SubEntity"){angular.forEach(s.ruleList,function(P){var Q;
if(K.field.pointerId!==null&&K.field.pointerId!==undefined){Q=K.field.pointerId.replace('"',"")
}var O=angular.copy(P.values);
P.subEntityMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(R,T){var S=[];
h.retrieveDropListForSubEntity(P.field.id,function(V){s.optionsSubentityMultiSelect=V;
var W=[];
W=angular.copy(O.toString().replace("[","").replace("]","").split(","));
var U=angular.copy(P.values);
angular.forEach(W,function(X){angular.forEach(s.optionsSubentityMultiSelect,function(Y){if(X.toString()===Y.value.toString()){S.push({id:Y.value,text:Y.label})
}})
});
T(S);
P.values=angular.copy(U)
})
},formatResult:function(R){return R.text
},formatSelection:function(R){return R.text
},query:function(S){var R=S.term;
s.names=[];
if(P.options.length!==0){s.names=angular.copy(P.options);
angular.forEach(P.options,function(T){s.names.push({id:T.value,text:T.label})
})
}S.callback({results:s.names})
}};
P.subEntitySingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(R,T){var S=[];
h.retrieveDropListForSubEntity(P.field.id,function(V){s.optionsSubentitySingleSelect=V;
var W=[];
W=angular.copy(O.toString().replace("[","").replace("]","").split(","));
var U=angular.copy(P.values);
angular.forEach(W,function(X){angular.forEach(s.optionsSubentitySingleSelect,function(Y){if(X.toString()===Y.value.toString()){S.push({id:Y.value,text:Y.label})
}})
});
T(S);
P.values=angular.copy(U)
})
},formatResult:function(R){return R.text
},formatSelection:function(R){return R.text
},query:function(S){var R=S.term;
s.names=[];
if(P.options.length!==0){s.names=angular.copy(P.options);
angular.forEach(P.options,function(T){s.names.push({id:T.value,text:T.label})
})
}S.callback({results:s.names})
}}
})
}if(K.field.type==="Dropdown"){angular.forEach(s.ruleList,function(P){if(K.id===P.id){var O=angular.copy(P.values);
P.dropdownMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(S,V){var T=[];
var U=function(W){s.optionsDropdown=W;
var Y=[];
Y=angular.copy(O.toString().replace("[","").replace("]","").split(","));
var X=angular.copy(P.values);
angular.forEach(Y,function(Z){angular.forEach(s.optionsDropdown,function(aa){if(Z.toString()===aa.value.toString()){T.push({id:aa.value,text:aa.label})
}})
});
V(T);
P.values=angular.copy(X)
};
var Q=function(){};
if(parseInt(K.entity)<=-1&&parseInt(K.entity)>=-3&&parseInt(K.field.id)!==-1){h.retrieveActivityMasterByFieldById('{"primaryKey": '+s.activityflow.version.value+"}",U,Q)
}else{if(parseInt(K.entity)<=-4&&parseInt(K.entity)>=-6&&parseInt(K.field.id)!==-1){h.retrieveServiceMasterByFieldById('{"primaryKey": '+s.activityflow.version.value+"}",U,Q)
}else{if(K.field.dbFieldName==="lot_status"||K.field.dbFieldName==="packet_status"||K.field.dbFieldName==="status_of_plan"||K.field.dbFieldName==="parcel_status"||K.field.dbFieldName==="invoice_status"||K.field.dbFieldName==="issue_status"||K.field.dbFieldName==="type_of_plan"){var R=K.field.dbFieldName;
h.retrieveLotStatus(R,U,Q)
}else{h.retrieveMasterByFieldById('{"primaryKey": '+P.field.id+"}",U,Q)
}}}},formatResult:function(Q){return Q.text
},formatSelection:function(Q){return Q.text
},query:function(R){var Q=R.term;
s.names=[];
if(P.options.length!==0){s.names=angular.copy(P.options);
angular.forEach(P.options,function(S){s.names.push({id:S.value,text:S.label})
})
}R.callback({results:s.names})
}};
P.dropdownSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(S,V){var T=[];
var U=function(W){s.optionsDropdown=W;
var Y=[];
Y=angular.copy(O.toString().replace("[","").replace("]","").split(","));
var X=angular.copy(P.values);
angular.forEach(Y,function(Z){angular.forEach(s.optionsDropdown,function(aa){if(Z.toString()===aa.value.toString()){T.push({id:aa.value,text:aa.label})
}})
});
V(T);
P.values=angular.copy(X)
};
var Q=function(){};
if(parseInt(K.entity)<=-1&&parseInt(K.entity)>=-3&&parseInt(K.field.id)!==-1){h.retrieveActivityMasterByFieldById('{"primaryKey": '+s.activityflow.version.value+"}",U,Q)
}else{if(parseInt(K.entity)<=-4&&parseInt(K.entity)>=-6&&parseInt(K.field.id)!==-1){h.retrieveServiceMasterByFieldById('{"primaryKey": '+s.activityflow.version.value+"}",U,Q)
}else{if(K.field.dbFieldName==="lot_status"||K.field.dbFieldName==="packet_status"||K.field.dbFieldName==="status_of_plan"||K.field.dbFieldName==="parcel_status"||K.field.dbFieldName==="invoice_status"||K.field.dbFieldName==="issue_status"||K.field.dbFieldName==="type_of_plan"){var R=K.field.dbFieldName;
h.retrieveLotStatus(R,U,Q)
}else{h.retrieveMasterByFieldById('{"primaryKey": '+P.field.id+"}",U,Q)
}}}},formatResult:function(Q){return Q.text
},formatSelection:function(Q){return Q.text
},query:function(R){var Q=R.term;
s.names=[];
if(P.options.length!==0){s.names=angular.copy(P.options);
angular.forEach(P.options,function(S){s.names.push({id:S.value,text:S.label})
})
}R.callback({results:s.names})
}}
}})
}if(K.field.type==="UserMultiSelect"){angular.forEach(s.ruleList,function(S){var T=S.field.validationPattern;
var P=false;
var O=false;
var R=false;
var Q=T.replace("{","").replace("}","").split(",");
angular.forEach(Q,function(U){if(U.indexOf('"isEmployee":')>-1){P=true
}if(U.indexOf('"isDepartment":')>-1){O=true
}if(U.indexOf('"isDesignation":')>-1){R=true
}});
S.userMultiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(V,Z){var X=[];
var W=angular.copy(S.values);
var Y=S.values.toString().split(",");
var U=[];
if(Y!==undefined){angular.forEach(Y,function(aa){aa=aa.replace('"',"").trim();
U.push(aa)
});
v.defaultSelection(U,function(aa){var ab=[];
s.result=JSON.parse(angular.toJson(aa));
for(key in s.result){ab.push({id:key,text:aa[key]})
}Z(ab);
S.values=angular.copy(W)
},function(){})
}},formatResult:function(U){return U.text
},formatSelection:function(U){return U.text
},query:function(Z){var W=Z.term;
s.names=[];
var ab=function(ad){if(ad.length!==0){s.names=ad;
angular.forEach(ad,function(ae){s.names.push({id:ae.value+":"+ae.description,text:ae.label})
})
}Z.callback({results:s.names})
};
var U=function(){};
if(P){var ac;
var Y=false;
if(O===false&&R===false){if(W.substring(0,2)==="@E"||W.substring(0,2)==="@e"){Y=true;
ac=Z.term.slice(2)
}else{Y=true;
ac=Z.term
}}else{if(W.substring(0,2)==="@E"||W.substring(0,2)==="@e"){Y=true;
ac=Z.term.slice(2)
}}if(Y===true){if(l.session.isHKAdmin){var aa={user:ac.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(aa,ab,U)
}else{C.retrieveUserList(ac.trim(),ab,U)
}}}if(O){var ac;
var V=false;
if(P===false&&R===false){if(W.substring(0,2)==="@D"||W.substring(0,2)==="@d"){V=true;
ac=Z.term.slice(2)
}else{V=true;
ac=Z.term
}}else{if(W.substring(0,2)==="@D"||W.substring(0,2)==="@d"){V=true;
ac=Z.term.slice(2)
}}if(V===true){if(l.session.isHKAdmin){var aa={department:ac.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(aa,ab,U)
}else{f.retrieveDepartmentList(ac.trim(),ab,U)
}}}if(R){var ac;
var X=false;
if(P===false&&O===false){if(W.substring(0,2)=="@R"||W.substring(0,2)=="@r"){X=true;
ac=Z.term.slice(2)
}else{X=true;
ac=Z.term
}}else{if(W.substring(0,2)=="@R"||W.substring(0,2)=="@r"){X=true;
ac=Z.term.slice(2)
}}if(X===true){if(l.session.isHKAdmin){var aa={role:ac.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(aa,ab,U)
}else{f.retrieveRoleList(ac.trim(),ab,U)
}}}}};
S.values=S.values.toString();
S.userSingleselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(W,Z){var X=[];
var V=angular.copy(S.values);
var Y=S.values.toString().split(",");
var U=[];
if(Y!==undefined){angular.forEach(Y,function(aa){aa=aa.replace('"',"").trim();
U.push(aa)
});
v.defaultSelection(U,function(aa){var ab=[];
s.result=JSON.parse(angular.toJson(aa));
for(key in s.result){ab.push({id:key,text:aa[key]})
}Z(ab);
S.values=angular.copy(V)
},function(){})
}},formatResult:function(U){return U.text
},formatSelection:function(U){return U.text
},query:function(Z){var W=Z.term;
s.names=[];
var ab=function(ad){if(ad.length!==0){s.names=ad;
angular.forEach(ad,function(ae){s.names.push({id:ae.value+":"+ae.description,text:ae.label})
})
}Z.callback({results:s.names})
};
var U=function(){};
if(P){var ac;
var Y=false;
if(O===false&&R===false){if(W.substring(0,2)==="@E"||W.substring(0,2)==="@e"){Y=true;
ac=Z.term.slice(2)
}else{Y=true;
ac=Z.term
}}else{if(W.substring(0,2)==="@E"||W.substring(0,2)==="@e"){Y=true;
ac=Z.term.slice(2)
}}if(Y===true){if(l.session.isHKAdmin){var aa={user:ac.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(aa,ab,U)
}else{C.retrieveUserList(ac.trim(),ab,U)
}}}if(O){var V=false;
var ac;
if(P===false&&R===false){if(W.substring(0,2)==="@D"||W.substring(0,2)==="@d"){V=true;
ac=Z.term.slice(2)
}else{V=true;
ac=Z.term
}}else{if(W.substring(0,2)==="@D"||W.substring(0,2)==="@d"){V=true;
ac=Z.term.slice(2)
}}if(V===true){if(l.session.isHKAdmin){var aa={department:ac.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(aa,ab,U)
}else{f.retrieveDepartmentList(ac.trim(),ab,U)
}}}if(R){var X=false;
var ac;
if(P===false&&O===false){if(W.substring(0,2)=="@R"||W.substring(0,2)=="@r"){X=true;
ac=Z.term.slice(2)
}else{X=true;
ac=Z.term
}}else{if(W.substring(0,2)=="@R"||W.substring(0,2)=="@r"){X=true;
ac=Z.term.slice(2)
}}if(X===true){if(l.session.isHKAdmin){var aa={role:ac.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(aa,ab,U)
}else{f.retrieveRoleList(ac.trim(),ab,U)
}}}else{if(W.substring(0,2)==="@A"||W.substring(0,2)==="@a"){var ac=Z.term.slice(2);
f.retrieveActivityList(ac.trim(),ab,U)
}else{Z.callback({results:s.names})
}}}}
})
}}s.onEntityChange=function(D){if(s.ruleList[D].entity!==null){s.ruleList[D].field={};
s.ruleList[D].operatorList=[];
var E=s.ruleList[D].entity;
s.ruleList[D].showtemplate=false;
s.ruleList[D].values=[];
s.ruleList[D].rowsubmitted=false;
if(parseInt(E)>0){h.retrieveFieldsByEntity('{"primaryKey": '+E+"}",function(F){s.ruleList[D].fieldList=F
})
}else{if(parseInt(E)>=-3&&parseInt(E)<=-1){s.ruleList[D].fieldList=s.fieldListForAct
}else{s.ruleList[D].fieldList=s.fieldListForSer
}}}};
s.onFieldChange=function(F){if(s.ruleList[F].field!==null){var E=s.ruleList[F].field.type;
s.ruleList[F].operatorList=[];
var J;
if(E==="Pointer"){var I;
var H=s.ruleList[F].field.validationPattern.replace("{","").replace("}","");
var D=[];
var K=[];
D=H.split(",");
angular.forEach(D,function(L){if(L.indexOf('"pointer":')>-1){K=L.split(":");
J=K[1].replace(/["']/g,"");
s.ruleList[F].field.pointerId=J
}});
angular.forEach(s.ruleList[F].fieldList,function(L){if(L.id.toString()===J.toString()){I=L.type;
s.ruleList[F].field.pointertype=I
}});
s.ruleList[F].operatorList=s.operators[x[I]]
}else{if(E==="SubEntity"){s.ruleList[F].field.subEntityType="Dropdown";
s.ruleList[F].operatorList=s.operators[x.Dropdown];
h.retrieveDropListForSubEntity(s.ruleList[F].field.id,function(L){s.ruleList[F].options=L;
s.ruleList[F].field.subentityDropListType=L[0].description
})
}else{s.ruleList[F].operatorList=s.operators[x[s.ruleList[F].field.type]]
}}if(E==="Dropdown"||E==="Radio button"||E==="MultiSelect"){if(parseInt(s.ruleList[F].entity)<=-1&&parseInt(s.ruleList[F].entity)>=-3&&parseInt(s.ruleList[F].field.id)!==-1){h.retrieveActivityMasterByFieldById('{"primaryKey": '+s.activityflow.version.value+"}",function(L){s.ruleList[F].options=L
})
}else{if(parseInt(s.ruleList[F].entity)<=-4&&parseInt(s.ruleList[F].entity)>=-6&&parseInt(s.ruleList[F].field.id)!==-1){h.retrieveServiceMasterByFieldById('{"primaryKey": '+s.activityflow.version.value+"}",function(L){s.ruleList[F].options=L
})
}else{if(s.ruleList[F].field.dbFieldName==="lot_status"||s.ruleList[F].field.dbFieldName==="packet_status"||s.ruleList[F].field.dbFieldName==="status_of_plan"||s.ruleList[F].field.dbFieldName==="parcel_status"||s.ruleList[F].field.dbFieldName==="invoice_status"||s.ruleList[F].field.dbFieldName==="issue_status"||s.ruleList[F].field.dbFieldName==="type_of_plan"){var G=s.ruleList[F].field.dbFieldName;
h.retrieveLotStatus(G,function(L){s.ruleList[F].options=L
})
}else{h.retrieveMasterByFieldById('{"primaryKey": '+s.ruleList[F].field.id+"}",function(L){s.ruleList[F].options=L
})
}}}}else{if(E==="Checkbox"){s.ruleList[F].options=[{label:"True",value:true},{label:"False",value:false}]
}else{if(E==="Pointer"){h.retrieveMasterByFieldById('{"primaryKey": '+J+"}",function(L){s.ruleList[F].options=L
})
}}}s.ruleList[F].showtemplate=false;
s.ruleList[F].values=[];
s.ruleList[F].rowsubmitted=false
}};
s.onOperatorChange=function(E){s.ruleList[E].showtemplate=false;
s.ruleList[E].rowsubmitted=false;
s.ruleList[E].values=[];
var D=s.ruleList[E].operator;
if(!!D){if(D.label==="contains"||D.label==="has no value"||D.label==="has any value"){s.ruleList[E].hint="Enter comma separated list"
}s.ruleList[E].showtemplate=true;
angular.forEach(s.ruleList,function(J){var K=J.field.validationPattern;
var G=false;
var F=false;
var I=false;
var H=K.replace("{","").replace("}","").split(",");
angular.forEach(H,function(L){if(L.indexOf('"isEmployee":')>-1){G=true
}if(L.indexOf('"isDepartment":')>-1){F=true
}if(L.indexOf('"isDesignation":')>-1){I=true
}});
J.multiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
s.names=[];
if(J.options.length!==0){s.names=angular.copy(J.options);
angular.forEach(J.options,function(N){s.names.push({id:N.value,text:N.label})
})
}M.callback({results:s.names})
}};
J.multiselectSingleComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
s.names=[];
if(J.options.length!==0){s.names=angular.copy(J.options);
angular.forEach(J.options,function(N){s.names.push({id:N.value,text:N.label})
})
}M.callback({results:s.names})
}};
J.dropdownMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
s.names=[];
if(J.options.length!==0){s.names=angular.copy(J.options);
angular.forEach(J.options,function(N){s.names.push({id:N.value,text:N.label})
})
}M.callback({results:s.names})
}};
J.dropdownSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
s.names=[];
if(J.options.length!==0){s.names=angular.copy(J.options);
angular.forEach(J.options,function(N){s.names.push({id:N.value,text:N.label})
})
}M.callback({results:s.names})
}};
J.subEntityMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
s.names=[];
if(J.options.length!==0){s.names=angular.copy(J.options);
angular.forEach(J.options,function(N){s.names.push({id:N.value,text:N.label})
})
}M.callback({results:s.names})
}};
J.subEntitySingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
s.names=[];
if(J.options.length!==0){s.names=angular.copy(J.options);
angular.forEach(J.options,function(N){s.names.push({id:N.value,text:N.label})
})
}M.callback({results:s.names})
}};
J.pointerMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
s.names=[];
if(J.options.length!==0){s.names=angular.copy(J.options);
angular.forEach(J.options,function(N){s.names.push({id:N.value,text:N.label})
})
}M.callback({results:s.names})
}};
J.pointerSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(M){var L=M.term;
s.names=[];
if(J.options.length!==0){s.names=angular.copy(J.options);
angular.forEach(J.options,function(N){s.names.push({id:N.value,text:N.label})
})
}M.callback({results:s.names})
}};
J.userMultiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(L,M){},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(Q){var N=Q.term;
s.names=[];
var S=function(U){if(U.length!==0){s.names=U;
angular.forEach(U,function(V){s.names.push({id:V.value+":"+V.description,text:V.label})
})
}Q.callback({results:s.names})
};
var L=function(){};
if(G){var P=false;
var T;
if(F===false&&I===false){if(N.substring(0,2)==="@E"||N.substring(0,2)==="@e"){P=true;
T=Q.term.slice(2)
}else{P=true;
T=Q.term
}}else{if(N.substring(0,2)==="@E"||N.substring(0,2)==="@e"){P=true;
T=Q.term.slice(2)
}}if(P===true){if(l.session.isHKAdmin){var R={user:T.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(R,S,L)
}else{C.retrieveUserList(T.trim(),S,L)
}}}if(F){var M=false;
var T;
if(G===false&&I===false){if(N.substring(0,2)==="@D"||N.substring(0,2)==="@d"){M=true;
T=Q.term.slice(2)
}else{M=true;
T=Q.term
}}else{if(N.substring(0,2)==="@D"||N.substring(0,2)==="@d"){M=true;
T=Q.term.slice(2)
}}if(M===true){if(l.session.isHKAdmin){var R={department:T.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(R,S,L)
}else{f.retrieveDepartmentList(T.trim(),S,L)
}}}if(I){var O=false;
var T;
if(G===false&&F===false){if(N.substring(0,2)=="@R"||N.substring(0,2)=="@r"){O=true;
T=Q.term.slice(2)
}else{O=true;
T=Q.term
}}else{if(N.substring(0,2)=="@R"||N.substring(0,2)=="@r"){O=true;
T=Q.term.slice(2)
}}if(O===true){if(l.session.isHKAdmin){var R={role:T.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(R,S,L)
}else{f.retrieveRoleList(T.trim(),S,L)
}}}else{Q.callback({results:s.names})
}}};
J.userSingleselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(L,N){var M=[];
N(M)
},formatResult:function(L){return L.text
},formatSelection:function(L){return L.text
},query:function(Q){var N=Q.term;
s.names=[];
var S=function(U){if(U.length!==0){s.names=U;
angular.forEach(U,function(V){s.names.push({id:V.value+":"+V.description,text:V.label})
})
}Q.callback({results:s.names})
};
var L=function(){};
if(G){var T;
var P=false;
if(F===false&&I===false){if(N.substring(0,2)==="@E"||N.substring(0,2)==="@e"){P=true;
T=Q.term.slice(2)
}else{P=true;
T=Q.term
}}else{if(N.substring(0,2)==="@E"||N.substring(0,2)==="@e"){P=true;
T=Q.term.slice(2)
}}if(P===true){if(l.session.isHKAdmin){var R={user:T.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(R,S,L)
}else{C.retrieveUserList(T.trim(),S,L)
}}}if(F){var M=false;
var T;
if(G===false&&I===false){if(N.substring(0,2)==="@D"||N.substring(0,2)==="@d"){M=true;
T=Q.term.slice(2)
}else{M=true;
T=Q.term
}}else{if(N.substring(0,2)==="@D"||N.substring(0,2)==="@d"){M=true;
T=Q.term.slice(2)
}}if(M===true){if(l.session.isHKAdmin){var R={department:T.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(R,S,L)
}else{f.retrieveDepartmentList(T.trim(),S,L)
}}}if(I){var O=false;
var T;
if(G===false&&F===false){if(N.substring(0,2)=="@R"||N.substring(0,2)=="@r"){O=true;
T=Q.term.slice(2)
}else{O=true;
T=Q.term
}}else{if(N.substring(0,2)=="@R"||N.substring(0,2)=="@r"){O=true;
T=Q.term.slice(2)
}}if(O===true){if(l.session.isHKAdmin){var R={role:T.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(R,S,L)
}else{f.retrieveRoleList(T.trim(),S,L)
}}}else{}}}
});
s.ruleList[E].showtemplate=true
}else{s.ruleList[E].showtemplate=false
}};
s.isRulesEmpty=function(){if(!!s.allRules){return s.allRules.length<=0
}else{return true
}};
s.onOperatorClick=function(D){s.ruleList[D].showtemplate=false;
s.ruleList[D].rowsubmitted=false
};
s.addRule=function(H,E){console.log(H.$valid);
s.ruleList[E].rowsubmitted=true;
console.log(H.$valid);
if(H.$valid){var D=true;
var G=s.ruleList[E].operator.shortcutCode;
for(var F=0;
F<G;
F++){var K=s.ruleList[E].values[F];
if(s.ruleList[E].operator.label!=="has no value"&&s.ruleList[E].operator.label!=="has any value"){if(s.ruleList[E].field.type==="MultiSelect"){var J=s.ruleList[E].values;
D=(D&&true)
}else{if(K!==null&&K!==undefined){D=(D&&true)
}else{D=false
}}}else{D=(D&&true)
}}if(D){var I=p();
s.ruleList.push(I)
}}};
s.remove=function(D){s.ruleList.splice(D,1);
if(s.ruleList.length===0){var E=p();
s.ruleList.push(E);
s.ruleList[D].rowsubmitted=false
}};
s.save=function(E){if(!!s.ruleList){for(var I=0;
I<s.ruleList.length;
I++){s.ruleList[I].rowsubmitted=true
}}s.ruleSubmitted=true;
if(E.$valid){var K=true;
for(var J=0;
J<s.ruleList.length;
J++){var D=s.ruleList[J].operator.shortcutCode;
for(var I=0;
I<D;
I++){var G=s.ruleList[J].values[I];
if(s.ruleList[J].operator.label!=="has no value"&&s.ruleList[J].operator.label!=="has any value"){if(s.ruleList[J].field.type==="MultiSelect"){K=(K&&true)
}else{if(G!==null&&G!==undefined){K=(K&&true)
}else{K=false;
break
}}}else{K=(K&&true)
}}if(K===false){break
}}if(K){var M=[];
var F=s.ruleList.length;
for(var I=0;
I<F;
I++){s.ruleList[I].rowsubmitted=true;
var H={};
H=angular.copy(s.ruleList[I]);
var L={};
L.id=I;
L.entity=H.entity;
L.field=H.field.id;
L.operator=H.operator.label;
L.fieldType=H.field.type;
if(L.fieldType!=="Pointer"&&L.fieldType!=="SubEntity"){if(L.fieldType!=="Date range"&&L.fieldType!=="UserMultiSelect"&&L.fieldType!=="MultiSelect"&&L.fieldType!=="Dropdown"){L.value=H.values[0];
if(H.values.length>1){L.value1=H.values[1]
}}else{if(L.fieldType!=="UserMultiSelect"&&L.fieldType!=="MultiSelect"&&L.fieldType!=="Dropdown"){L.value=H.values[0]+","+H.values[1]
}else{if(H.operator.label!=="has any value from"){if(H.values.toString().indexOf(",")>-1){H.values.toString().replace(/,/g,"")
}}L.value=H.values
}if(H.values.length>1&&L.fieldType!=="UserMultiSelect"&&L.fieldType!=="MultiSelect"&&L.fieldType!=="Dropdown"){L.value1=H.values[2]+","+H.values[3]
}}}else{if(L.fieldType==="SubEntity"){if(H.field.subentityDropListType==="Date "){L.value=H.values[0];
if(H.values.length>1){L.value1=H.values[1]
}}else{if(H.operator.label!=="has any value from"){if(H.values.toString().indexOf(",")>-1){H.values.toString().replace(/,/g,"")
}}L.value=H.values
}if(H.values.length>1&&H.field.subentityDropListType==="Date "){L.value1=H.values[2]+","+H.values[3]
}}else{if(H.field.pointertype!=="MultiSelect"&&H.field.pointertype!=="Dropdown"){L.value=H.values[0];
if(H.values.length>1){L.value1=H.values[1]
}}else{if(H.field.pointertype!=="MultiSelect"&&H.field.pointertype!=="Dropdown"){L.value=H.values[0]+","+H.values[1]
}else{if(H.operator.label!=="has any value from"){if(H.values.toString().indexOf(",")>-1){H.values.toString().replace(/,/g,"")
}}L.value=H.values
}if(H.values.length>1&&H.field.pointertype!=="MultiSelect"&&H.field.pointertype!=="Dropdown"){L.value1=H.values[2]+","+H.values[3]
}}}}M.push(L)
}if(E.$valid){s.ruleObject.criterias=angular.copy(M);
s.ruleObject.isArchive=!s.ruleObject.isActive;
if(!!s.selectedRule){var J=parseInt(s.selectedRule.id);
s.allRules[J].ruleName=angular.copy(s.ruleObject.ruleName);
s.allRules[J].remarks=angular.copy(s.ruleObject.remarks);
s.allRules[J].apply=angular.copy(s.ruleObject.apply);
s.allRules[J].criterias=angular.copy(s.ruleObject.criterias);
s.allRules[J].isActive=angular.copy(s.ruleObject.isActive);
s.allRules[J].isArchive=angular.copy(s.ruleObject.isArchive);
if(s.isEditRule){s.reset(E)
}}else{if(s.addFlag){if(s.ruleObject.id===null){s.lastRuleId++;
if(!!s.allRules){s.ruleObject.id=s.allRules.length
}else{s.ruleObject.id=0
}}if(!!!s.allRules){s.allRules=[]
}s.allRules.push(s.ruleObject);
s.selectedRule=s.ruleObject
}}s.ruleSubmitted=false;
s.addFlag=false;
s.selectedRule=""
}}}};
s.saveAndSubmit=function(E){s.save(E);
if(E.$valid||s.allRules.length<=0){u.info("in save and submit");
var D={};
D.rules=angular.copy(s.allRules);
D.franchise=s.activityflow.franchise.otherId;
if(s.allRules.length>0){h.createRuleSet(D,function(F){s.rulesetid=null;
s.hideRule(E,false)
});
s.allRules=[]
}}else{return
}};
s.onRuleChange=function(D){l.maskLoading();
if(!!!s.selectedRule){}else{e(s.allRules[s.allRules.indexOf(s.selectedRule)]);
s.editRule=true;
s.addFlag=false
}l.unMaskLoading()
};
s.deleteRule=function(){var D;
if(s.selectedRule!==null){$.grep(s.allRules,function(F,E){if(F.ruleName===s.selectedRule.ruleName){D=E;
return true
}});
s.allRules.splice(D,1);
s.selectedRule=null
}};
s.reset=function(D){s.selectedRule="";
s.addFlag=true;
t();
D.$setPristine();
s.selectedRule=null;
s.ruleSubmitted=false
};
s.resetCancel=function(D){s.selectedRule="";
s.addFlag=false;
t();
D.$setPristine();
s.ruleSubmitted=false;
s.selectedRule=null
};
s.loadPlans=function(){if(!!s.activityflow.nonModifierCodes){if(s.activityflow.nonModifierCodes.indexOf("SP")>-1){if(!!!s.activityFlow){s.activityFlow={}
}if(!!!s.activityFlow.plans||s.activityFlow.plans.length===0){s.activityFlow.plans=[];
s.activityFlow.plans.push({})
}}else{if(!!!s.activityFlow){s.activityFlow={}
}s.activityFlow.plans=[];
s.activityFlow.plans.push({})
}}};
s.loadPlansForEdit=function(){if(!!l.nonModifierCodes){if(l.nonModifierCodes.indexOf("SP")>-1){if(!!!l.plans){l.plans=[];
var D={};
D.multiselectConfig={multiple:true,closeOnSelect:false,placeholder:"Select members",initSelection:function(E,G){var F=[];
G(F)
},formatResult:function(E){return E.text
},formatSelection:function(E){return E.text
},query:function(H){var G=H.term;
s.names=[];
var J=function(K){if(K.length!==0){s.names=K;
angular.forEach(K,function(L){s.names.push({id:L.value+":"+L.description,text:L.label})
})
}H.callback({results:s.names})
};
var E=function(){};
if(G.substring(0,2)==="@E"||G.substring(0,2)==="@e"){var F=H.term.slice(2);
if(l.session.isHKAdmin){var I={user:F.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(I,J,E)
}else{C.retrieveUserList(F.trim(),J,E)
}}else{if(G.substring(0,2)==="@D"||G.substring(0,2)==="@d"){var F=H.term.slice(2);
if(l.session.isHKAdmin){var I={department:F.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(I,J,E)
}else{f.retrieveDepartmentList(F.trim(),J,E)
}}else{if(G.substring(0,2)=="@R"||G.substring(0,2)=="@r"){var F=H.term.slice(2);
if(l.session.isHKAdmin){var I={role:F.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(I,J,E)
}else{f.retrieveRoleList(F.trim(),J,E)
}}else{if(G.substring(0,2)==="@A"||G.substring(0,2)==="@a"){var F=H.term.slice(2);
f.retrieveActivityList(F.trim(),J,E)
}else{if(G.substring(0,2)=="@G"||G.substring(0,2)=="@g"){var F=H.term.slice(2);
f.retrieveGroupList(F.trim(),J,E)
}else{if(G.length>0){var F=G;
if(l.session.isHKAdmin){var I={user:F.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(I,J,E)
}else{C.retrieveUserList(F.trim(),J,E)
}}else{H.callback({results:s.names})
}}}}}}}};
D.statusMultiselectconfig={allowClear:true,data:s.planStatusList,placeholder:"Select",multiple:true,initSelection:function(E,G){var F=[];
G(F)
},formatResult:function(E){return E.text
},formatSelection:function(E){return E.text
},query:function(E){E.callback({results:s.planStatusList})
}};
l.plans.push(D)
}}else{l.plans=[];
var D={};
D.multiselectConfig={multiple:true,closeOnSelect:false,placeholder:"Select members",initSelection:function(E,G){var F=[];
G(F)
},formatResult:function(E){return E.text
},formatSelection:function(E){return E.text
},query:function(H){var G=H.term;
s.names=[];
var J=function(K){if(K.length!==0){s.names=K;
angular.forEach(K,function(L){s.names.push({id:L.value+":"+L.description,text:L.label})
})
}H.callback({results:s.names})
};
var E=function(){};
if(G.substring(0,2)==="@E"||G.substring(0,2)==="@e"){var F=H.term.slice(2);
if(l.session.isHKAdmin){var I={user:F.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(I,J,E)
}else{C.retrieveUserList(F.trim(),J,E)
}}else{if(G.substring(0,2)==="@D"||G.substring(0,2)==="@d"){var F=H.term.slice(2);
if(l.session.isHKAdmin){var I={department:F.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(I,J,E)
}else{f.retrieveDepartmentList(F.trim(),J,E)
}}else{if(G.substring(0,2)=="@R"||G.substring(0,2)=="@r"){var F=H.term.slice(2);
if(l.session.isHKAdmin){var I={role:F.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(I,J,E)
}else{f.retrieveRoleList(F.trim(),J,E)
}}else{if(G.substring(0,2)==="@A"||G.substring(0,2)==="@a"){var F=H.term.slice(2);
f.retrieveActivityList(F.trim(),J,E)
}else{if(G.substring(0,2)=="@G"||G.substring(0,2)=="@g"){var F=H.term.slice(2);
f.retrieveGroupList(F.trim(),J,E)
}else{if(G.length>0){var F=G;
if(l.session.isHKAdmin){var I={user:F.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(I,J,E)
}else{C.retrieveUserList(F.trim(),J,E)
}}else{H.callback({results:s.names})
}}}}}}}};
D.statusMultiselectconfig={allowClear:true,data:s.planStatusList,placeholder:"Select",multiple:true,initSelection:function(E,G){var F=[];
G(F)
},formatResult:function(E){return E.text
},formatSelection:function(E){return E.text
},query:function(E){E.callback({results:s.planStatusList})
}};
l.plans.push(D)
}}};
s.autoCompleteInvitees={multiple:true,closeOnSelect:false,placeholder:"Select members",initSelection:function(D,F){var E=[];
angular.forEach(s.userData,function(G){E.push({id:G.recipientInstance+":"+G.recipientType,text:G.recipientValue})
});
F(E)
},formatResult:function(D){return D.text
},formatSelection:function(D){return D.text
},query:function(G){var F=G.term;
s.names=[];
var I=function(J){if(J.length!==0){s.names=J;
angular.forEach(J,function(K){s.names.push({id:K.value+":"+K.description,text:K.label})
})
}G.callback({results:s.names})
};
var D=function(){};
if(F.substring(0,2)==="@E"||F.substring(0,2)==="@e"){var E=G.term.slice(2);
if(l.session.isHKAdmin){var H={user:E.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(H,I,D)
}else{C.retrieveUserList(E.trim(),I,D)
}}else{if(F.substring(0,2)==="@D"||F.substring(0,2)==="@d"){var E=G.term.slice(2);
if(l.session.isHKAdmin){var H={department:E.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(H,I,D)
}else{f.retrieveDepartmentList(E.trim(),I,D)
}}else{if(F.substring(0,2)=="@R"||F.substring(0,2)=="@r"){var E=G.term.slice(2);
if(l.session.isHKAdmin){var H={role:E.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(H,I,D)
}else{f.retrieveRoleList(E.trim(),I,D)
}}else{if(F.substring(0,2)==="@A"||F.substring(0,2)==="@a"){var E=G.term.slice(2);
f.retrieveActivityList(E.trim(),I,D)
}else{if(F.substring(0,2)=="@G"||F.substring(0,2)=="@g"){var E=G.term.slice(2);
f.retrieveGroupList(E.trim(),I,D)
}else{if(F.length>0){var E=F;
if(l.session.isHKAdmin){var H={user:E.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(H,I,D)
}else{C.retrieveUserList(E.trim(),I,D)
}}else{G.callback({results:s.names})
}}}}}}}};
s.allowedType={allowClear:true,data:s.planStatusList,placeholder:"Select",multiple:true,initSelection:function(F,H){if(s.editCustomField){var D=s.customFieldValidation.allowedTypes;
var G=[];
if(s.allowedTypeChars!==undefined){var E=s.allowedTypeChars.split(",");
angular.forEach(E,function(I){G.push({id:I,text:I})
})
}H(G);
s.customFieldValidation.allowedTypes=D
}},formatResult:function(D){return D.text
},formatSelection:function(D){return D.text
},query:function(D){D.callback({results:s.planStatusList})
}};
s.retrievePlanStatus=function(){g.retrievePlanStatus(function(D){s.planStatusList=[];
angular.forEach(JSON.parse(angular.toJson(D)),function(F,E){s.planStatusList.push({id:E,text:F})
})
},function(){})
};
s.addNewPlan=function(E,D){s.activityFlow.plans[D].rowsubmitted=true;
if(E.$valid){s.activityFlow.plans.push({})
}};
s.deletePlan=function(D){if(s.activityFlow.plans.length===1){s.activityFlow.plans=[];
s.activityFlow.plans.push({})
}else{s.activityFlow.plans.splice(D,1)
}};
s.addInEditNewPlan=function(E,D){l.plans[D].rowsubmitted=true;
if(E.$valid){var F={};
F.multiselectConfig={multiple:true,closeOnSelect:false,placeholder:"Select members",initSelection:function(G,I){var H=[]
},formatResult:function(G){return G.text
},formatSelection:function(G){return G.text
},query:function(J){var I=J.term;
s.names=[];
var L=function(M){if(M.length!==0){s.names=M;
angular.forEach(M,function(N){s.names.push({id:N.value+":"+N.description,text:N.label})
})
}J.callback({results:s.names})
};
var G=function(){};
if(I.substring(0,2)==="@E"||I.substring(0,2)==="@e"){var H=J.term.slice(2);
if(l.session.isHKAdmin){var K={user:H.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(K,L,G)
}else{C.retrieveUserList(H.trim(),L,G)
}}else{if(I.substring(0,2)==="@D"||I.substring(0,2)==="@d"){var H=J.term.slice(2);
if(l.session.isHKAdmin){var K={department:H.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(K,L,G)
}else{f.retrieveDepartmentList(H.trim(),L,G)
}}else{if(I.substring(0,2)=="@R"||I.substring(0,2)=="@r"){var H=J.term.slice(2);
if(l.session.isHKAdmin){var K={role:H.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(K,L,G)
}else{f.retrieveRoleList(H.trim(),L,G)
}}else{if(I.substring(0,2)==="@A"||I.substring(0,2)==="@a"){var H=J.term.slice(2);
f.retrieveActivityList(H.trim(),L,G)
}else{if(I.substring(0,2)=="@G"||I.substring(0,2)=="@g"){var H=J.term.slice(2);
f.retrieveGroupList(H.trim(),L,G)
}else{if(I.length>0){var H=I;
if(l.session.isHKAdmin){var K={user:H.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(K,L,G)
}else{C.retrieveUserList(H.trim(),L,G)
}}else{J.callback({results:s.names})
}}}}}}}};
F.statusMultiselectconfig={allowClear:true,data:s.planStatusList,placeholder:"Select",multiple:true,initSelection:function(G,I){var H=[];
I(H)
},formatResult:function(G){return G.text
},formatSelection:function(G){return G.text
},query:function(G){G.callback({results:s.planStatusList})
}};
l.plans.push(F)
}};
s.deleteInEditPlan=function(D){if(l.plans.length===1){l.plans=[];
var E={};
E.multiselectConfig={multiple:true,closeOnSelect:false,placeholder:"Select members",initSelection:function(F,H){var G=[];
H(G)
},formatResult:function(F){return F.text
},formatSelection:function(F){return F.text
},query:function(I){var H=I.term;
s.names=[];
var K=function(L){if(L.length!==0){s.names=L;
angular.forEach(L,function(M){s.names.push({id:M.value+":"+M.description,text:M.label})
})
}I.callback({results:s.names})
};
var F=function(){};
if(H.substring(0,2)==="@E"||H.substring(0,2)==="@e"){var G=I.term.slice(2);
if(l.session.isHKAdmin){var J={user:G.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(J,K,F)
}else{C.retrieveUserList(G.trim(),K,F)
}}else{if(H.substring(0,2)==="@D"||H.substring(0,2)==="@d"){var G=I.term.slice(2);
if(l.session.isHKAdmin){var J={department:G.trim(),franchise:s.activityflow.franchise.value};
f.retrieveDepartmentListFranchise(J,K,F)
}else{f.retrieveDepartmentList(G.trim(),K,F)
}}else{if(H.substring(0,2)=="@R"||H.substring(0,2)=="@r"){var G=I.term.slice(2);
if(l.session.isHKAdmin){var J={role:G.trim(),franchise:s.activityflow.franchise.value};
f.retrieveRoleListFranchise(J,K,F)
}else{f.retrieveRoleList(G.trim(),K,F)
}}else{if(H.substring(0,2)==="@A"||H.substring(0,2)==="@a"){var G=I.term.slice(2);
f.retrieveActivityList(G.trim(),K,F)
}else{if(H.substring(0,2)=="@G"||H.substring(0,2)=="@g"){var G=I.term.slice(2);
f.retrieveGroupList(G.trim(),K,F)
}else{if(H.length>0){var G=H;
if(l.session.isHKAdmin){var J={user:G.trim(),franchise:s.activityflow.franchise.value};
f.retrieveUserListFranchise(J,K,F)
}else{C.retrieveUserList(G.trim(),K,F)
}}else{I.callback({results:s.names})
}}}}}}}};
E.statusMultiselectconfig={allowClear:true,data:s.planStatusList,placeholder:"Select",multiple:true,initSelection:function(F,H){var G=[];
H(G)
},formatResult:function(F){return F.text
},formatSelection:function(F){return F.text
},query:function(F){F.callback({results:s.planStatusList})
}};
l.plans.push(E)
}else{l.plans.splice(D,1)
}}
}])
});