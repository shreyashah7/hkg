define(["hkg","ruleService","goalService","messageService","customFieldService","activityFlowService","addMasterValue","ruleField","dynamicForm","jqueryAtWho","jqueryCaret"],function(a){a.register.controller("GoalTemplateController",["$rootScope","$scope","RuleService","GoalService","$location","DynamicFormService","Messaging","CustomFieldService","ActivityFlowService",function(m,p,i,q,g,o,k,n,l){m.maskLoading();
p.$on("$locationChangeStart",function(u,t,r){var s=document.createElement("a");
s.href=t;
if(s.hash==="#/managegoal"){m.clearGoalData=false
}});
m.mainMenu="manageLink";
m.childMenu="manageGoals";
m.activateMenu();
p.submitted=false;
p.dbType={};
var h=0;
p.entity="GOALTEMPLATE.";
p.ruleObject={};
p.selectedRule=null;
p.allRules=[];
p.flag=false;
p.goalTemplateForm={};
p.listOfModelsOfDateType=[];
p.dynamicGoalData=o.resetSection(p.generalGoalTemplate);
var e=o.retrieveSectionWiseCustomFieldInfo("manageGoals");
e.then(function(r){p.generalGoalTemplate=r.genralSection;
if(p.generalGoalTemplate!==null&&p.generalGoalTemplate!==undefined){angular.forEach(p.generalGoalTemplate,function(s){if(s.type!==null&&s.type!==undefined&&s.type==="date"){p.listOfModelsOfDateType.push(s.model)
}})
}},function(r){console.log("Failed: "+r)
},function(r){console.log("Got notification: "+r)
});
m.clearGoalData=true;
q.retrieveGoalTemplateModifiers(function(r){if(!!r){r=JSON.parse(angular.toJson(r));
p.varList=[];
angular.forEach(r,function(t,s){p.varList.push(t)
});
$("#valgoalachievedvalue").atwho({at:"$",data:angular.copy(p.varList)});
$("#valgoalnotachievedvalue").atwho({at:"$",data:angular.copy(p.varList)})
}});
p.applyList=["All","Any"];
p.displaySearchedGoalTemplate="view";
var c={Number:"Numeric","Text field":"String","Text area":"String",Dropdown:"String","Radio button":"String",Date:"Date",Datepicker:"Date","Date range":"Date range",Time:"Date","Time range":"Date range",Password:"String",Currency:"Numeric",Decimal:"Numeric",Email:"String",Phone:"String",Checkbox:"Boolean",Percent:"Numeric",Formula:"Numeric",Pointer:"Numeric",AutoGenerated:"Boolean",MultiSelect:"String",UserMultiSelect:"String",Angle:"Numeric",Image:"Image",Upload:"Image"};
p.fieldListForSer=[{id:-1,label:"Status",oldLabelName:"Status",type:"Dropdown",validationPattern:"{}",isNewField:false,fieldType:"Long"},{id:-2,label:"No. of occurance",oldLabelName:"No. of occurance",type:"Number",validationPattern:"{}",isNewField:false,fieldType:"Number"},{id:-3,label:"Time",oldLabelName:"Time",type:"Decimal",validationPattern:"{}",isNewField:false,fieldType:"String"},{id:-4,label:"Name",oldLabelName:"Name",type:"Dropdown",validationPattern:"{}",isNewField:false,fieldType:"String"}];
p.fieldListForAct=[{id:-2,label:"No. of occurance",oldLabelName:"No. of occurance",type:"Number",validationPattern:"{}",isNewField:false,fieldType:"Number"},{id:-3,label:"Time",oldLabelName:"Time",type:"Decimal",validationPattern:"{}",isNewField:false,fieldType:"String"},{id:-4,label:"Name",oldLabelName:"Name",type:"Dropdown",validationPattern:"{}",isNewField:false,fieldType:"String"}];
p.ruleList=[];
p.valArray=[];
p.initData=function(){if(m.goalTemplatePayload===null){g.path("/managegoal");
m.addMessage("Failed to retrive goal template informations",1)
}p.periodList=[];
for(index=1;
index<=31;
index++){p.periodList.push({id:index,text:index})
}i.retrievePrerequisite(function(s){p.entityList=s.entity;
if(!!!p.entityList){p.entityList={}
}l.retrievePrerequisite(function(v){var t=false;
if(!!v&&!!v.activityflowbycompany&&v.activityflowbycompany.length>0&&!!v.activityflowbycompany[0].custom2){for(var u=0;
u<v.activityflowbycompany[0].custom2.length;
u++){if(v.activityflowbycompany[0].custom2[u].description==="A"){t=true;
p.version=v.activityflowbycompany[0].custom2[u].value;
break
}}if(t){p.entityList["-1"]="Current Activity";
p.entityList["-2"]="Next Activity";
p.entityList["-3"]="Previous Activity";
p.entityList["-4"]="Current Service";
p.entityList["-5"]="Next Service";
p.entityList["-6"]="Previous Service"
}}});
p.operators=s.operator
});
p.goalTemplateList=[];
q.retrieveAllGoalTemplates(function(s){if(!!s){angular.forEach(s,function(t){p.goalTemplateList.push(t)
})
}},function(){console.log("Failed to retrieve all templates")
});
var r=d();
p.ruleList.push(r);
if(!!m.goalTemplatePayload){if(!!m.goalTemplatePayload.editGoalTemplateId){m.maskLoading();
q.retrieveGoalTemplateById(m.goalTemplatePayload.editGoalTemplateId,function(s){if(!!s){p.goalTemplate={};
p.dynamicGoalData={};
p.goalTemplate.id=s.id;
p.goalTemplate.status=s.status;
p.goalTemplate.name=s.name;
p.goalTemplate.description=s.description;
p.goalTemplate.period=s.period;
p.goalTemplate.type=s.type;
if(!!s.ruleList){p.allRules=s.ruleList.rules;
p.goalTemplate.apply=s.ruleList.rules[0].apply
}p.goalTemplate.isGenVal=s.isGenVal;
p.goalTemplate.genvaltype=s.genvaltype;
p.goalTemplate.genvalvalue=s.genvalvalue;
p.goalTemplate.isValGoalAchieved=s.isValGoalAchieved;
p.goalTemplate.valgoalachievedtype=s.valgoalachievedtype;
p.goalTemplate.valgoalachievedvalue=s.valgoalachievedvalue;
p.goalTemplate.isValGoalNotAchieved=s.isValGoalNotAchieved;
p.goalTemplate.valgoalnotachievedtype=s.valgoalnotachievedtype;
p.goalTemplate.valgoalnotachievedvalue=s.valgoalnotachievedvalue;
p.dynamicGoalData=s.goalCustom;
if(!!p.dynamicGoalData){angular.forEach(p.listOfModelsOfDateType,function(t){if(p.dynamicGoalData.hasOwnProperty(t)){if(p.dynamicGoalData[t]!==null&&p.dynamicGoalData[t]!==undefined){p.dynamicGoalData[t]=new Date(p.dynamicGoalData[t])
}else{p.dynamicGoalData[t]=""
}}})
}if(!!s.ruleList){b(s.ruleList.rules[s.ruleList.rules.length-1])
}q.retrieveGoalTemplateModifiers(function(t){if(!!t){t=JSON.parse(angular.toJson(t));
p.varList=[];
angular.forEach(t,function(v,u){p.varList.push(v)
});
$("#valgoalachievedvalue").atwho({at:"$",data:angular.copy(p.varList)});
$("#valgoalnotachievedvalue").atwho({at:"$",data:angular.copy(p.varList)})
}})
}m.unMaskLoading()
},function(){console.log("Failed..");
m.unMaskLoading()
})
}else{p.goalTemplate={};
p.goalTemplate.apply=p.applyList[0];
if(m.goalTemplatePayload.type==="1"){p.goalTemplate.type="N"
}else{if(m.goalTemplatePayload.type==="2"||m.goalTemplatePayload.type==="3"){p.goalTemplate.type="B"
}}}}};
var d=function(){var r={};
r.entity="";
r.field="";
r.operator="";
r.options=null;
r.operatorList=[];
r.fieldList=[];
r.rowsubmitted=false;
r.hint="Enter value";
r.values=[];
return r
};
p.onEntityChange=function(r){if(p.ruleList[r].entity!==null){p.ruleList[r].field={};
p.ruleList[r].operatorList=[];
var s=p.ruleList[r].entity;
p.ruleList[r].showtemplate=false;
p.ruleList[r].values=[];
p.ruleList[r].rowsubmitted=false;
if(parseInt(s)>0){i.retrieveFieldsByEntity('{"primaryKey": '+s+"}",function(t){p.ruleList[r].fieldList=t
})
}else{if(parseInt(s)>=-3&&parseInt(s)<=-1){p.ruleList[r].fieldList=p.fieldListForAct
}else{p.ruleList[r].fieldList=p.fieldListForSer
}}}};
p.onFieldChange=function(t){if(p.ruleList[t].field!==null){p.ruleList[t].operator={};
var s=p.ruleList[t].field.type;
p.ruleList[t].operatorList=[];
var x;
if(s==="Pointer"){var w;
var v=p.ruleList[t].field.validationPattern.replace("{","").replace("}","");
var r=[];
var y=[];
r=v.split(",");
angular.forEach(r,function(z){if(z.indexOf('"pointer":')>-1){y=z.split(":");
x=y[1].replace(/["']/g,"");
p.ruleList[t].field.pointerId=x
}});
angular.forEach(p.ruleList[t].fieldList,function(z){if(z.id.toString()===x.toString()){w=z.type;
p.ruleList[t].field.pointertype=w
}});
p.ruleList[t].operatorList=p.operators[c[w]]
}else{if(s==="SubEntity"){p.ruleList[t].field.subEntityType="Dropdown";
p.ruleList[t].operatorList=p.operators[c.Dropdown];
i.retrieveDropListForSubEntity(p.ruleList[t].field.id,function(z){p.ruleList[t].options=z;
p.ruleList[t].field.subentityDropListType=z[0].description
})
}else{p.ruleList[t].operatorList=p.operators[c[p.ruleList[t].field.type]]
}}if(s==="Dropdown"||s==="Radio button"||s==="MultiSelect"){if(parseInt(p.ruleList[t].entity)<=-1&&parseInt(p.ruleList[t].entity)>=-3&&parseInt(p.ruleList[t].field.id)!==-1){i.retrieveActivityMasterByFieldById('{"primaryKey": '+p.version+"}",function(z){p.ruleList[t].options=z
})
}else{if(parseInt(p.ruleList[t].entity)<=-4&&parseInt(p.ruleList[t].entity)>=-6&&parseInt(p.ruleList[t].field.id)!==-1){i.retrieveServiceMasterByFieldById('{"primaryKey": '+p.version+"}",function(z){p.ruleList[t].options=z
})
}else{if(p.ruleList[t].field.dbFieldName==="lot_status"||p.ruleList[t].field.dbFieldName==="packet_status"||p.ruleList[t].field.dbFieldName==="status_of_plan"||p.ruleList[t].field.dbFieldName==="parcel_status"||p.ruleList[t].field.dbFieldName==="invoice_status"||p.ruleList[t].field.dbFieldName==="issue_status"||p.ruleList[t].field.dbFieldName==="type_of_plan"){var u=p.ruleList[t].field.dbFieldName;
i.retrieveLotStatus(u,function(z){p.ruleList[t].options=z
})
}else{i.retrieveMasterByFieldById('{"primaryKey": '+p.ruleList[t].field.id+"}",function(z){p.ruleList[t].options=z
})
}}}}else{if(s==="Checkbox"){p.ruleList[t].options=[{label:"True",value:true},{label:"False",value:false}]
}else{if(s==="Pointer"){i.retrieveMasterByFieldById('{"primaryKey": '+x+"}",function(z){p.ruleList[t].options=z
})
}}}p.ruleList[t].showtemplate=false;
p.ruleList[t].values=[];
p.ruleList[t].rowsubmitted=false
}};
p.onOperatorChange=function(s){p.ruleList[s].showtemplate=false;
p.ruleList[s].rowsubmitted=false;
p.ruleList[s].values=[];
var r=p.ruleList[s].operator;
if(!!r){if(r.label==="contains"||r.label==="has no value"||r.label==="has any value"){p.ruleList[s].hint="Enter comma separated list"
}p.ruleList[s].showtemplate=true;
angular.forEach(p.ruleList,function(x){var y=x.field.validationPattern;
var u=false;
var t=false;
var w=false;
var v=y.replace("{","").replace("}","").split(",");
angular.forEach(v,function(z){if(z.indexOf('"isEmployee":')>-1){u=true
}if(z.indexOf('"isDepartment":')>-1){t=true
}if(z.indexOf('"isDesignation":')>-1){w=true
}});
x.multiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(A){var z=A.term;
p.names=[];
if(x.options.length!==0){p.names=angular.copy(x.options);
angular.forEach(x.options,function(B){p.names.push({id:B.value,text:B.label})
})
}A.callback({results:p.names})
}};
x.multiselectSingleComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(A){var z=A.term;
p.names=[];
if(x.options.length!==0){p.names=angular.copy(x.options);
angular.forEach(x.options,function(B){p.names.push({id:B.value,text:B.label})
})
}A.callback({results:p.names})
}};
x.dropdownMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(A){var z=A.term;
p.names=[];
if(x.options.length!==0){p.names=angular.copy(x.options);
angular.forEach(x.options,function(B){p.names.push({id:B.value,text:B.label})
})
}A.callback({results:p.names})
}};
x.dropdownSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(A){var z=A.term;
p.names=[];
if(x.options.length!==0){p.names=angular.copy(x.options);
angular.forEach(x.options,function(B){p.names.push({id:B.value,text:B.label})
})
}A.callback({results:p.names})
}};
x.subEntityMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(A){var z=A.term;
p.names=[];
if(x.options.length!==0){p.names=angular.copy(x.options);
angular.forEach(x.options,function(B){p.names.push({id:B.value,text:B.label})
})
}A.callback({results:p.names})
}};
x.subEntitySingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(A){var z=A.term;
p.names=[];
if(x.options.length!==0){p.names=angular.copy(x.options);
angular.forEach(x.options,function(B){p.names.push({id:B.value,text:B.label})
})
}A.callback({results:p.names})
}};
x.pointerMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(A){var z=A.term;
p.names=[];
if(x.options.length!==0){p.names=angular.copy(x.options);
angular.forEach(x.options,function(B){p.names.push({id:B.value,text:B.label})
})
}A.callback({results:p.names})
}};
x.pointerSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(A){var z=A.term;
p.names=[];
if(x.options.length!==0){p.names=angular.copy(x.options);
angular.forEach(x.options,function(B){p.names.push({id:B.value,text:B.label})
})
}A.callback({results:p.names})
}};
x.userMultiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(z,A){},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(C){var B=C.term;
p.names=[];
var D=function(E){if(E.length!==0){p.names=E;
angular.forEach(E,function(F){p.names.push({id:F.value+":"+F.description,text:F.label})
})
}C.callback({results:p.names})
};
var z=function(){};
if(u&&B.substring(0,2)==="@E"||B.substring(0,2)==="@e"){var A=C.term.slice(2);
k.retrieveUserList(A.trim(),D,z)
}else{if(t&&B.substring(0,2)==="@D"||B.substring(0,2)==="@d"){var A=C.term.slice(2);
k.retrieveDepartmentList(A.trim(),D,z)
}else{if(w&&B.substring(0,2)==="@R"||B.substring(0,2)==="@r"){var A=C.term.slice(2);
k.retrieveRoleList(A.trim(),D,z)
}else{C.callback({results:p.names})
}}}}};
x.userSingleselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(z,B){var A=[];
B(A)
},formatResult:function(z){return z.text
},formatSelection:function(z){return z.text
},query:function(C){var B=C.term;
p.names=[];
var D=function(E){if(E.length!==0){p.names=E;
angular.forEach(E,function(F){p.names.push({id:F.value+":"+F.description,text:F.label})
})
}C.callback({results:p.names})
};
var z=function(){};
if(u&&B.substring(0,2)==="@E"||B.substring(0,2)==="@e"){var A=C.term.slice(2);
k.retrieveUserList(A.trim(),D,z)
}else{if(t&&B.substring(0,2)==="@D"||B.substring(0,2)==="@d"){var A=C.term.slice(2);
k.retrieveDepartmentList(A.trim(),D,z)
}else{if(w&&B.substring(0,2)==="@R"||B.substring(0,2)==="@r"){var A=C.term.slice(2);
k.retrieveRoleList(A.trim(),D,z)
}else{}}}}}
});
p.ruleList[s].showtemplate=true
}else{p.ruleList[s].showtemplate=false
}};
p.onOperatorClick=function(r){p.ruleList[r].showtemplate=false;
p.ruleList[r].rowsubmitted=false
};
p.addRule=function(v,s){p.ruleList[s].rowsubmitted=true;
if(v.$valid){var r=true;
var u=p.ruleList[s].operator.shortcutCode;
for(var t=0;
t<u;
t++){var y=p.ruleList[s].values[t];
if(p.ruleList[s].operator.label!=="has no value"&&p.ruleList[s].operator.label!=="has any value"){if(p.ruleList[s].field.type==="MultiSelect"){var x=p.ruleList[s].values;
r=(r&&true)
}else{if(y!==null&&y!==undefined){r=(r&&true)
}else{r=false
}}}else{r=(r&&true)
}}if(r){var w=d();
p.ruleList.push(w)
}}};
p.remove=function(r){p.ruleList.splice(r,1);
if(p.ruleList.length===0){var s=d();
p.ruleList.push(s);
p.ruleList[r].rowsubmitted=false
}};
p.save=function(u){p.ruleSubmitted=true;
var w=[];
var t=p.ruleList.length;
for(var s=0;
s<t;
s++){p.ruleList[s].rowsubmitted=true;
var x={};
x=angular.copy(p.ruleList[s]);
var v={};
v.id=s;
v.entity=x.entity;
v.field=x.field.id;
v.operator=x.operator.label;
v.fieldType=x.field.type;
if(v.fieldType!=="Pointer"&&v.fieldType!=="SubEntity"){if(v.fieldType!=="Date range"&&v.fieldType!=="UserMultiSelect"&&v.fieldType!=="MultiSelect"&&v.fieldType!=="Dropdown"){v.value=x.values[0];
if(x.values.length>1){v.value1=x.values[1]
}}else{if(v.fieldType!=="UserMultiSelect"&&v.fieldType!=="MultiSelect"&&v.fieldType!=="Dropdown"){v.value=x.values[0]+","+x.values[1]
}else{if(x.operator.label!=="has any value from"){if(x.values.toString().indexOf(",")>-1){x.values.toString().replace(/,/g,"")
}}v.value=x.values
}if(x.values.length>1&&v.fieldType!=="UserMultiSelect"&&v.fieldType!=="MultiSelect"&&v.fieldType!=="Dropdown"){v.value1=x.values[2]+","+x.values[3]
}}}else{if(v.fieldType==="SubEntity"){if(x.field.subentityDropListType==="Date "){v.value=x.values[0];
if(x.values.length>1){v.value1=x.values[1]
}}else{if(x.operator.label!=="has any value from"){if(x.values.toString().indexOf(",")>-1){x.values.toString().replace(/,/g,"")
}}v.value=x.values
}if(x.values.length>1&&x.field.subentityDropListType==="Date "){v.value1=x.values[2]+","+x.values[3]
}}else{if(x.field.pointertype!=="MultiSelect"&&x.field.pointertype!=="Dropdown"){v.value=x.values[0];
if(x.values.length>1){v.value1=x.values[1]
}}else{if(x.field.pointertype!=="MultiSelect"&&x.field.pointertype!=="Dropdown"){v.value=x.values[0]+","+x.values[1]
}else{if(x.operator.label!=="has any value from"){if(x.values.toString().indexOf(",")>-1){x.values.toString().replace(/,/g,"")
}}v.value=x.values
}if(x.values.length>1&&x.field.pointertype!=="MultiSelect"&&x.field.pointertype!=="Dropdown"){v.value1=x.values[2]+","+x.values[3]
}}}}w.push(v)
}if(u.$valid){p.ruleObject.criterias=angular.copy(w);
p.ruleObject.isArchive=!p.ruleObject.isActive;
if(p.selectedRule===null||p.selectedRule.id===undefined||p.selectedRule.id===null){if(p.ruleObject.id===null){h++;
p.ruleObject.id=h
}if(!!!p.allRules){p.allRules=[]
}p.allRules.push(p.ruleObject);
p.selectedRule=p.ruleObject
}else{var r=0;
$.grep(p.allRules,function(z,y){if(z.id===p.ruleObject.id){r=y;
return true
}});
p.allRules[r].ruleName=angular.copy(p.ruleObject.ruleName);
p.allRules[r].remarks=angular.copy(p.ruleObject.remarks);
p.allRules[r].apply=angular.copy(p.ruleObject.apply);
p.allRules[r].criterias=angular.copy(p.ruleObject.criterias);
p.allRules[r].isActive=angular.copy(p.ruleObject.isActive);
p.allRules[r].isArchive=angular.copy(p.ruleObject.isArchive);
if(p.isEditRule){p.reset(u)
}}p.ruleSubmitted=false
}};
p.saveAndSubmit=function(v){p.submitted=true;
p.save(v);
if(v.$valid&&p.allRules.length>0){var t={};
t.rules=p.allRules;
t.rules[0].apply=p.goalTemplate.apply;
var w="";
var s="";
var u="";
if(m.goalTemplatePayload.type==1){w=m.goalTemplatePayload.service
}if(m.goalTemplatePayload.type==2){s=m.goalTemplatePayload.designation
}if(m.goalTemplatePayload.type==3){u=m.goalTemplatePayload.selectedDepartment.id
}var r={id:p.goalTemplate.id,status:p.goalTemplate.status,name:p.goalTemplate.name,description:p.goalTemplate.description,period:p.goalTemplate.period,type:p.goalTemplate.type,ruleList:t,isGenVal:p.goalTemplate.isGenVal,genvaltype:p.goalTemplate.genvaltype,genvalvalue:p.goalTemplate.genvalvalue,isValGoalAchieved:p.goalTemplate.isValGoalAchieved,valgoalachievedtype:p.goalTemplate.valgoalachievedtype,valgoalachievedvalue:p.goalTemplate.valgoalachievedvalue,isValGoalNotAchieved:p.goalTemplate.isValGoalNotAchieved,valgoalnotachievedtype:p.goalTemplate.valgoalnotachievedtype,valgoalnotachievedvalue:p.goalTemplate.valgoalnotachievedvalue,for_service:parseInt(w),for_designation:parseInt(s),for_department:parseInt(u)};
if(!!p.goalTemplate.copyOf){r.copyOf=p.goalTemplate.copyOf.id
}r.goalCustom=p.dynamicGoalData;
r.dbType=p.dbType;
q.saveGoalTemplate(r,function(y){var z=[];
if(m.goalTemplatePayload.goalTemplatesSelected===null){m.goalTemplatePayload.goalTemplatesSelected=[]
}else{z=m.goalTemplatePayload.goalTemplatesSelected.split(",")
}if(!!m.goalTemplatePayload.editGoalTemplateId){var x=z.indexOf(m.goalTemplatePayload.editGoalTemplateId.toString());
if(x>-1){z.splice(x,1)
}}if(!!y){z.push(parseInt(y.id))
}m.goalTemplatePayload.goalTemplatesSelected=z.toString();
$("#scrollable-dropdown-menu.typeahead").typeahead("val","");
p.goalTemplate={};
p.dynamicGoalData={};
g.path("/managegoal")
},function(){console.log("failure")
});
p.allRules=[]
}else{return
}};
p.cancelNewTemplate=function(){g.path("/managegoal")
};
p.loadDataOfCopy=function(){if(!!p.goalTemplate.copyOf){q.retrieveGoalTemplateById(p.goalTemplate.copyOf,function(r){p.goalTemplate.name=r.name;
p.goalTemplate.description=r.description;
p.goalTemplate.period=r.period;
p.goalTemplate.type=r.type;
if(!!r.ruleList){p.allRules=r.ruleList.rules;
p.goalTemplate.apply=r.ruleList.rules[0].apply
}p.goalTemplate.isGenVal=r.isGenVal;
p.goalTemplate.genvaltype=r.genvaltype;
p.goalTemplate.genvalvalue=r.genvalvalue;
p.goalTemplate.isValGoalAchieved=r.isValGoalAchieved;
p.goalTemplate.valgoalachievedtype=r.valgoalachievedtype;
p.goalTemplate.valgoalachievedvalue=r.valgoalachievedvalue;
p.goalTemplate.isValGoalNotAchieved=r.isValGoalNotAchieved;
p.goalTemplate.valgoalnotachievedtype=r.valgoalnotachievedtype;
p.goalTemplate.valgoalnotachievedvalue=r.valgoalnotachievedvalue;
p.dynamicGoalData=r.goalCustom;
if(!!p.dynamicGoalData){angular.forEach(p.listOfModelsOfDateType,function(s){if(p.dynamicGoalData.hasOwnProperty(s)){if(p.dynamicGoalData[s]!==null&&p.dynamicGoalData[s]!==undefined){p.dynamicGoalData[s]=new Date(p.dynamicGoalData[s])
}else{p.dynamicGoalData[s]=""
}}})
}},function(){console.log("Failed to retrieve data")
})
}};
p.onRuleChange=function(){console.log("$scope.goalTemplate.copyOf :"+p.goalTemplate.copyOf);
if(p.goalTemplate.copyOf===undefined||p.goalTemplate.copyOf===null){p.ruleList=[];
p.initData()
}else{var r=p.goalTemplateList[p.goalTemplateList.indexOf(p.goalTemplate.copyOf)];
if(!!!p.goalTemplate.name){p.goalTemplate.name="copy of "+r.name
}if(!!!p.goalTemplate.name){p.goalTemplate.description=r.description
}p.goalTemplate.period=r.period;
console.log("tyep :"+r.type);
p.goalTemplate.type=r.type;
if(!!r.ruleList){p.allRules=r.ruleList.rules;
p.goalTemplate.apply=r.ruleList.rules[0].apply
}p.goalTemplate.isGenVal=r.isGenVal;
p.goalTemplate.genvaltype=r.genvaltype;
p.goalTemplate.genvalvalue=r.genvalvalue;
p.goalTemplate.isValGoalAchieved=r.isValGoalAchieved;
p.goalTemplate.valgoalachievedtype=r.valgoalachievedtype;
p.goalTemplate.valgoalachievedvalue=r.valgoalachievedvalue;
p.goalTemplate.isValGoalNotAchieved=r.isValGoalNotAchieved;
p.goalTemplate.valgoalnotachievedtype=r.valgoalnotachievedtype;
p.goalTemplate.valgoalnotachievedvalue=r.valgoalnotachievedvalue;
p.dynamicGoalData=r.goalCustom;
if(!!p.dynamicGoalData){angular.forEach(p.listOfModelsOfDateType,function(s){if(p.dynamicGoalData.hasOwnProperty(s)){if(p.dynamicGoalData[s]!==null&&p.dynamicGoalData[s]!==undefined){p.dynamicGoalData[s]=new Date(p.dynamicGoalData[s])
}else{p.dynamicGoalData[s]=""
}}})
}if(p.goalTemplateList[p.goalTemplateList.indexOf(p.goalTemplate.copyOf)].ruleList!==null&&p.goalTemplateList[p.goalTemplateList.indexOf(p.goalTemplate.copyOf)].ruleList!==undefined){b(p.goalTemplateList[p.goalTemplateList.indexOf(p.goalTemplate.copyOf)].ruleList.rules[0])
}}};
function b(t){p.ruleObject={};
p.ruleList=[];
if(t!==null&&t!==undefined){p.ruleObject.id=t.id;
p.ruleObject.isActive=t.isActive;
p.ruleObject.isArchive=t.isArchive;
p.ruleObject.remarks=t.remarks;
p.ruleObject.ruleName=t.ruleName;
p.ruleObject.apply=t.apply;
var r=0;
for(var s=0;
s<t.criterias.length;
s++){if(t.criterias[s].id>r){r=t.criterias[s].id
}}p.lastRuleId=r;
j(t.criterias,0)
}}function j(u,s){if(s<u.length){var t={};
t.values=[];
t.options=null;
t.hint="Enter value";
if(u[s].fieldType==="Date range"){t.values[0]=u[s].value.split(",")[0];
t.values[1]=u[s].value.split(",")[1];
if(u[s].value1!==null){t.values[2]=u[s].value1.split(",")[0];
t.values[3]=u[s].value1.split(",")[1]
}}else{if(u[s].fieldType!=="Pointer"&&u[s].fieldType!=="SubEntity"){if(u[s].fieldType==="MultiSelect"||u[s].fieldType==="Dropdown"){t.values=u[s].value
}else{t.values[0]=u[s].value;
if(u[s].value1!==null){t.values[1]=u[s].value1
}}}else{if(u[s].fieldType==="SubEntity"){if(u[s].subentityComponentType!=="Date"){t.values=u[s].value
}else{t.values[0]=u[s].value;
if(u[s].value1!==null){t.values[1]=u[s].value1
}}}else{if(u[s].pointerComponentType==="MultiSelect"||u[s].pointerComponentType==="Dropdown"){t.values=u[s].value
}else{t.values[0]=u[s].value;
if(u[s].value1!==null){t.values[1]=u[s].value1
}}}}}t.id=u[s].id;
t.entity=u[s].entity.toString();
var v=u[s].field;
var r=u[s].operator;
if(parseInt(t.entity)<0){if(parseInt(t.entity)>=-3&&parseInt(t.entity)<=-1){t.fieldList=p.fieldListForAct
}else{t.fieldList=p.fieldListForSer
}$.grep(t.fieldList,function(x,w){if(x.id==v){t.field=t.fieldList[w];
return true
}});
f(t,r,u,s)
}else{i.retrieveFieldsByEntity('{"primaryKey": '+t.entity+"}",function(w){t.fieldList=w;
$.grep(t.fieldList,function(y,x){if(y.id==v){t.field=t.fieldList[x];
return true
}});
f(t,r,u,s)
})
}}}function f(y,s,B,x){y.operatorList=[];
if(y.field.type!=="SubEntity"){y.operatorList=p.operators[c[y.field.type]]
}else{y.operatorList=p.operators[c.Dropdown]
}$.grep(y.operatorList,function(D,C){if(D.label===s){y.operator=y.operatorList[C];
return true
}});
if(y.field.type==="Dropdown"||y.field.type==="Radio button"||y.field.type==="MultiSelect"){if(parseInt(y.entity)<=-1&&parseInt(y.entity)>=-3&&parseInt(y.field.id)!==-1){i.retrieveActivityMasterByFieldById('{"primaryKey": '+p.version+"}",function(C){y.options=C;
$.grep(y.options,function(E,D){if(E.value===y.value){y.value[0]=y.options[D];
return true
}});
if(y.value1!==null){$.grep(y.options,function(E,D){if(E.value===y.value1){y.value[1]=y.options[D];
return true
}})
}})
}else{if(parseInt(y.entity)<=-4&&parseInt(y.entity)>=-6&&parseInt(y.field.id)!==-1){i.retrieveServiceMasterByFieldById('{"primaryKey": '+p.version+"}",function(C){y.options=C;
$.grep(y.options,function(E,D){if(E.value===y.value){y.value[0]=y.options[D];
return true
}});
if(y.value1!==null){$.grep(y.options,function(E,D){if(E.value===y.value1){y.value[1]=y.options[D];
return true
}})
}})
}else{if(y.field.dbFieldName==="lot_status"||y.field.dbFieldName==="packet_status"||y.field.dbFieldName==="status_of_plan"||y.field.dbFieldName==="parcel_status"||y.field.dbFieldName==="invoice_status"||y.field.dbFieldName==="issue_status"||y.field.dbFieldName==="type_of_plan"){var r=y.field.dbFieldName;
i.retrieveLotStatus(r,function(C){y.options=C;
$.grep(y.options,function(E,D){if(E.value===y.value){y.value[0]=y.options[D];
return true
}});
if(y.value1!==null){$.grep(y.options,function(E,D){if(E.value===y.value1){y.value[1]=y.options[D];
return true
}})
}})
}else{i.retrieveMasterByFieldById('{"primaryKey": '+y.field.id+"}",function(C){y.options=C;
if(y.field.type!=="MultiSelect"){$.grep(y.options,function(E,D){if(E.value===y.value){y.value[0]=y.options[D];
return true
}});
if(y.value1!==null){$.grep(y.options,function(E,D){if(E.value===y.value1){y.value[1]=y.options[D];
return true
}})
}}})
}}}}else{if(y.field.type==="Checkbox"){y.options=[{label:"True",value:true},{label:"False",value:false}]
}else{if(y.field.type==="Pointer"){var u;
var A=y.field.validationPattern.replace("{","").replace("}","");
var v=[];
var t=[];
var z;
v=A.split(",");
angular.forEach(v,function(C){if(C.indexOf('"pointer":')>-1){t=C.split(":");
z=t[1].replace(/["']/g,"");
y.field.pointerId=z
}});
angular.forEach(y.fieldList,function(C){if(C.id.toString()===z.toString()){u=C.type;
y.field.pointertype=u
}});
i.retrieveMasterByFieldById('{"primaryKey": '+z+"}",function(C){y.options=C
})
}else{if(y.field.type==="SubEntity"){y.field.subEntityType="Dropdown";
i.retrieveDropListForSubEntity(y.field.id,function(C){y.options=C
})
}}}}y.showtemplate=false;
y.showtemplate=true;
function w(){if(y.field.type==="MultiSelect"){i.retrieveMasterByFieldById('{"primaryKey": '+y.field.id+"}",function(C){y.options=C
})
}}p.ruleList[x]=y;
x++;
j(B,x);
w();
if(y.field.type==="MultiSelect"){angular.forEach(p.ruleList,function(D){var C=angular.copy(D.values);
D.multiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(E,G){var F=[];
i.retrieveMasterByFieldById('{"primaryKey": '+D.field.id+"}",function(H){p.optionsMultiSelect=H;
var J=[];
J=angular.copy(C.toString().replace("[","").replace("]","").split(","));
var I=angular.copy(D.values);
angular.forEach(J,function(K){angular.forEach(p.optionsMultiSelect,function(L){if(K.toString()===L.value.toString()){F.push({id:L.value,text:L.label})
}})
});
G(F);
D.values=angular.copy(I)
})
},formatResult:function(E){return E.text
},formatSelection:function(E){return E.text
},query:function(F){var E=F.term;
p.names=[];
if(D.options.length!==0){p.names=angular.copy(D.options);
angular.forEach(D.options,function(G){p.names.push({id:G.value,text:G.label})
})
}F.callback({results:p.names})
}};
D.multiselectSingleComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(E,G){var F=[];
i.retrieveMasterByFieldById('{"primaryKey": '+D.field.id+"}",function(H){p.optionsMultiSelect=H;
var J=[];
J=angular.copy(C.toString().replace("[","").replace("]","").split(","));
var I=angular.copy(D.values);
angular.forEach(J,function(K){angular.forEach(p.optionsMultiSelect,function(L){if(K.toString()===L.value.toString()){F.push({id:L.value,text:L.label})
}})
});
G(F);
D.values=angular.copy(I)
})
},formatResult:function(E){return E.text
},formatSelection:function(E){return E.text
},query:function(F){var E=F.term;
p.names=[];
if(D.options.length!==0){p.names=angular.copy(D.options);
angular.forEach(D.options,function(G){p.names.push({id:G.value,text:G.label})
})
}F.callback({results:p.names})
}}
})
}if(y.field.type==="Pointer"){angular.forEach(p.ruleList,function(D){var E;
if(y.field.pointerId!==null&&y.field.pointerId!==undefined){E=y.field.pointerId.replace('"',"")
}var C=angular.copy(D.values);
D.pointerMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(F,H){var G=[];
i.retrieveMasterByFieldById('{"primaryKey": '+E+"}",function(I){p.optionspointerMultiSelect=I;
var J=[];
J=angular.copy(C.toString().replace("[","").replace("]","").split(","));
var K=angular.copy(D.values);
angular.forEach(J,function(L){angular.forEach(p.optionspointerMultiSelect,function(M){if(L.toString()===M.value.toString()){G.push({id:M.value,text:M.label})
}})
});
H(G);
D.values=angular.copy(K)
})
},formatResult:function(F){return F.text
},formatSelection:function(F){return F.text
},query:function(G){var F=G.term;
p.names=[];
if(D.options.length!==0){p.names=angular.copy(D.options);
angular.forEach(D.options,function(H){p.names.push({id:H.value,text:H.label})
})
}G.callback({results:p.names})
}};
D.pointerSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(F,I){var G=[];
var H=D.field.pointerId.replace('"',"");
i.retrieveMasterByFieldById('{"primaryKey": '+H+"}",function(K){p.optionsSingleSelectPointer=K;
var L=[];
L=angular.copy(C.toString().replace("[","").replace("]","").split(","));
var J=angular.copy(D.values);
angular.forEach(L,function(M){angular.forEach(p.optionsSingleSelectPointer,function(N){if(M.toString()===N.value.toString()){G.push({id:N.value,text:N.label})
}})
});
I(G);
D.values=angular.copy(J)
})
},formatResult:function(F){return F.text
},formatSelection:function(F){return F.text
},query:function(G){var F=G.term;
p.names=[];
if(D.options.length!==0){p.names=angular.copy(D.options);
angular.forEach(D.options,function(H){p.names.push({id:H.value,text:H.label})
})
}G.callback({results:p.names})
}}
})
}if(y.field.type==="SubEntity"){angular.forEach(p.ruleList,function(D){var E;
if(y.field.pointerId!==null&&y.field.pointerId!==undefined){E=y.field.pointerId.replace('"',"")
}var C=angular.copy(D.values);
D.subEntityMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(F,H){var G=[];
i.retrieveDropListForSubEntity(D.field.id,function(J){p.optionsSubentityMultiSelect=J;
var K=[];
K=angular.copy(C.toString().replace("[","").replace("]","").split(","));
var I=angular.copy(D.values);
angular.forEach(K,function(L){angular.forEach(p.optionsSubentityMultiSelect,function(M){if(L.toString()===M.value.toString()){G.push({id:M.value,text:M.label})
}})
});
H(G);
D.values=angular.copy(I)
})
},formatResult:function(F){return F.text
},formatSelection:function(F){return F.text
},query:function(G){var F=G.term;
p.names=[];
if(D.options.length!==0){p.names=angular.copy(D.options);
angular.forEach(D.options,function(H){p.names.push({id:H.value,text:H.label})
})
}G.callback({results:p.names})
}};
D.subEntitySingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(F,H){var G=[];
i.retrieveDropListForSubEntity(D.field.id,function(J){p.optionsSubentitySingleSelect=J;
var K=[];
K=angular.copy(C.toString().replace("[","").replace("]","").split(","));
var I=angular.copy(D.values);
angular.forEach(K,function(L){angular.forEach(p.optionsSubentitySingleSelect,function(M){if(L.toString()===M.value.toString()){G.push({id:M.value,text:M.label})
}})
});
H(G);
D.values=angular.copy(I)
})
},formatResult:function(F){return F.text
},formatSelection:function(F){return F.text
},query:function(G){var F=G.term;
p.names=[];
if(D.options.length!==0){p.names=angular.copy(D.options);
angular.forEach(D.options,function(H){p.names.push({id:H.value,text:H.label})
})
}G.callback({results:p.names})
}}
})
}if(y.field.type==="Dropdown"){angular.forEach(p.ruleList,function(D){if(y.id===D.id){var C=angular.copy(D.values);
D.dropdownMultiSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select ",initSelection:function(G,J){var H=[];
var I=function(K){p.optionsDropdown=K;
var M=[];
M=angular.copy(C.toString().replace("[","").replace("]","").split(","));
var L=angular.copy(D.values);
angular.forEach(M,function(N){angular.forEach(p.optionsDropdown,function(O){if(N.toString()===O.value.toString()){H.push({id:O.value,text:O.label})
}})
});
J(H);
D.values=angular.copy(L)
};
var E=function(){};
if(parseInt(y.entity)<=-1&&parseInt(y.entity)>=-3&&parseInt(y.field.id)!==-1){i.retrieveActivityMasterByFieldById('{"primaryKey": '+p.version+"}",I,E)
}else{if(parseInt(y.entity)<=-4&&parseInt(y.entity)>=-6&&parseInt(y.field.id)!==-1){i.retrieveServiceMasterByFieldById('{"primaryKey": '+p.version+"}",I,E)
}else{if(y.field.dbFieldName==="lot_status"||y.field.dbFieldName==="packet_status"||y.field.dbFieldName==="status_of_plan"||y.field.dbFieldName==="parcel_status"||y.field.dbFieldName==="invoice_status"||y.field.dbFieldName==="issue_status"||y.field.dbFieldName==="type_of_plan"){var F=y.field.dbFieldName;
i.retrieveLotStatus(F,I,E)
}else{i.retrieveMasterByFieldById('{"primaryKey": '+D.field.id+"}",I,E)
}}}},formatResult:function(E){return E.text
},formatSelection:function(E){return E.text
},query:function(F){var E=F.term;
p.names=[];
if(D.options.length!==0){p.names=angular.copy(D.options);
angular.forEach(D.options,function(G){p.names.push({id:G.value,text:G.label})
})
}F.callback({results:p.names})
}};
D.dropdownSingleSelectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(G,J){var H=[];
var I=function(K){p.optionsDropdown=K;
var M=[];
M=angular.copy(C.toString().replace("[","").replace("]","").split(","));
var L=angular.copy(D.values);
angular.forEach(M,function(N){angular.forEach(p.optionsDropdown,function(O){if(N.toString()===O.value.toString()){H.push({id:O.value,text:O.label})
}})
});
J(H);
D.values=angular.copy(L)
};
var E=function(){};
if(parseInt(y.entity)<=-1&&parseInt(y.entity)>=-3&&parseInt(y.field.id)!==-1){i.retrieveActivityMasterByFieldById('{"primaryKey": '+p.version+"}",I,E)
}else{if(parseInt(y.entity)<=-4&&parseInt(y.entity)>=-6&&parseInt(y.field.id)!==-1){i.retrieveServiceMasterByFieldById('{"primaryKey": '+p.version+"}",I,E)
}else{if(y.field.dbFieldName==="lot_status"||y.field.dbFieldName==="packet_status"||y.field.dbFieldName==="status_of_plan"||y.field.dbFieldName==="parcel_status"||y.field.dbFieldName==="invoice_status"||y.field.dbFieldName==="issue_status"||y.field.dbFieldName==="type_of_plan"){var F=y.field.dbFieldName;
i.retrieveLotStatus(F,I,E)
}else{i.retrieveMasterByFieldById('{"primaryKey": '+D.field.id+"}",I,E)
}}}},formatResult:function(E){return E.text
},formatSelection:function(E){return E.text
},query:function(F){var E=F.term;
p.names=[];
if(D.options.length!==0){p.names=angular.copy(D.options);
angular.forEach(D.options,function(G){p.names.push({id:G.value,text:G.label})
})
}F.callback({results:p.names})
}}
}})
}if(y.field.type==="UserMultiSelect"){angular.forEach(p.ruleList,function(G){var H=G.field.validationPattern;
var D=false;
var C=false;
var F=false;
var E=H.replace("{","").replace("}","").split(",");
angular.forEach(E,function(I){if(I.indexOf('"isEmployee":')>-1){D=true
}if(I.indexOf('"isDepartment":')>-1){C=true
}if(I.indexOf('"isDesignation":')>-1){F=true
}});
G.userMultiselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",initSelection:function(J,N){var L=[];
var K=angular.copy(G.values);
var M=G.values.toString().split(",");
var I=[];
if(M!==undefined){angular.forEach(M,function(O){O=O.replace('"',"").trim();
I.push(O)
});
n.defaultSelection(I,function(O){var P=[];
p.result=JSON.parse(angular.toJson(O));
for(key in p.result){P.push({id:key,text:O[key]})
}N(P);
G.values=angular.copy(K)
},function(){})
}},formatResult:function(I){return I.text
},formatSelection:function(I){return I.text
},query:function(L){var K=L.term;
p.names=[];
var M=function(N){if(N.length!==0){p.names=N;
angular.forEach(N,function(O){p.names.push({id:O.value+":"+O.description,text:O.label})
})
}L.callback({results:p.names})
};
var I=function(){};
if(D&&K.substring(0,2)==="@E"||K.substring(0,2)==="@e"){var J=L.term.slice(2);
k.retrieveUserList(J.trim(),M,I)
}else{if(C&&K.substring(0,2)==="@D"||K.substring(0,2)==="@d"){var J=L.term.slice(2);
k.retrieveDepartmentList(J.trim(),M,I)
}else{if(F&&K.substring(0,2)==="@R"||K.substring(0,2)==="@r"){var J=L.term.slice(2);
k.retrieveRoleList(J.trim(),M,I)
}}}}};
G.values=G.values.toString();
G.userSingleselectComponent={multiple:true,closeOnSelect:false,placeholder:"Select",maximumSelectionSize:1,initSelection:function(K,N){var L=[];
var J=angular.copy(G.values);
var M=G.values.toString().split(",");
var I=[];
if(M!==undefined){angular.forEach(M,function(O){O=O.replace('"',"").trim();
I.push(O)
});
n.defaultSelection(I,function(O){var P=[];
p.result=JSON.parse(angular.toJson(O));
for(key in p.result){P.push({id:key,text:O[key]})
}N(P);
G.values=angular.copy(J)
},function(){})
}},formatResult:function(I){return I.text
},formatSelection:function(I){return I.text
},query:function(L){var K=L.term;
p.names=[];
var M=function(N){if(N.length!==0){p.names=N;
angular.forEach(N,function(O){p.names.push({id:O.value+":"+O.description,text:O.label})
})
}L.callback({results:p.names})
};
var I=function(){};
if(D&&K.substring(0,2)==="@E"||K.substring(0,2)==="@e"){var J=L.term.slice(2);
k.retrieveUserList(J.trim(),M,I)
}else{if(C&&K.substring(0,2)==="@D"||K.substring(0,2)==="@d"){var J=L.term.slice(2);
k.retrieveDepartmentList(J.trim(),M,I)
}else{if(F&&K.substring(0,2)==="@R"||K.substring(0,2)==="@r"){var J=L.term.slice(2);
k.retrieveRoleList(J.trim(),M,I)
}else{if(K.substring(0,2)==="@A"||K.substring(0,2)==="@a"){var J=L.term.slice(2);
k.retrieveActivityList(J.trim(),M,I)
}else{L.callback({results:p.names})
}}}}}}
})
}}p.editFromSearch=function(r){q.retrieveGoalTemplateById(r,function(s){p.goal={};
if(!!s){m.goalTemplatePayload.editGoalTemplateId=r;
p.goalTemplate={};
p.dynamicGoalData={};
p.goalTemplate.id=s.id;
p.goalTemplate.status=s.status;
p.goalTemplate.name=s.name;
p.goalTemplate.description=s.description;
p.goalTemplate.period=s.period;
p.goalTemplate.type=s.type;
if(!!s.ruleList){p.allRules=s.ruleList.rules;
p.goalTemplate.apply=s.ruleList.rules[0].apply
}p.goalTemplate.isGenVal=s.isGenVal;
p.goalTemplate.genvaltype=s.genvaltype;
p.goalTemplate.genvalvalue=s.genvalvalue;
p.goalTemplate.isValGoalAchieved=s.isValGoalAchieved;
p.goalTemplate.valgoalachievedtype=s.valgoalachievedtype;
p.goalTemplate.valgoalachievedvalue=s.valgoalachievedvalue;
p.goalTemplate.isValGoalNotAchieved=s.isValGoalNotAchieved;
p.goalTemplate.valgoalnotachievedtype=s.valgoalnotachievedtype;
p.goalTemplate.valgoalnotachievedvalue=s.valgoalnotachievedvalue;
p.dynamicGoalData=s.goalCustom;
if(!!p.dynamicGoalData){angular.forEach(p.listOfModelsOfDateType,function(t){if(p.dynamicGoalData.hasOwnProperty(t)){if(p.dynamicGoalData[t]!==null&&p.dynamicGoalData[t]!==undefined){p.dynamicGoalData[t]=new Date(p.dynamicGoalData[t])
}else{p.dynamicGoalData[t]=""
}}})
}if(!!s.ruleList&&!!s.ruleList.rules){b(s.ruleList.rules[0])
}}},function(){console.log("Failed..")
})
};
p.getSearchedDesignationRecords=function(s){p.searchRecords=[];
var r=$("#scrollable-dropdown-menu.typeahead").typeahead("val");
if(r.length>0){if(r.length<3){p.searchRecords=[]
}else{if(s!==null&&angular.isDefined(s)&&s.length>0){angular.forEach(s,function(t){p.searchRecords.push(t)
})
}}p.displaySearchedGoalTemplate="search";
p.editGoalTemplate=true
}};
p.editGoalTemplateFromSearch=function(r){p.displaySearchedGoalTemplate="view";
p.editFromSearch(r)
};
m.unMaskLoading()
}])
});